{"version":3,"sources":["assets/github1.png","assets/india.png","assets/world.png","serviceWorker.js","components/ui/ErrorBoundry/ErrorBoundry.jsx","components/charts/IndiaMap/IndiaMap.jsx","components/ui/Footer/Footer.jsx","components/container/India/SubComponents/Table.jsx","components/container/India/SubComponents/Cards.jsx","components/ui/Header/Header.jsx","components/charts/TinyChart.jsx","components/container/India/SubComponents/NumbersCard.jsx","components/ui/NavigationBar/NavigationBar.jsx","components/ui/SwitchBar/SwitchBar.jsx","components/charts/SimpleLineChart/SimpleLineChart.jsx","components/charts/PieChart/CustomChart.jsx","components/ui/GradientCardTitle/GradientCardTitle.jsx","components/ui/GradientCardFooter/GradientCardFooter.jsx","components/charts/SimplePieChart/SimplePieChart.jsx","components/container/India/SubComponents/Analytics.jsx","components/container/India/India.jsx","components/container/Global/SubComponents/Table.jsx","components/ui/NumericCard/NumericCard.jsx","components/container/Global/SubComponents/NumberCard.jsx","components/container/Global/SubComponents/Analytics.jsx","components/ui/MapSwitchBar/MapSwitchBar.jsx","components/charts/DataMap/DataMap.jsx","components/container/Global/SubComponents/GlobalMap.jsx","components/ui/DataCard/DataCard.jsx","components/container/Global/SubComponents/Cards.jsx","components/ui/Pagination/Pagination.jsx","components/container/Global/SubComponents/ChartsCard.jsx","components/container/Global/Global.jsx","Routes.jsx","index.js","assets/virus.gif"],"names":["module","exports","Boolean","window","location","hostname","match","ErrorBoundry","props","state","hasError","error","errorInfo","console","this","className","style","display","justifyContent","href","children","React","Component","INDIA_TOPO_JSON","require","PROJECTION_CONFIG","scale","center","COLOR_RANGE","geographyStyle","default","outline","hover","fill","transition","pressed","IndiaMap","data","useState","tooltipContent","setTooltipContent","size","isClient","getSize","width","innerWidth","undefined","height","innerHeight","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useWindowSize","colorScale","scaleLog","domain","range","onMouseEnter","geo","current","value","onMouseLeave","fontWeight","fontSize","color","confirmed","deltaconfirmed","active","recovered","deltarecovered","deaths","deltadeaths","projectionConfig","projection","Math","floor","data-tip","geography","geographies","map","find","s","statecode","id","key","rsmKey","Footer","padding","paddingBottom","border","borderRadius","background","cursor","textDecoration","target","rel","marginRight","icon","Table","india","length","statewise","filter","Number","deltaConfirmed","deltaActive","deltaRecovered","deltaDeaths","columns","Header","accessor","Cell","original","cityData","stateWiseCity","Object","keys","city","districtData","cityColumns","marginTop","defaultPageSize","noDataText","getTheadProps","rowInfo","column","getTdProps","instance","onClick","e","handleOriginal","filterable","SubComponent","row","values","showPagination","Cards","locationLoader","src","Virus","alt","toLowerCase","includes","searchString","index","textAlign","borderTopLeftRadius","borderTopRightRadius","paddingTop","Github","history","push","IndiaIcon","World","TinyChart","updateDimensions","setState","type","dataKey","label","stroke","strokeWidth","dot","PureComponent","NumbersCard","confirmedTinyChartData","cases_time_series","cases","totalconfirmed","name","date","activeTinyChartData","totaldeceased","totalrecovered","deathTinyChartData","recoveredTinyChartData","totalConformedToday","record","totalRecoveredToday","totalDeathsToday","confirmedPopover","recoveredPopover","deathsPopover","marginBottom","body","preferPlace","isOpen","confirmedOpen","onOuterAction","ReactGA","event","category","action","marginLeft","activeOpen","deathsOpen","icons","Analytics","Card","Map","Chart","uiClass","windowWidth","options","option","ui","optionRoutes","SwitchBar","showGlobalChartType","optionValues","borderBottomLeftRadius","borderBottomRightRadius","SimpleLineChart","uv","pv","amt","CustomTooltip","payload","item","chart","Line","Bar","Area","selectChart","Type","LineChart","BarChart","AreaChart","ChartName","strokeDasharray","hide","axis","customTooltip","content","legend","layout","legendLayout","margin","top","left","right","bottom","verticalAlign","labels","stackId","colors","activeDot","r","CustomChart","chartEvents","eventName","callback","chartWrapper","chartType","selectedItem","getChart","getSelection","onPlotClick","rows","setSelection","sliceVisibilityThreshold","headerHeight","backgroundColor","minColor","midColor","maxColor","chartArea","isStacked","position","legendPosition","alignment","hAxis","title","textPosition","textColor","titleTextStyle","vAxis","minValue","generateTooltip","rootProps","onplot","GradientCardTitle","GradientCardFooter","COLORS","SimplePieChart","outerRadius","entry","totalDataDaily","dailyrecovered","Confirmed","dailyconfirmed","Active","dailydeceased","Recovered","Deaths","totalData","dailyConfirmed","dailyActive","dailyRecovered","dailyDeaths","sortable","pieChartData","filterByCases","sort","a","b","slice","sortedCuntryName","multiLineChartData","sortedCountryCode","code","sortedCountryName","dailyConfirmedStatus","dailyStatus","status","dailyRecoveredStatus","dailyDeathsStatus","dailyConfirmedFiltered","arr","toUpperCase","i","count","subArray","colourStyles","control","styles","isDisabled","isFocused","isSelected","countries","nationalityGroup","rawData","nationality","Set","country","ageGroup","genderGroup","unknown","unknownGender","range1","range2","range3","range4","range5","range6","range7","range8","range9","range10","male","female","agebracket","gender","minHeight","paddingLeft","prop","onSwitch","changeChart","grid","isClearable","isSearchable","onChange","selectedOption","onSelectOption","placeholder","emptyClassName","stat","India","chunkArray","array","result","arrayCopy","splice","currentPage","selectedCity","displayBySort","totalPages","activePage","selectedCountry","timelines","isTable","datasets","borderColor","borderWidth","data1","data2","data3","getData","getStateData","getRawData","getDailyStatus","fetch","method","then","res","json","response","catch","raw_data","log","states_daily","route","withRouter","globalData","confirmed_today","deaths_today","tests","totaltests","NumericCard","card","dataToday","showPopover","popoverData","maxHeight","overflowY","borderRight","NumberCard","globalTimelines","reportDate","totalConfirmed","totalRecovered","total","totalDeathsByAge","deathsRate","age","all_cases","replace","confirmed_cases","totalDeathsByCom","deathsBySex","sex","onSwitchBar","MapSwitchBar","mapFilter","MapChart","rotate","d","Countrys","properties","ISO_A2","NAME_LONG","DeathsToday","ConfirmedToday","NAME","GlobalMap","caseType","onMapSwitch","DataMap","onSetTooltipContent","renderTooltipLabelColor","DataCard","showIcon","showData","defaultValue","onSearch","Serious","critical","Tests","LEFT_PAGE","from","to","step","Pagination","gotoPage","page","onPageChanged","f","max","min","paginationData","pageLimit","totalRecords","handleClick","evt","preventDefault","handleMoveLeft","pageNeighbours","handleMoveRight","fetchPageNumbers","totalNumbers","startPage","endPage","pages","hasLeftSpill","hasRightSpill","spillOffset","extraPages","ceil","aria-label","aria-hidden","ChartsCard","Date","todayDate","getMonth","getDate","getFullYear","getChartsData","_","chunk","timeline","index1","timelineitems","total_cases","total_deaths","total_recoveries","new_daily_cases","new_daily_deaths","cardValue","cards","countryitems","countrytimelinedata","info","filteredTitle","totalCases","total_recovered","NewConfirmed","total_new_cases_today","NewDeaths","total_new_deaths_today","countryItemsFiltered","Global","currentCardPage","totalCardPages","getGlobalData","getDailyData","getDeathRates","getCardsData","header","cardId","concat","library","add","fas","brands","createBrowserHistory","initialize","debug","set","pathname","hash","pageview","listen","Index","Fragment","path","component","routing","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"iKAAAA,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,sr5CCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oCCyCSC,G,yDAvDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,UAAU,GAFR,E,8DAUDC,EAAOC,GAEvBC,QAAQF,MAAMA,EAAOC,K,+BAIrB,OAAIE,KAAKL,MAAMC,SAGX,6BACE,6BAASK,UAAU,YACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBACEA,UAAU,YACVC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,WAE1C,yBAAKH,UAAU,0CACb,yBAAKA,UAAU,sBAEf,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,MAAd,yBAEA,0EAEA,uBACEI,KAAK,6DACLJ,UAAU,YAFZ,qBAgBXD,KAAKN,MAAMY,Y,gDA9CYT,GAE9B,MAAO,CAAED,UAAU,O,GARIW,IAAMC,Y,kECI3BC,G,OAAkBC,EAAQ,MAE1BC,EAAoB,CACxBC,MAAO,IACPC,OAAQ,CAAC,QAAS,UAIdC,EAAc,CAAC,UAAW,UAAW,WAIrCC,EAAiB,CACrBC,QAAS,CACPC,QAAS,QAEXC,MAAO,CACLC,KAAM,OACNC,WAAY,YACZH,QAAS,QAEXI,QAAS,CACPJ,QAAS,SAgCb,IA0IeK,EA1IE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACeC,mBAAS,IADxB,mBACtBC,EADsB,KACNC,EADM,KAEvBC,EA9BR,WACE,IAAMC,EAA6B,kBAAXvC,OAExB,SAASwC,IACP,MAAO,CACLC,MAAOF,EAAWvC,OAAO0C,gBAAaC,EACtCC,OAAQL,EAAWvC,OAAO6C,iBAAcF,GANrB,MAUaR,mBAASK,GAVtB,mBAUhBM,EAVgB,KAUJC,EAVI,KAyBvB,OAbAC,qBAAU,WACR,IAAKT,EACH,OAAO,EAGT,SAASU,IACPF,EAAcP,KAIhB,OADAxC,OAAOkD,iBAAiB,SAAUD,GAC3B,kBAAMjD,OAAOmD,oBAAoB,SAAUF,MACjD,IAEIH,EAKMM,GAEPC,EAAaC,cAAWC,OAAO,CAAC,EAAG,KAAKC,MAAM/B,GAE9CgC,EAAe,SAACC,GAAoC,IAA/BC,EAA8B,uDAApB,CAAEC,MAAO,MAC5C,OAAO,WACLvB,EAAkBsB,KAIhBE,EAAe,WACnBxB,EAAkB,KAGpB,OACE,yBAAKzB,UAAU,YACO,KAAnBwB,EACC,kBAAC,IAAD,KACE,6BACE,0BACEvB,MAAO,CACLiD,WAAY,OACZC,SAAU,GACVC,MAAO,qBAGR5B,EAAe9B,OAElB,6BACA,0BACEO,MAAO,CACLiD,WAAY,OACZC,SAAU,GACVC,MAAO,qBAGR,cACA5B,EAAe6B,UAAW,IACQ,MAAlC7B,EAAe8B,eACd,0BAAMrD,MAAO,CAAEkD,SAAU,GAAID,WAAY,SAAzC,UACW1B,EAAe8B,gBAExB,MAEN,6BACA,0BACErD,MAAO,CACLiD,WAAY,OACZC,SAAU,GACVC,MAAO,oBAGR,WACA5B,EAAe+B,QAElB,6BACA,0BACEtD,MAAO,CACLiD,WAAY,OACZC,SAAU,GACVC,MAAO,oBAGR,cACA5B,EAAegC,UACmB,MAAlChC,EAAe8B,eACd,0BAAMrD,MAAO,CAAEkD,SAAU,GAAID,WAAY,SAAzC,UACW1B,EAAeiC,gBAExB,MAEN,6BACA,0BACExD,MAAO,CACLiD,WAAY,OACZC,SAAU,GACVC,MAAO,qBAGR,WACA5B,EAAekC,OACmB,MAAlClC,EAAe8B,eACd,0BAAMrD,MAAO,CAAEkD,SAAU,GAAID,WAAY,SAAzC,UACW1B,EAAemC,aAExB,MAEN,+BAGF,KACJ,kBAAC,gBAAD,CACEC,iBAAkBlD,EAClBmD,WAAW,cACX7B,OACEN,EAAKG,MAAQ,MAAQH,EAAKG,MAAQ,IAC9B,IACAH,EAAKG,OAAS,KAAOH,EAAKG,MAAQ,IAClC,IACAH,EAAKG,OAAS,IACd,IACAiC,KAAKC,MAAMrC,EAAKG,MAAQ,IAE9BA,MACEH,EAAKG,MAAQ,MAAQH,EAAKG,MAAQ,IAC9B,IACAH,EAAKG,OAAS,KAAOH,EAAKG,MAAQ,IAClC,IACAH,EAAKG,OAAS,IACd,IACAiC,KAAKC,MAAMrC,EAAKG,MAAQ,GAE9BmC,WAAS,IAET,kBAAC,cAAD,CAAaC,UAAWzD,IACrB,qBAAG0D,YACUC,KAAI,SAACrB,GACf,IAAMC,EAAUzB,EAAK8C,MAAK,SAACC,GAAD,OAAOA,EAAEC,YAAcxB,EAAIyB,MACrD,OACE,kBAAC,YAAD,CACEC,IAAK1B,EAAI2B,OACTR,UAAWnB,EACX5B,KAAM6B,EAAUN,EAAWM,EAAQQ,QAxK/B,OAyKJtD,MAAOa,EACP+B,aAAcA,EAAaC,EAAKC,GAChCE,aAAcA,a,QCnIjByB,EAtDA,SAACjF,GACd,OACE,yBAAKQ,MAAO,CAAE0E,QAAS,KACrB,yBACE1E,MAAO,CACLiD,WAAY,OACZhD,QAAS,OACTC,eAAgB,SAChBgD,SAAU,GACVyB,cAAe,KAGjB,yBACE3E,MAAO,CACL4E,OAAQ,kBACRF,QAAS,WACTG,aAAc,EACdC,WAAY,QACZ3B,MAAO,UACP4B,OAAQ,YAGV,uBACE/E,MAAO,CAAEgF,eAAgB,OAAQ7B,MAAO,WACxChD,KAAK,8DACL8E,OAAO,SACPC,IAAI,uBAEJ,0BAAMlF,MAAO,CAAEmF,YAAa,KAC1B,kBAAC,IAAD,CAAiBC,KAAM,CAAC,MAAO,UAAWrF,UAAU,YAPxD,YAaJ,yDAC4B,KAC1B,uBACEC,MAAO,CACLmD,MAAO,UACPF,WAAY,OACZ+B,eAAgB,QAElB7E,KAAK,gCACL+E,IAAI,sBACJD,OAAO,UART,sB,eCsNOI,E,kDAzPb,WAAY7F,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAKT,IAAD,OACD4B,EACwB,IAA5BvB,KAAKN,MAAM8F,MAAMC,OACbzF,KAAKN,MAAM8F,MAAME,UACdC,QAAO,SAAChG,GAAD,MAA2B,UAAhBA,EAAMA,SACxByE,KAAI,SAACzE,GACJ,MAAO,CACLA,MAAOA,EAAMA,MACb2D,UAAWsC,OAAOjG,EAAM2D,WACxBE,OAAQoC,OAAOjG,EAAM6D,QACrBC,UAAWmC,OAAOjG,EAAM8D,WACxBE,OAAQiC,OAAOjG,EAAMgE,QACrBkC,eAAgBD,OAAOjG,EAAM4D,gBAC7BuC,YAAaF,OACXjG,EAAM4D,eACJ5D,EAAM+D,eACN/D,EAAMiE,aAEVmC,eAAgBH,OAAOjG,EAAM+D,gBAC7BsC,YAAaJ,OAAOjG,EAAMiE,iBAGhC,GAEAqC,EACwB,IAA5BjG,KAAKN,MAAM8F,MAAMC,OACb,CACE,CACES,OAAQ,WACRC,SAAU,SAEZ,CACED,OAAQ,YACRC,SAAU,YACVC,KAAM,SAAC1G,GACL,OACE,oCACqC,IAAlCA,EAAM2G,SAASR,eAAuB,KACrC,0BACE3F,MAAO,CACLkD,SAAU,GACVD,WAAY,OACZE,MAAO,YAGT,0BAAMnD,MAAO,CAAEkD,SAAU,GAAID,WAAY,SAAzC,UAGCzD,EAAM2G,SAASR,gBAEjB,IACH,0BAAM5F,UAAU,UAAUP,EAAMuD,UAKxC,CACEiD,OAAQ,SACRC,SAAU,SACVC,KAAM,SAAC1G,GACL,OACE,oCACkC,IAA/BA,EAAM2G,SAASP,YAAoB,KAClC,0BACE5F,MAAO,CACLkD,SAAU,GACVD,WAAY,OACZE,MAAO,YAGT,0BAAMnD,MAAO,CAAEkD,SAAU,GAAID,WAAY,SAAzC,UAGCzD,EAAM2G,SAASP,aAEjB,IACH,0BAAM7F,UAAU,UAAUP,EAAMuD,UAKxC,CACEiD,OAAQ,YACRC,SAAU,YACVC,KAAM,SAAC1G,GACL,OACE,oCACqC,IAAlCA,EAAM2G,SAASN,eAAuB,KACrC,0BACE7F,MAAO,CACLkD,SAAU,GACVD,WAAY,OACZE,MAAO,YAGT,0BAAMnD,MAAO,CAAEkD,SAAU,GAAID,WAAY,SAAzC,UAGCzD,EAAM2G,SAASN,gBAEjB,IACH,0BAAM9F,UAAU,UAAUP,EAAMuD,UAKxC,CACEiD,OAAQ,SACRC,SAAU,SACVC,KAAM,SAAC1G,GACL,OACE,oCACkC,IAA/BA,EAAM2G,SAASL,YAAoB,KAClC,0BACE9F,MAAO,CACLkD,SAAU,GACVD,WAAY,OACZE,MAAO,YAGT,0BAAMnD,MAAO,CAAEkD,SAAU,GAAID,WAAY,SAAzC,UAGCzD,EAAM2G,SAASL,aAEjB,IACH,0BAAM/F,UAAU,UAAUP,EAAMuD,WAM1C,GAEAqD,EACgC,IAApCtG,KAAKN,MAAM6G,cAAcd,OACrBe,OAAOC,KAAKzG,KAAKN,MAAM6G,eAAenC,KAAI,SAACsC,GACzC,OAAO,eACJA,EAAOF,OAAOC,KACb,EAAK/G,MAAM6G,cAAcG,GAAMC,cAC/BvC,KAAI,SAACK,GACL,MAAO,CACLiC,KAAMjC,EACNnB,UAAW,EAAK5D,MAAM6G,cAAcG,GAAMC,aAAalC,GACpDnB,UACHE,OAAQ,EAAK9D,MAAM6G,cAAcG,GAAMC,aAAalC,GACjDjB,OACHC,UAAW,EAAK/D,MAAM6G,cAAcG,GAAMC,aAAalC,GACpDhB,UACHE,OAAQ,EAAKjE,MAAM6G,cAAcG,GAAMC,aAAalC,GACjDd,eAKX,GAEAiD,EACwB,IAA5B5G,KAAKN,MAAM8F,MAAMC,OACb,CACE,CACES,OAAQ,WACRC,SAAU,QAEZ,CACED,OAAQ,YACRC,SAAU,aAEZ,CACED,OAAQ,SACRC,SAAU,UAEZ,CACED,OAAQ,YACRC,SAAU,aAEZ,CACED,OAAQ,SACRC,SAAU,WAGd,GACN,OACE,yBAAKlG,UAAU,MAAMC,MAAO,CAAE2G,UAAW,KACvC,yBAAK5G,UAAU,aACb,yBACEC,MAAO,CACL8E,WAAY,QACZ3B,MAAO,UACP0B,aAAc,KAGhB,kBAAC,IAAD,CACExD,KAAMA,EACN0E,QAASA,EACTa,gBAAiB,GACjB7G,UAAU,sBACV8G,WAAY,4CACZC,cAAe,SAACrH,EAAOsH,EAASC,GAC9B,MAAO,CACLhH,MAAO,CACLiD,WAAY,UAIlBgE,WAAY,SAACxH,EAAOsH,EAASC,EAAQE,GACnC,MAAO,CACLC,QAAS,SAACC,EAAGC,GACPA,GACFA,OAKRC,YAAU,EACVC,aAAc,SAACC,GACb,OAAkC,IAA3BA,EAAIrB,SAAS/C,UAAkB,KACpC,yBAAKpD,MAAO,CAAE0E,QAAS,SACrB,yBAAK1E,MAAO,CAAE6E,aAAc,KAC1B,kBAAC,IAAD,CACExD,KACEiF,OAAOmB,OACLrB,EAASX,QACP,SAAChG,GAAD,OACE6G,OAAOC,KAAK9G,GAAO,KAAO+H,EAAIrB,SAAS1G,SACzC,IACF,GAEJsG,QAASW,EACTE,gBAAiB,EACjBc,gBAAgB,gB,GA5OpBpH,a,iBCuELqH,E,uKAvEH,IAAD,OACP,OACE,yBAAK5H,UAAU,QACkB,IAA9BD,KAAKN,MAAMoI,eACV,6BACE,yBAAKC,IAAKC,IAAOC,IAAI,YAEO,IAA5BjI,KAAKN,MAAM8F,MAAMC,OACnBzF,KAAKN,MAAM8F,MAAME,UACdC,QAAO,SAACrG,GAAD,OACNA,EAASK,MACNuI,cACAC,SAAS,EAAKzI,MAAM0I,aAAaF,kBAErC9D,KAAI,SAAC9E,EAAU+I,GACd,MAA0B,UAAnB/I,EAASK,MACd,yBAAK8E,IAAK4D,EAAOpI,UAAU,WAAWC,MAAO,CAAE0E,QAAS,KACtD,yBACE1E,MAAO,CACLoI,UAAW,SACXvD,aAAc,GACdC,WAAY,QACZ3B,MAAO,YAGT,2BACEnD,MAAO,CACLqI,oBAAqB,GACrBC,qBAAsB,GACtBnF,MAAO,QACPvB,MAAO,OACPsB,SAAU,GACVD,WAAY,OACZyB,QAAS,GACTI,WAAY,YAGb1F,EAASK,OAEZ,6BACA,yBACEM,UAAU,6BACVC,MAAO,CAAEuI,WAAY,GAAI5D,cAAe,KAExC,yBAAK3E,MAAO,CAAE0E,QAAS,GAAIzB,WAAY,SACrC,6BAAM7D,EAASgE,WACf,2CAEF,yBAAKpD,MAAO,CAAE0E,QAAS,GAAIzB,WAAY,SACrC,6BAAM7D,EAASkE,QACf,wCAEF,yBAAKtD,MAAO,CAAE0E,QAAS,GAAIzB,WAAY,SACrC,6BAAM7D,EAASmE,WACf,2CAEF,yBAAKvD,MAAO,CAAE0E,QAAS,GAAIzB,WAAY,SACrC,6BAAM7D,EAASqE,QACf,2CAKN,QAEN,U,GAlEQnD,a,+DCmCL0F,G,OAhCA,SAACxG,GACd,OACE,6BACE,yBAAKO,UAAU,UAAf,mBACmBP,EAAMoC,MAAQ,KAAO,GAAK,YAC3C,uBACEzB,KAAK,8DACL8E,OAAO,SACPC,IAAI,uBAEJ,yBAAK2C,IAAKW,IAAQT,IAAI,SAAShI,UAAU,kBAG7C,yBAAKA,UAAU,oBACb,yBACEoH,QAAS,kBAAM3H,EAAMiJ,QAAQC,KAAK,WAClCb,IAAKc,IACLZ,IAAI,QACJhI,UAAU,eAEZ,0BAAMC,MAAO,CAAEiD,WAAY,SAA3B,UACA,yBACEkE,QAAS,kBAAM3H,EAAMiJ,QAAQC,KAAK,MAClCb,IAAKe,IACLb,IAAI,QACJhI,UAAU,oB,QCzBC8I,E,4MACnBpJ,MAAQ,CAAEmC,MAAO,EAAGG,OAAQ,G,EAE5B+G,iBAAmB,WACjB,EAAKC,SAAS,CAAEnH,MAAOzC,OAAO0C,WAAYE,OAAQ5C,OAAO6C,e,kEAGzD7C,OAAOkD,iBAAiB,SAAUvC,KAAKgJ,oB,6CAGvC3J,OAAOmD,oBAAoB,SAAUxC,KAAKgJ,oB,+BAI1C,OACE,kBAAC,IAAD,CACElH,MAAO9B,KAAKL,MAAMmC,MAAQ,KAAO,IAAM,IACvCG,OAAQjC,KAAKL,MAAMmC,MAAQ,IAAM,GAAK,GACtCP,KAAMvB,KAAKN,MAAM6B,MAEjB,kBAAC,IAAD,CACE2H,KAAK,WACLC,QAASnJ,KAAKN,MAAM0J,MACpBC,OAAQrJ,KAAKN,MAAM2D,MACnBiG,YAAa,EACbC,KAAK,S,GAzBwBC,iB,yBCobxBC,E,kDApbb,WAAY/J,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAKT,IAAD,OACH+J,EAC0B,IAA5B1J,KAAKN,MAAM8F,MAAMC,OACbzF,KAAKN,MAAM8F,MAAMmE,kBAAkBvF,KAAI,SAACwF,GACtC,MAAgC,KAAzBA,EAAMC,eACT,CACEC,KAAMF,EAAMG,KACZzG,UAAWsC,OAAOgE,EAAMC,iBAE1B,QAEN,KAEFG,EAC0B,IAA5BhK,KAAKN,MAAM8F,MAAMC,OACbzF,KAAKN,MAAM8F,MAAMmE,kBAAkBvF,KAAI,SAACwF,GACtC,MAAgC,KAAzBA,EAAMC,eACT,CACEC,KAAMF,EAAMG,KACZzG,UACEsC,OAAOgE,EAAMC,gBACbjE,OAAOgE,EAAMK,eACbrE,OAAOgE,EAAMM,iBAEjB,QAEN,KACFC,EAC0B,IAA5BnK,KAAKN,MAAM8F,MAAMC,OACbzF,KAAKN,MAAM8F,MAAMmE,kBAAkBvF,KAAI,SAACwF,GACtC,MAA+B,KAAxBA,EAAMK,cACT,CACEH,KAAMF,EAAMG,KACZzG,UAAWsC,OAAOgE,EAAMK,gBAE1B,QAEN,KACFG,EAC0B,IAA5BpK,KAAKN,MAAM8F,MAAMC,OACbzF,KAAKN,MAAM8F,MAAMmE,kBAAkBvF,KAAI,SAACwF,GACtC,MAAgC,KAAzBA,EAAMM,eACT,CACEJ,KAAMF,EAAMG,KACZzG,UAAWsC,OAAOgE,EAAMM,iBAE1B,QAEN,KAEAG,EACwB,IAA5BrK,KAAKN,MAAM8F,MAAMC,OACbzF,KAAKN,MAAM8F,MAAME,UAAUC,QACzB,SAAC2E,GAAD,MAA6B,UAAjBA,EAAO3K,SACnB,GAAG4D,eACL,EAEAgH,EACwB,IAA5BvK,KAAKN,MAAM8F,MAAMC,OACbzF,KAAKN,MAAM8F,MAAME,UAAUC,QACzB,SAAC2E,GAAD,MAA6B,UAAjBA,EAAO3K,SACnB,GAAG+D,eACL,EAEA8G,EACwB,IAA5BxK,KAAKN,MAAM8F,MAAMC,OACbzF,KAAKN,MAAM8F,MAAME,UAAUC,QACzB,SAAC2E,GAAD,MAA6B,UAAjBA,EAAO3K,SACnB,GAAGiE,YACL,EAEA6G,EACwB,IAA5BzK,KAAKN,MAAM8F,MAAMC,OACbzF,KAAKN,MAAM8F,MAAME,UACdC,QAAO,SAAC2E,GAAD,MAA6B,UAAjBA,EAAO3K,SAC1BgG,QAAO,SAAChG,GAAD,OAA4C,IAAjCiG,OAAOjG,EAAM4D,mBAC/Ba,KAAI,SAACzE,GACJ,OAAO,eAAGA,EAAMA,MAAQA,EAAM4D,mBAElC,GAEAmH,EACwB,IAA5B1K,KAAKN,MAAM8F,MAAMC,OACbzF,KAAKN,MAAM8F,MAAME,UACdC,QAAO,SAAC2E,GAAD,MAA6B,UAAjBA,EAAO3K,SAC1BgG,QAAO,SAAChG,GAAD,OAA4C,IAAjCiG,OAAOjG,EAAM+D,mBAC/BU,KAAI,SAACzE,GACJ,OAAO,eAAGA,EAAMA,MAAQiG,OAAOjG,EAAM+D,oBAEzC,GACAiH,EACwB,IAA5B3K,KAAKN,MAAM8F,MAAMC,OACbzF,KAAKN,MAAM8F,MAAME,UACdC,QAAO,SAAC2E,GAAD,MAA6B,UAAjBA,EAAO3K,SAC1BgG,QAAO,SAAChG,GAAD,OAAyC,IAA9BiG,OAAOjG,EAAMiE,gBAC/BQ,KAAI,SAACzE,GACJ,OAAO,eAAGA,EAAMA,MAAQiG,OAAOjG,EAAMiE,iBAEzC,GAEN,OACE,yBAAK3D,UAAU,MAAMC,MAAO,CAAE0E,QAAS,sBACrC,yBAAK3E,UAAU,iBAAiBC,MAAO,CAAE0E,QAAS,KAChD,yBACE1E,MAAO,CACL0E,QAAS,GACTzB,WAAY,OACZ6B,WAAY,UACZ3B,MAAO,QACP0B,aAAc,KAGhB,yBAAK7E,MAAO,CAAEkD,SAAU,KACO,IAA5BpD,KAAKN,MAAM8F,MAAMC,OACdzF,KAAKN,MAAM8F,MAAME,UAAUC,QACzB,SAAC2E,GAAD,MAA6B,UAAjBA,EAAO3K,SACnB,GAAG2D,UACL,GAEN,yBACEpD,MAAO,CACLkD,SAAU,GACVwH,aAAc,GACdzK,QAAS,OACTC,eAAgB,WAGlB,0BAAMF,MAAO,CAAEkD,SAAU,GAAID,WAAY,SAAzC,UAC6B,IAA5BnD,KAAKN,MAAM8F,MAAMC,QAGU,qBAFjBzF,KAAKN,MAAM8F,MAAME,UAAUC,QAChC,SAAC2E,GAAD,MAA6B,UAAjBA,EAAO3K,SACnB,GAAG4D,gBAGmB,OAFxBvD,KAAKN,MAAM8F,MAAME,UAAUC,QACzB,SAAC2E,GAAD,MAA6B,UAAjBA,EAAO3K,SACnB,GAAG4D,eACHvD,KAAKN,MAAM8F,MAAME,UAAUC,QACzB,SAAC2E,GAAD,MAA6B,UAAjBA,EAAO3K,SACnB,GAAG4D,eAEP,EAC6B,IAAhCqC,OAAOyE,GACN,kBAAC,IAAD,CACEQ,KACE,yBACE3K,MAAO,CACL8E,WAAY,QACZD,aAAc,GACdH,QAAS,GACTvB,MAAO,UACPF,WAAY,SAGbsH,EAAiBrG,KAAI,SAACzE,EAAO0I,GAC5B,OACE,yBAAK5D,IAAK4D,GACP7B,OAAOC,KAAK9G,GAAO,GADtB,KAC4B6G,OAAOmB,OAAOhI,GAAO,QAMzDmL,YAAa,QACbC,OAAQ/K,KAAKL,MAAMqL,cACnBC,cAAe,kBACb,EAAKhC,SAAS,CACZ+B,eAAgB,EAAKrL,MAAMqL,kBAI/B,yBACE3D,QAAS,WACP6D,IAAQC,MAAM,CACZC,SAAU,aACVC,OAAQ,yBACRjC,MAAO,iBAET,EAAKH,SAAS,CACZ+B,eAAgB,EAAKrL,MAAMqL,iBAG/B/K,UAAU,cACVC,MAAO,CAAEoL,WAAY,EAAGrG,OAAQ,YAZlC,MAiBA,MAEN,yBAAK/E,MAAO,CAAEkD,SAAU,KAAxB,aAC6B,IAA5BpD,KAAKN,MAAM8F,MAAMC,OAChB,yBAAKvF,MAAO,CAAEC,QAAS,OAAQC,eAAgB,WAC7C,kBAAC,EAAD,CACEmB,KAAMmI,EACNN,MAAM,YACN/F,MAAM,aAGR,OAGR,yBAAKpD,UAAU,iBAAiBC,MAAO,CAAE0E,QAAS,KAChD,yBACE1E,MAAO,CACL0E,QAAS,GACTzB,WAAY,OACZ6B,WAAY,UACZ3B,MAAO,UACP0B,aAAc,KAGhB,yBAAK7E,MAAO,CAAEkD,SAAU,GAAIwH,aAAc,KACX,IAA5B5K,KAAKN,MAAM8F,MAAMC,OACdzF,KAAKN,MAAM8F,MAAME,UAAUC,QACzB,SAAC2E,GAAD,MAA6B,UAAjBA,EAAO3K,SACnB,GAAG6D,OACL,GAGN,yBAAKtD,MAAO,CAAEkD,SAAU,KAAxB,UAC6B,IAA5BpD,KAAKN,MAAM8F,MAAMC,OAChB,yBAAKvF,MAAO,CAAEC,QAAS,OAAQC,eAAgB,WAC7C,kBAAC,EAAD,CACEmB,KAAMyI,EACNZ,MAAM,YACN/F,MAAM,aAGR,OAGR,yBAAKpD,UAAU,iBAAiBC,MAAO,CAAE0E,QAAS,KAChD,yBACE1E,MAAO,CACL0E,QAAS,GACTzB,WAAY,OACZ6B,WAAY,UACZ3B,MAAO,UACP0B,aAAc,KAGhB,yBAAK7E,MAAO,CAAEkD,SAAU,KACO,IAA5BpD,KAAKN,MAAM8F,MAAMC,OACdzF,KAAKN,MAAM8F,MAAME,UAAUC,QACzB,SAAC2E,GAAD,MAA6B,UAAjBA,EAAO3K,SACnB,GAAG8D,UACL,GAEN,yBACEvD,MAAO,CACLkD,SAAU,GACVwH,aAAc,GACdzK,QAAS,OACTC,eAAgB,WAGlB,0BAAMF,MAAO,CAAEkD,SAAU,GAAID,WAAY,SAAzC,UAC6B,IAA5BnD,KAAKN,MAAM8F,MAAMC,QAGU,qBAFjBzF,KAAKN,MAAM8F,MAAME,UAAUC,QAChC,SAAC2E,GAAD,MAA6B,UAAjBA,EAAO3K,SACnB,GAAG+D,gBAGmB,OAFxB1D,KAAKN,MAAM8F,MAAME,UAAUC,QACzB,SAAC2E,GAAD,MAA6B,UAAjBA,EAAO3K,SACnB,GAAG+D,eACH1D,KAAKN,MAAM8F,MAAME,UAAUC,QACzB,SAAC2E,GAAD,MAA6B,UAAjBA,EAAO3K,SACnB,GAAG+D,eAEP,EAC6B,IAAhCkC,OAAO2E,GACN,kBAAC,IAAD,CACEM,KACE,yBACE3K,MAAO,CACL8E,WAAY,QACZD,aAAc,GACdH,QAAS,GACTvB,MAAO,UACPF,WAAY,SAGbuH,EAAiBtG,KAAI,SAACzE,EAAO0I,GAC5B,OACE,yBAAK5D,IAAK4D,GACP7B,OAAOC,KAAK9G,GAAO,GADtB,KAC4B6G,OAAOmB,OAAOhI,GAAO,QAMzDmL,YAAa,QACbC,OAAQ/K,KAAKL,MAAM4L,WACnBN,cAAe,kBACb,EAAKhC,SAAS,CACZsC,YAAa,EAAK5L,MAAM4L,eAI5B,yBACElE,QAAS,WACP6D,IAAQC,MAAM,CACZC,SAAU,aACVC,OAAQ,sBACRjC,MAAO,gBAET,EAAKH,SAAS,CACZsC,YAAa,EAAK5L,MAAM4L,cAG5BtL,UAAU,cACVC,MAAO,CAAEoL,WAAY,EAAGrG,OAAQ,YAZlC,MAiBA,MAEN,yBAAK/E,MAAO,CAAEkD,SAAU,KAAxB,aAC6B,IAA5BpD,KAAKN,MAAM8F,MAAMC,OAChB,yBAAKvF,MAAO,CAAEC,QAAS,OAAQC,eAAgB,WAC7C,kBAAC,EAAD,CACEmB,KAAM6I,EACNhB,MAAM,YACN/F,MAAM,aAGR,OAGR,yBAAKpD,UAAU,iBAAiBC,MAAO,CAAE0E,QAAS,KAChD,yBACE1E,MAAO,CACL0E,QAAS,GACTzB,WAAY,OACZ6B,WAAY,UACZ3B,MAAO,UACP0B,aAAc,KAGhB,yBAAK7E,MAAO,CAAEkD,SAAU,KACO,IAA5BpD,KAAKN,MAAM8F,MAAMC,OACdzF,KAAKN,MAAM8F,MAAME,UAAUC,QACzB,SAAC2E,GAAD,MAA6B,UAAjBA,EAAO3K,SACnB,GAAGgE,OACL,GAEN,yBACEzD,MAAO,CACLkD,SAAU,GACVwH,aAAc,GACdzK,QAAS,OACTC,eAAgB,WAGlB,0BAAMF,MAAO,CAAEkD,SAAU,GAAID,WAAY,SAAzC,UAC6B,IAA5BnD,KAAKN,MAAM8F,MAAMC,QAGO,qBAFdzF,KAAKN,MAAM8F,MAAME,UAAUC,QAChC,SAAC2E,GAAD,MAA6B,UAAjBA,EAAO3K,SACnB,GAAGiE,aAGgB,OAFrB5D,KAAKN,MAAM8F,MAAME,UAAUC,QACzB,SAAC2E,GAAD,MAA6B,UAAjBA,EAAO3K,SACnB,GAAGiE,YACH5D,KAAKN,MAAM8F,MAAME,UAAUC,QACzB,SAAC2E,GAAD,MAA6B,UAAjBA,EAAO3K,SACnB,GAAGiE,YAEP,EAC0B,IAA7BgC,OAAO4E,GACN,kBAAC,IAAD,CACEK,KACE,yBACE3K,MAAO,CACL8E,WAAY,QACZD,aAAc,GACdH,QAAS,GACTvB,MAAO,UACPF,WAAY,SAGbwH,EAAcvG,KAAI,SAACzE,EAAO0I,GACzB,OACE,yBAAK5D,IAAK4D,GACP7B,OAAOC,KAAK9G,GAAO,GADtB,KAC4B6G,OAAOmB,OAAOhI,GAAO,QAMzDmL,YAAa,QACbC,OAAQ/K,KAAKL,MAAM6L,WACnBP,cAAe,kBACb,EAAKhC,SAAS,CACZuC,YAAa,EAAK7L,MAAM6L,eAI5B,yBACEnE,QAAS,WACP6D,IAAQC,MAAM,CACZC,SAAU,aACVC,OAAQ,sBACRjC,MAAO,gBAET,EAAKH,SAAS,CACZuC,YAAa,EAAK7L,MAAM6L,cAG5BvL,UAAU,cACVC,MAAO,CAAEoL,WAAY,EAAGrG,OAAQ,YAZlC,MAiBA,MAEN,yBAAK/E,MAAO,CAAEkD,SAAU,KAAxB,UAC6B,IAA5BpD,KAAKN,MAAM8F,MAAMC,OAChB,yBAAKvF,MAAO,CAAEC,QAAS,OAAQC,eAAgB,WAC7C,kBAAC,EAAD,CACEmB,KAAM4I,EACNf,MAAM,YACN/F,MAAM,aAGR,Y,GA7aU7C,a,kBC4EX2B,G,OAAAA,KA1EO,SAACzC,GACrB,IAAM+L,EAAQ,CACZC,UAAW,aACXC,KAAM,aACNC,IAAK,QACLrG,MAAO,QACPsG,MAAO,aAELC,EAAU,oBAEd,OAAOpM,EAAMqM,YAAc,IACzB,6BACE,yBAAK9L,UAAU,yBACZP,EAAMsM,QAAQ5H,KAAI,SAAC6H,EAAQ5D,GAC1B,OACE,2BACE5D,IAAK4D,EACLpI,UACEP,EAAMwM,KAAOxM,EAAMyM,aAAa9D,GAC5ByD,EAAU,UACVA,EAENzE,QAAS,WACP3H,EAAM2H,QAAQ3H,EAAMyM,aAAa9D,IACjC6C,IAAQC,MAAM,CACZC,SAAU1L,EAAMwJ,KAChBmC,OAAQY,EAAS,YACjB7C,MAAO1J,EAAMwJ,KAAO,IAAM+C,MAI9B,kBAAC,IAAD,CACE3G,KAAM,CAAC,MAAOmG,EAAMQ,IACpBhM,UAAU,gBAEXgM,QAOX,6BACE,yBAAKhM,UAAU,yBACZP,EAAMsM,QAAQ5H,KAAI,SAAC6H,EAAQ5D,GAC1B,OACE,2BACE5D,IAAK4D,EACLpI,UACEP,EAAMwM,KAAOxM,EAAMyM,aAAa9D,GAC5ByD,EAAU,UACVA,EAENzE,QAAS,WACP3H,EAAM2H,QAAQ3H,EAAMyM,aAAa9D,IACjC6C,IAAQC,MAAM,CACZC,SAAU1L,EAAMwJ,KAChBmC,OAAQY,EAAS,YACjB7C,MAAO1J,EAAMwJ,KAAO,IAAM+C,MAI9B,kBAAC,IAAD,CACE3G,KAAM,CAAC,MAAOmG,EAAMQ,IACpBhM,UAAU,0B,QCjCXmM,G,OAnCG,SAAC1M,GACjB,OACE,yBAAKO,UAAU,aACZP,EAAMsM,QAAQ5H,KAAI,SAAC6H,EAAQ5D,GAC1B,OACE,yBACE5D,IAAK4D,EACLpI,UACEP,EAAM2M,sBAAwB3M,EAAM4M,aAAajE,GAC7C,gBACA,SAENnI,MACY,IAAVmI,EACI,CACEE,oBAAqB,GACrBgE,uBAAwB,IAE1BlE,IAAU3I,EAAMsM,QAAQvG,OAAS,EACjC,CACE+C,qBAAsB,GACtBgE,wBAAyB,IAE3B,GAENnF,QAAS,kBAAM3H,EAAM2H,QAAQ3H,EAAM4M,aAAajE,MAE/C4D,SC0IEQ,G,OAvJS,SAAC/M,GACvB,IAAM6B,OACWS,IAAftC,EAAM6B,KACF,CACE,CAAEuI,KAAM,MAAO4C,GAAI,IAAMC,GAAI,KAAMC,IAAK,MACxC,CAAE9C,KAAM,MAAO4C,GAAI,IAAMC,GAAI,KAAMC,IAAK,MACxC,CAAE9C,KAAM,QAAS4C,GAAI,IAAMC,GAAI,KAAMC,IAAK,MAC1C,CAAE9C,KAAM,QAAS4C,GAAI,KAAMC,GAAI,KAAMC,IAAK,KAC1C,CAAE9C,KAAM,MAAO4C,GAAI,KAAMC,GAAI,KAAMC,IAAK,MACxC,CAAE9C,KAAM,OAAQ4C,GAAI,KAAMC,GAAI,KAAMC,IAAK,MACzC,CAAE9C,KAAM,OAAQ4C,GAAI,KAAMC,GAAI,KAAMC,IAAK,OAE3ClN,EAAM6B,KAENsL,EAAgB,SAAC,GAAgC,IAA9BrJ,EAA6B,EAA7BA,OAAQsJ,EAAqB,EAArBA,QAAS1D,EAAY,EAAZA,MACxC,OAAI5F,EAEA,yBACEvD,UAAU,iBACVC,MAAO,CAAE8E,WAAY,QAASJ,QAAS,GAAIG,aAAc,KAEzD,uBACE7E,MAAO,CACLoI,UAAW,SACXnF,WAAY,OACZE,MAAO,YAGR+F,GAEiB,qBAAZ0D,GACM,OAAZA,GACAA,EAAQ1I,KAAI,SAAC2I,EAAM1E,GACjB,OACE,yBAAK5D,IAAK4D,GACR,0BAAMnI,MAAO,CAAEmD,MAAO0J,EAAK1J,MAAOF,WAAY,SAC3C4J,EAAKjD,KADR,IACe,KAEf,0BAAM5J,MAAO,CAAEmD,MAAO0J,EAAK1J,MAAOF,WAAY,SAC3C4J,EAAK9J,MAGwB,qBAFtBvD,EAAM6B,KAAKoE,QACjB,SAACpE,GAAD,OAAc,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMuI,QAASiD,EAAKD,QAAQhD,QACtC,GAFM,eAEKiD,EAAKjD,OACd,KACA,MAEFpK,EAAM6B,KAAKoE,QACT,SAACpE,GAAD,OAAc,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMuI,QAASiD,EAAKD,QAAQhD,QACtC,GAFF,eAEaiD,EAAKjD,OAKU,qBAFtBpK,EAAM6B,KAAKoE,QACjB,SAACpE,GAAD,OAAc,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMuI,QAASiD,EAAKD,QAAQhD,QACtC,GAFM,eAEKiD,EAAKjD,OACd,KACA,KAEN,kCAQP,MA6BL+B,EAbc,SAACmB,GACjB,OAAQA,GACN,IAAK,YACH,OAAOC,IACT,IAAK,WACH,OAAOC,IACT,IAAK,YACH,OAAOC,IACT,QACE,OAAOF,KAIDG,CAAY1N,EAAMsN,OAC1BK,EA3BY,SAACL,GACf,OAAQA,GACN,IAAK,YACH,OAAOM,IACT,IAAK,WACH,OAAOC,IACT,IAAK,YACH,OAAOC,IACT,QACE,OAAOF,KAkBFG,CAAU/N,EAAMsN,OAC3B,OACE,yBACE/M,UAAU,sBACVC,MAAOR,EAAMuC,OAAS,CAAEA,OAAQvC,EAAMuC,QAAW,CAAEA,OAAQ,MAE3D,kBAAC,IAAD,KACE,kBAACoL,EAAD,CAAMvL,MAAO,IAAKG,OAAQ,IAAKV,KAAMA,GACnC,kBAAC,IAAD,CAAemM,gBAAgB,QAE/B,kBAAC,IAAD,CAAOC,MAAM,EAAOxE,QAASzJ,EAAMkO,KAAOlO,EAAMkO,KAAO,SAEvD,kBAAC,IAAD,MACClO,EAAMmO,cACL,kBAAC,IAAD,CAASC,QAAS,kBAACjB,EAAD,QAElB,kBAAC,IAAD,MAEuB,qBAAjBnN,EAAMqO,SAA2C,IAAjBrO,EAAMqO,OAC5C,kBAAC,IAAD,CACEC,OAAQtO,EAAMuO,aAAevO,EAAMuO,aAAe,aAClDC,OAAQ,CAAEC,IAAK,EAAGC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,IAC7CC,cACE7O,EAAM6O,cAAgB7O,EAAM6O,cAAgB,WAG9C,KACH7O,EAAM8O,OAAOpK,KAAI,SAACgF,EAAOf,GAAR,MACA,aAAhB3I,EAAMsN,MACJ,kBAACnB,EAAD,CACEpH,IAAK4D,EACLoG,QAAS,IACTvF,KAAK,WACLC,QAASC,EACTC,OAAQ3J,EAAMgP,OAAOrG,GACrBlH,KAAMzB,EAAMgP,OAAOrG,KAGrB,kBAACwD,EAAD,CACEpH,IAAK4D,EACLoG,QAAS,IACTvF,KAAK,WACLC,QAASC,EACTC,OAAQ3J,EAAMgP,OAAOrG,GACrBsG,UAAW,CAAEC,EAAG,GAChBzN,KAAMzB,EAAMgP,OAAOrG,GACnBkB,KAAK,Y,iBCxCNsF,G,OAlHK,SAACnP,GACnB,IAAMoP,EAAc,CAClB,CACEC,UAAW,SACXC,SAFF,YAE8B,IAAjBC,EAAgB,EAAhBA,aACT,GAAwB,YAApBvP,EAAMwP,UAAyB,CACjC,IAAIC,EAAeF,EAAaG,WAAWC,eAAe,GAC1D3P,EAAM4P,YAAY5P,EAAM6P,KAAKJ,EAAazH,MAE1CuH,EAAaG,WAAWI,aAAa,QAChC,CACL,IAAIL,EAAeF,EAAaG,WAAWC,eAAe,GACtDF,GAMFzP,EAAM4P,YAAY5P,EAAM6P,KAAK/I,OAAOmB,OAAOwH,GAAc,IAAI,QAMvE,OACE,gBAAC,IAAD,CACElP,UAAU,gBACVgC,OAAQvC,EAAMuC,OAASvC,EAAMuC,OAAS,QACtCH,MAAOpC,EAAMoC,MAAQpC,EAAMoC,MAAQ,OACnCoN,UAAWxP,EAAMwP,UAAYxP,EAAMwP,UAAY,MAC/CK,KAAM7P,EAAM6P,KACZtJ,QAASvG,EAAMuG,QACf+F,QAAS,CACPyD,yBAA0B,EAC1BC,aAAc,EACdC,gBAAiB,cACjBjB,OAAQ,CACN,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFkB,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,UAAWrQ,EAAMqQ,UACbrQ,EAAMqQ,UACN,CAAE3B,KAAM,EAAGD,IAAK,GAAIE,MAAO,GAK/B2B,WAA+B,IAApBtQ,EAAMsQ,UACjBjC,OAAQrO,EAAMqO,OACV,CAAEkC,SAAU,QACZvQ,EAAMwQ,eACNxQ,EAAMwQ,eACN,CACED,SAAU,QACVE,UAAW,UAEjBC,MAAO1Q,EAAM0Q,MACT,CACEC,MAAO,GACPC,aAAc,OACdC,UAAW,WAEb,CAAEF,MAAO3Q,EAAM2Q,MAAOG,eAAgB,CAAEnN,MAAO,SACnDoN,MAAO/Q,EAAM+Q,MACT,CACEH,aAAc,QAEhB,CAAEI,SAAU,GAChBC,iBAC4B,IAA1BjR,EAAMiR,gBACF,SAACjJ,EAAK/F,EAAMsB,GACV,MACE,qFACAvD,EAAM6P,KAAK7H,GAAK,GAChB,UACA/F,EACA,UAGJ,MAMRiP,UAAW,CAAE,cAAe,KAC5B9B,aAA8B,IAAjBpP,EAAMmR,OAAkB/B,EAAc,SC3G1CgC,I,OAJW,SAACpR,GACzB,OAAO,yBAAKO,UAAU,qBAAqBP,EAAM2Q,SCGpCU,I,OAJY,SAACrR,GAC1B,OAAO,yBAAKO,UAAU,sBAAsBP,EAAMoO,WCA9CkD,GAAS,CAAC,UAAW,mBAAoB,WAgChCC,GA9BQ,SAACvR,GACtB,OACE,yBACEO,UAAU,sBACVC,MAAOR,EAAMuC,OAAS,CAAEA,OAAQvC,EAAMuC,QAAW,CAAEA,OAAQ,MAE3D,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEkH,QAAQ,QACR5H,KAAM7B,EAAM6B,KACZ2P,YAAa,IACb/P,KAAK,UACLiI,OAAO,GAEN1J,EAAM6B,KAAK6C,KAAI,SAAC+M,EAAO9I,GAAR,OACd,kBAAC,IAAD,CACE5D,IAAG,eAAU4D,GACblH,KAAM6P,GAAO3I,EAAQ2I,GAAOvL,cAKlC,kBAAC,IAAD,UC+jBKiG,G,kDAllBb,WAAYhM,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAKT,IAAD,OACHyR,EAC0B,IAA5BpR,KAAKN,MAAM8F,MAAMC,OACbzF,KAAKN,MAAM8F,MAAMmE,kBAAkBvF,KAAI,SAACwF,GACtC,MAAgC,KAAzBA,EAAMyH,eACT,CACEvH,KAAMF,EAAMG,KACZuH,UAAW1L,OAAOgE,EAAM2H,gBACxBC,OACE5L,OAAOgE,EAAM2H,gBACb3L,OAAOgE,EAAMyH,gBACbzL,OAAOgE,EAAM6H,eACfC,UAAW9L,OAAOgE,EAAMyH,gBACxBM,OAAQ/L,OAAOgE,EAAM6H,gBAEvB,QAEN,KAEFG,EAC0B,IAA5B5R,KAAKN,MAAM8F,MAAMC,OACbzF,KAAKN,MAAM8F,MAAMmE,kBAAkBvF,KAAI,SAACwF,GACtC,MAAgC,KAAzBA,EAAMM,eACT,CACEJ,KAAMF,EAAMG,KACZuH,UAAW1L,OAAOgE,EAAMC,gBACxB2H,OACE5L,OAAOgE,EAAMC,gBACbjE,OAAOgE,EAAMM,gBACbtE,OAAOgE,EAAMK,eACfyH,UAAW9L,OAAOgE,EAAMM,gBACxByH,OAAQ/L,OAAOgE,EAAMK,eACrB4H,eAAgBjM,OAAOgE,EAAM2H,gBAC7BO,YACElM,OAAOgE,EAAM2H,gBACb3L,OAAOgE,EAAMyH,gBACbzL,OAAOgE,EAAM6H,eACfM,eAAgBnM,OAAOgE,EAAMyH,gBAC7BW,YAAapM,OAAOgE,EAAM6H,gBAE5B,QAEN,KAEFQ,EAC0B,IAA5BjS,KAAKN,MAAM8F,MAAMC,OAAezF,KAAKN,MAAM8F,MAAME,UAAY,GAQ3DwM,EAC0B,IAA5BlS,KAAKN,MAAM8F,MAAMC,OACbwM,EACGtM,QAAO,SAAC2E,GAAD,MAA6B,UAAjBA,EAAO3K,SAC1ByE,KAAI,SAACzE,GACJ,MAAO,CAACA,EAAMA,MAAOiG,OAAOjG,EAAM,EAAKD,MAAMyS,oBAEjD,GAEND,EAAeA,EAAaE,MAfT,SAACC,EAAGC,GACrB,OAAI1M,OAAOyM,EAAE,IAAMzM,OAAO0M,EAAE,KAAa,EACrC1M,OAAOyM,EAAE,IAAMzM,OAAO0M,EAAE,IAAY,EACjC,KAYoCC,MAAM,EAAG,IAEtD,IAAIC,EAAmB,GACK,IAAxBN,EAAazM,QACfyM,EAAa9N,KAAI,SAAC7C,GAChBiR,EAAiB5J,KAAKrH,EAAK,OAI/B,IAuEIkR,EAvEAC,EAC0B,IAA5B1S,KAAKN,MAAM8F,MAAMC,OACbwM,EACGtM,QACC,SAAC2E,GAAD,MACmB,UAAjBA,EAAO3K,OACP6S,EAAiBrK,SAASmC,EAAO3K,UAEpCyE,KAAI,SAACuO,GACJ,OAAOA,EAAKpO,UAAU2D,iBAE1B,GAEF0K,EAC0B,IAA5B5S,KAAKN,MAAM8F,MAAMC,OACbwM,EACGtM,QACC,SAAC2E,GAAD,MACmB,UAAjBA,EAAO3K,OACP6S,EAAiBrK,SAASmC,EAAO3K,UAEpCyE,KAAI,SAACuO,GACJ,OAAOA,EAAKhT,SAEhB,GAEFkT,EAAuB7S,KAAKN,MAAMoT,YAAYnN,QAChD,SAACpE,GAAD,MAA0B,cAAhBA,EAAKwR,UAEbC,EAAuBhT,KAAKN,MAAMoT,YAAYnN,QAChD,SAACpE,GAAD,MAA0B,cAAhBA,EAAKwR,UAEbE,EAAoBjT,KAAKN,MAAMoT,YAAYnN,QAC7C,SAACpE,GAAD,MAA0B,aAAhBA,EAAKwR,UAWbG,EAAyBL,EAAqBzO,KAAI,SAAC7C,EAAM8G,GAC3D,IAAI8K,EAAM,GAOV,OALAT,EAAkBtO,KAAI,SAACuO,GACrBQ,EAAIvK,KAAJ,eACG+J,EAAKS,cAbA,SAACT,EAAMpR,EAAM8G,GAEvB,IADA,IAAI/E,EAAY,EACP+P,EAAI,EAAGA,GAAKhL,EAAOgL,IAC1B/P,GAAasC,OAAOiN,EAAqBQ,GAAGV,IAE9C,OAAOrP,EAQmBgQ,CAAMX,EAAME,EAAsBxK,QAGrD,eAAG9G,EAAKwI,KAAOoJ,MAGKH,EAAqB5O,KAAI,SAAC7C,GACrD,IAAI4R,EAAM,GAIV,OAHAT,EAAkBtO,KAAI,SAACuO,GACrBQ,EAAIvK,KAAJ,eAAY+J,EAAKS,cAAgB7R,EAAKoR,QAEjC,eAAGpR,EAAKwI,KAAOoJ,MAGEF,EAAkB7O,KAAI,SAAC7C,GAC/C,IAAI4R,EAAM,GAIV,OAHAT,EAAkBtO,KAAI,SAACuO,GACrBQ,EAAIvK,KAAJ,eAAY+J,EAAKS,cAAgB7R,EAAKoR,QAEjC,eAAGpR,EAAKwI,KAAOoJ,MAKxBV,EACoC,IAAlCzS,KAAKN,MAAMoT,YAAYrN,OACnByN,EAAuB9O,KAAI,SAACwF,EAAOvB,GAQjC,OAPY7B,OAAOmB,OAAOiC,GAAOxF,KAAI,SAACzE,GACpC,IAAI4T,EAAW,CAAEzJ,KAAMtD,OAAOC,KAAKmD,GAAO,IAI1C,OAHAjK,EAAMyE,KAAI,SAACzE,EAAO0T,GAChBE,EAASX,EAAkBS,IAAM7M,OAAOmB,OAAOhI,GAAO,MAEjD4T,KAEI,MAEf,KAEN,IAKMC,EAAe,CACnBC,QAAS,SAACC,GAAD,sBACJA,EADI,CAEP/D,gBAAiB,QACjBtK,YAAa,GACbuF,aAAc,MAEhBqB,OAAQ,SAACyH,EAAD,GAAyD,EAA9CnS,KAA+C,IAAzCoS,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAC9C,OAAO,eACFH,EADL,CAEE/D,gBAAiBgE,EACb,KACAE,EACA,UACAD,EACA,UACA,KACJvQ,MAAOsQ,EAAa,OAASE,EAAa,QAAU,UACpD5O,OAAQ0O,EAAa,cAAgB,UAErC,UAAU,eACLD,EAAO,WADZ,CAEE/D,iBAAkBgE,IAAeE,EAAa,UAAY,eAK9DC,EAAY,GACZC,EAAmB,GAEW,IAA9B/T,KAAKN,MAAMsU,QAAQvO,SACrBzF,KAAKN,MAAMsU,QAAQ5P,KAAI,SAAC7C,GACtBuS,EAAUlL,KAAKrH,EAAK0S,gBAEtBH,EAAY,YAAI,IAAII,IAAIJ,IAAY1P,KAAI,SAAC+P,GACvC,OAAO,eAAGA,EAAU,OAIxB,IAAIC,EAAW,GACbC,EAAc,GACZC,EAAU,EACVC,EAAgB,EACpB,GAAkC,IAA9BvU,KAAKN,MAAMsU,QAAQvO,OAAc,CACnC,IAAI+O,EAAS,EACXC,EAAS,EACTC,EAAS,EACTC,EAAS,EACTC,EAAS,EACTC,EAAS,EACTC,EAAS,EACTC,EAAS,EACTC,EAAS,EACTC,EAAU,EACVC,EAAO,EACPC,EAAS,EACXnV,KAAKN,MAAMsU,QAAQ5P,KAAI,SAAC7C,GACtBuS,EAAUnO,QAAO,SAACwO,EAAS9L,GACrB7B,OAAOC,KAAK0N,GAAS,KAAO5S,EAAK0S,cACnCH,EAAUzL,GAAO9G,EAAK0S,aACpBH,EAAUzL,GAAO9G,EAAK0S,aAAe,MAGnB,KAApB1S,EAAK6T,WACHxP,OAAOrE,EAAK6T,aAAe,GAAKxP,OAAOrE,EAAK6T,aAAe,GAC7DZ,IAEA5O,OAAOrE,EAAK6T,YAAc,IAC1BxP,OAAOrE,EAAK6T,aAAe,GAE3BX,IAEA7O,OAAOrE,EAAK6T,YAAc,IAC1BxP,OAAOrE,EAAK6T,aAAe,GAE3BV,IAEA9O,OAAOrE,EAAK6T,YAAc,IAC1BxP,OAAOrE,EAAK6T,aAAe,GAE3BT,IAEA/O,OAAOrE,EAAK6T,YAAc,IAC1BxP,OAAOrE,EAAK6T,aAAe,GAE3BR,IAEAhP,OAAOrE,EAAK6T,YAAc,IAC1BxP,OAAOrE,EAAK6T,aAAe,GAE3BP,IAEAjP,OAAOrE,EAAK6T,YAAc,IAC1BxP,OAAOrE,EAAK6T,aAAe,GAE3BN,IAEAlP,OAAOrE,EAAK6T,YAAc,IAC1BxP,OAAOrE,EAAK6T,aAAe,GAE3BL,IAEAnP,OAAOrE,EAAK6T,YAAc,IAC1BxP,OAAOrE,EAAK6T,aAAe,GAE3BJ,IAEAC,IAGFX,IAGkB,KAAhB/S,EAAK8T,OACa,MAAhB9T,EAAK8T,OACPH,IACyB,MAAhB3T,EAAK8T,QACdF,IAGFZ,OAIJR,EAAmBD,EAAU1P,KAAI,SAAC+P,GAChC,GAAgC,KAA5B3N,OAAOC,KAAK0N,GAAS,GACvB,OAAO,aACLrK,KAAMtD,OAAOC,KAAK0N,IACjB,WAAa3N,OAAOmB,OAAOwM,OAKlCC,EAAW,CAAC,aAERtK,KAAM,cACL,QAAU0K,GAHJ,aAKP1K,KAAM,eAAgB,QAAU2K,GALzB,aAMP3K,KAAM,eAAgB,QAAU4K,GANzB,aAOP5K,KAAM,eAAgB,QAAU6K,GAPzB,aAQP7K,KAAM,eAAgB,QAAU8K,GARzB,aASP9K,KAAM,eAAgB,QAAU+K,GATzB,aAUP/K,KAAM,eAAgB,QAAUgL,GAVzB,aAWPhL,KAAM,eAAgB,QAAUiL,GAXzB,aAYPjL,KAAM,eAAgB,QAAUkL,GAZzB,aAaPlL,KAAM,eAAgB,QAAUmL,IAEpCZ,EAAc,CACZ,CAAEvK,KAAM,OAAQ7G,MAAOiS,GACvB,CAAEpL,KAAM,SAAU7G,MAAOkS,GACzB,CAAErL,KAAM,mBAAoB7G,MAAOsR,IAIvC,OACE,yBAAKtU,UAAU,OACb,yBAAKA,UAAU,mBACb,yBACEC,MAAO,CACL8E,WAAY,8CACZH,cAAe,GACfyQ,UAAW,IACXC,YAAa,GACb9M,WAAY,GACZ1D,aAAc,GACd6F,aAAc,KAGhB,kBAAC,GAAD,CAAmByF,MAAO,qCAC1B,kBAAC,EAAD,CACErE,QAAS,CAAC,QAAS,SACnBM,aAAc,CAAC,aAAc,SAC7BjF,QAAS,SAACmO,GACR,EAAK9V,MAAM+V,SAASD,IAEtBnJ,oBAAqBrM,KAAKN,MAAMgW,cAElC,kBAAC,EAAD,CACE1I,MAAO,YACPa,eAAe,EACf8H,MAAM,EACNpU,KAC6B,UAA3BvB,KAAKN,MAAMgW,YAA0BtE,EAAiBQ,EAExDpD,OAAQ,CAAC,YAAa,UACtBE,OAAQ,CAAC,UAAW,eAK1B,yBAAKzO,UAAU,mBACb,yBACEC,MAAO,CACL8E,WAAY,8CACZH,cAAe,GACfyQ,UAAW,IACXC,YAAa,GACb9M,WAAY,GACZ1D,aAAc,GACd6F,aAAc,KAGhB,kBAAC,GAAD,CAAmByF,MAAO,qCAC1B,kBAAC,EAAD,CACErE,QAAS,CAAC,QAAS,SACnBM,aAAc,CAAC,aAAc,SAC7BjF,QAAS,SAACmO,GACR,EAAK9V,MAAM+V,SAASD,IAEtBnJ,oBAAqBrM,KAAKN,MAAMgW,cAElC,kBAAC,EAAD,CACE1I,MAAO,YACPa,eAAe,EACf8H,MAAM,EACNpU,KAC6B,UAA3BvB,KAAKN,MAAMgW,YAA0BtE,EAAiBQ,EAExDpD,OAAQ,CAAC,YAAa,UACtBE,OAAQ,CAAC,UAAW,eAI1B,yBAAKzO,UAAU,oBACb,yBACEC,MAAO,CACL8E,WAAY,8CACZH,cAAe,GACfyQ,UAAW,IACXC,YAAa,GACb9M,WAAY,GACZ1D,aAAc,GACd6F,aAAc,KAGhB,kBAAC,GAAD,CAAmByF,MAAO,kCAC1B,kBAAC,EAAD,CACErD,MAAO,YACPe,QAAQ,EACRF,eAAe,EACf8H,MAAM,EACNpU,KAAMkR,EACNjE,OAAQoE,EACRlE,OAAQ,CACN,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,eAKR,yBAAKzO,UAAU,mBACb,yBACEC,MAAO,CACLoV,UAAW,IACXtQ,WAAY,8CACZH,cAAe,GACf0Q,YAAa,GACb9M,WAAY,GACZ1D,aAAc,GACd6F,aAAc,KAGhB,kBAAC,GAAD,CAAmByF,MAAO,4BAC1B,yBAAKpQ,UAAU,MAAMC,MAAO,CAAEE,eAAgB,WAC5C,yBAAKH,UAAU,YACb,kBAAC,IAAD,CACE2V,aAAa,EACbC,cAAc,EACdC,SAAU,SAACC,GACT,EAAKrW,MAAMsW,eAAeD,IAE5BrC,OAAQF,EACRyC,YAAY,YACZjK,QAAS,CACP,CAAE/I,MAAO,YAAamG,MAAO,aAC7B,CAAEnG,MAAO,SAAUmG,MAAO,UAC1B,CAAEnG,MAAO,SAAUmG,MAAO,UAC1B,CAAEnG,MAAO,YAAamG,MAAO,kBAKrC,kBAAC,EAAD,CACE6M,aAAa,EACbC,eAAgB,SAChBnG,UAAW,CAAE3B,KAAM,GAAID,IAAK,GAAIE,MAAO,GAAIC,OAAQ,IACnDiB,KAAM2C,EACNjM,QA7SI,CACZ,CAAEiD,KAAM,SAAUE,MAAO,QACzB,CAAEF,KAAM,SAAUE,MAAO,UA4SjB8F,UAAW,WACXjN,OAAQ,YAId,yBAAKhC,UAAU,mBACb,yBACEC,MAAO,CACLoV,UAAW,IACXtQ,WAAY,8CACZH,cAAe,GACf0Q,YAAa,GACb9M,WAAY,GACZ1D,aAAc,GACd6F,aAAc,KAGhB,kBAAC,GAAD,CAAmByF,MAAO,0BAC1B,kBAAC,EAAD,CACErD,MAAO,WACPa,eAAe,EACf8H,MAAM,EACNpU,KAAM6S,EACN5F,OAAQ,CAAC,SACTE,OAAQ,CAAC,aAEX,kBAAC,GAAD,CACEZ,QAAO,gCAA2BwG,EAA3B,yEAIb,yBAAKrU,UAAU,mBACb,yBACEC,MAAO,CACLoV,UAAW,IACXtQ,WAAY,8CACZH,cAAe,GACf0Q,YAAa,GACb9M,WAAY,GACZ1D,aAAc,GACd6F,aAAc,KAGhB,kBAAC,GAAD,CAAmByF,MAAO,6BAC1B,yBAAKnQ,MAAO,CAAE0K,cAAe,KAC3B,0BAAM1K,MAAO,CAAEmD,MAAO,UAAWF,WAAY,SAA7C,OACO,IACmB,IAAvBkR,EAAY5O,OACT4O,EAAY1O,QAAO,SAACwQ,GAAD,MAAwB,SAAdA,EAAKrM,QAAiB,GAAG7G,MACtD,GAEN,0BACE/C,MAAO,CACLoL,WAAY,GACZjI,MAAO,mBACPF,WAAY,SAJhB,SAOS,IACiB,IAAvBkR,EAAY5O,OACT4O,EAAY1O,QAAO,SAACwQ,GAAD,MAAwB,WAAdA,EAAKrM,QAAmB,GAClD7G,MACH,GAEN,0BACE/C,MAAO,CACLoL,WAAY,GACZjI,MAAO,UACPF,WAAY,SAJhB,aAOa,IACa,IAAvBkR,EAAY5O,OACT4O,EAAY1O,QACV,SAACwQ,GAAD,MAAwB,qBAAdA,EAAKrM,QACf,GAAG7G,MACL,IAGR,kBAAC,GAAD,CAAgB1B,KAAM8S,IACtB,kBAAC,GAAD,CACEvG,QAAO,gCAA2ByG,EAA3B,yEAIb,yBAAKtU,UAAU,mBACb,yBACEC,MAAO,CACLoV,UAAW,IACXtQ,WAAY,8CACZH,cAAe,GACf0Q,YAAa,GACb9M,WAAY,GACZ1D,aAAc,GACd6F,aAAc,KAGhB,kBAAC,GAAD,CAAmByF,MAAO,kCAE1B,kBAAC,EAAD,CACErD,MAAO,WACPa,eAAe,EACf8H,MAAM,EACNpU,KAAMwS,EACNvF,OAAQ,CAAC,YACTE,OAAQ,CAAC,aAEX,kBAAC,GAAD,CACEZ,QAAO,gCAGI,qBAFFgG,EAAUnO,QACf,SAACwO,GAAD,MAAyC,KAA5B3N,OAAOC,KAAK0N,GAAS,MAClC,GACE3N,OAAOmB,OACLmM,EAAUnO,QACR,SAACwO,GAAD,MAAyC,KAA5B3N,OAAOC,KAAK0N,GAAS,MAClC,IACF,GACFL,EAAUnO,QACR,SAACwO,GAAD,MAAyC,KAA5B3N,OAAOC,KAAK0N,GAAS,MAClC,GAXD,8E,GA9jBG3T,aCMlB4V,G,kDACJ,WAAY1W,GAAQ,IAAD,8BACjB,cAAMA,IA8HR2W,WAAa,SAACC,EAAO3U,GAGnB,IAFA,IAAI4U,EAAS,GACTC,EAAS,YAAOF,GACbE,EAAU/Q,OAAS,GACxB8Q,EAAO3N,KAAK4N,EAAUC,OAAO,EAAG9U,IAElC,OAAO4U,GArIU,EAwInBvN,iBAAmB,WACjB,EAAKC,SAAS,CAAEnH,MAAOzC,OAAO0C,WAAYE,OAAQ5C,OAAO6C,eAvIzD,EAAKvC,MAAQ,CACXyI,aAAc,GACdsO,YAAa,EACbxK,GAAI,IACJpK,MAAO,EACPG,OAAQ,EACR0U,aAAc,GACd3L,eAAe,EACfO,YAAY,EACZ4G,cAAe,YACfuD,YAAa,aACbkB,cAAe,MACfpL,YAAY,EACZqL,WAAY,EACZC,WAAY,EACZC,iBAAiB,EACjBjP,gBAAgB,EAChBvG,KAAM,GACNgF,cAAe,GACfyN,QAAS,GACTlB,YAAa,GACbtN,MAAO,GACPwR,UAAW,GACXxI,OAAQ,CAAC,UAAW,WAAY,QAAS,QAAS,OAClDyI,QAAS,EACTC,SAAU,CACR,CACE9N,MAAO,WACPuG,gBAAiB,qBACjBwH,YAAa,gBACbC,YAAa,EACb7V,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,IACvB8V,MAAO,CAAC,GAAI,GAAI,GAAI,GAAI,IACxBC,MAAO,CAAC,GAAI,GAAI,GAAI,GAAI,IACxBC,MAAO,CAAC,GAAI,GAAI,GAAI,GAAI,OApCb,E,gEA0CE,IAAD,OAClBlY,OAAOkD,iBAAiB,SAAUvC,KAAKgJ,kBAEvC3J,OAAOkD,iBAAiB,SAAS,WAC/B,EAAKiV,UACL,EAAKC,kBAGPzX,KAAKiJ,SAAS,CACZnB,gBAAgB,IAElB9H,KAAK0X,aACL1X,KAAK2X,iBACL3X,KAAKwX,UACLxX,KAAKyX,iB,qCAGS,IAAD,OACbG,MAAM,wDAAyD,CAC7DC,OAAQ,QAEPC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKhP,SAAS,CACZ1C,cAAe0R,OAGlBC,OAAM,SAACrY,S,mCAGE,IAAD,OACX+X,MAAM,6CAA8C,CAClDC,OAAQ,QAEPC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKhP,SAAS,CACZ+K,QAASiE,EAASE,SAClBrQ,gBAAgB,OAGnBoQ,OAAM,SAACrY,GACN,EAAKoJ,SAAS,CACZnB,gBAAgB,S,uCAKN,IAAD,OACf8P,MAAM,iDAAkD,CACtDC,OAAQ,QAEPC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLlY,QAAQqY,IAAIH,GACZ,EAAKhP,SAAS,CACZ6J,YAAamF,EAASI,aACtBvQ,gBAAgB,OAGnBoQ,OAAM,SAACrY,GACN,EAAKoJ,SAAS,CACZnB,gBAAgB,S,gCAKb,IAAD,OACR8P,MAAM,yCAA0C,CAC9CC,OAAQ,QAEPC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKhP,SAAS,CACZzD,MAAOyS,EACPnQ,gBAAgB,OAGnBoQ,OAAM,SAACrY,GACN,EAAKoJ,SAAS,CACZnB,gBAAgB,S,6CAmBtBzI,OAAOmD,oBAAoB,SAAUxC,KAAKgJ,oB,+BAGlC,IAAD,OACP,OACE,kBAAC,EAAD,KACE,yBAAK/I,UAAU,aACb,yBAAKA,UAAU,aACb,6BACE,kBAAC,EAAD,CAAQ0I,QAAS3I,KAAKN,MAAMiJ,QAAS7G,MAAO9B,KAAKL,MAAMmC,SAEzD,yBAAK5B,MAAO,CAAEoV,UAAW,SACvB,kBAAC,EAAD,CAAa9P,MAAOxF,KAAKL,MAAM6F,QAC/B,kBAAC,EAAD,CACE0D,KAAK,QACLgD,GAAIlM,KAAKL,MAAMuM,GACfF,QAAS,CAAC,YAAa,OAAQ,QAAS,OACxCG,aAAc,CAAC,IAAK,QAAS,SAAU,QACvC9E,QAAS,SAACiR,GACR,EAAKrP,SAAS,CACZiD,GAAIoM,OAIS,MAAlBtY,KAAKL,MAAMuM,GACV,kBAAC,GAAD,CACE4G,YAAa9S,KAAKL,MAAMmT,YACxBkB,QAAShU,KAAKL,MAAMqU,QACpB7B,cAAenS,KAAKL,MAAMwS,cAC1ByE,cAAe5W,KAAKL,MAAMiX,cAC1BpR,MAAOxF,KAAKL,MAAM6F,MAClBwQ,eAAgB,SAACD,GACf,EAAK9M,SAAS,CACZkJ,cACqB,OAAnB4D,EACI,YACAA,EAAe9S,SAGzBwS,SAAU,SAACD,GAAD,OACR,EAAKvM,SAAS,CACZyM,YAAaF,KAGjBE,YAAa1V,KAAKL,MAAM+V,cAExB,KACe,SAAlB1V,KAAKL,MAAMuM,GACV,yBACEjM,UAAU,gBACVC,MAAO,CACL4E,OAAQ,+BACRO,YAAa,EACbwB,UAAW,GACXyE,WAAY,EACZvG,aAAc,KAGhB,yBACE9E,UAAU,YACVC,MAAO,CAAE2G,UAAW,GAAI+D,aAAc,KAEtC,kBAAC,EAAD,CACErJ,KAC8B,IAA5BvB,KAAKL,MAAM6F,MAAMC,OACbzF,KAAKL,MAAM6F,MAAME,UAAUC,QACzB,SAAChG,GAAD,MAA2B,UAAhBA,EAAMA,SAEnB,OAKV,KACe,UAAlBK,KAAKL,MAAMuM,GACV,oCACE,yBAAKhM,MAAO,CAAEuI,WAAY,IACxB,2BACES,KAAK,OACL+M,YAAY,SACZH,SAAU,SAACxO,GAAD,OACR,EAAK2B,SAAS,CACZb,aAAcd,EAAEnC,OAAOlC,YAK/B,kBAAC,EAAD,CACE6E,eAAgB9H,KAAKL,MAAMmI,eAC3BtC,MAAOxF,KAAKL,MAAM6F,MAClB4C,aAAcpI,KAAKL,MAAMyI,gBAG3B,KAAM,IACS,WAAlBpI,KAAKL,MAAMuM,GACV,kBAAC,EAAD,CACE1G,MAAOxF,KAAKL,MAAM6F,MAClBe,cAAevG,KAAKL,MAAM4G,gBAE1B,MAEN,kBAAC,EAAD,a,GAnPQ/F,aA2PL+X,eAAWnC,I,oECtHX7Q,I,yDA/Ib,WAAY7F,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAMjB,IAAM4B,EAC6B,IAAjCvB,KAAKN,MAAM8Y,WAAW/S,OAClBzF,KAAKN,MAAM8Y,WACR7S,QAAO,SAACwO,GAAD,MAA+B,UAAlBA,EAAQ9D,SAC5BjM,KAAI,SAAC+P,GACJ,MAAO,CACLA,QAASA,EAAQ9D,MACjB/M,UAAWsC,OAAOuO,EAAQ7Q,WAC1BE,OAAQoC,OAAOuO,EAAQ3Q,QACvBC,UAAWmC,OAAOuO,EAAQ1Q,WAC1BE,OAAQiC,OAAOuO,EAAQxQ,QACvBkC,eAAgBD,OAAOuO,EAAQsE,iBAC/BzS,YAAaJ,OAAOuO,EAAQuE,cAC5BC,MAAO/S,OAAOuO,EAAQyE,gBAG5B,GAEA3S,EAC6B,IAAjCjG,KAAKN,MAAM8Y,WAAW/S,OAClB,CACE,CACES,OAAQ,UACRC,SAAU,WAEZ,CACED,OAAQ,YACRC,SAAU,YACVC,KAAM,SAAC1G,GACL,OACE,oCACqC,IAAlCA,EAAM2G,SAASR,eAAuB,KACrC,0BACE3F,MAAO,CACLkD,SAAU,GACVD,WAAY,OACZE,MAAO,YAGT,0BAAMnD,MAAO,CAAEkD,SAAU,GAAID,WAAY,SAAzC,UAGCzD,EAAM2G,SAASR,gBAEjB,IACH,0BAAM5F,UAAU,UAAUP,EAAMuD,UAKxC,CACEiD,OAAQ,SACRC,SAAU,SACVC,KAAM,SAAC1G,GACL,OACE,oCACE,0BAAMO,UAAU,UAAUP,EAAMuD,UAKxC,CACEiD,OAAQ,YACRC,SAAU,YACVC,KAAM,SAAC1G,GACL,OACE,oCACE,0BAAMO,UAAU,UAAUP,EAAMuD,UAKxC,CACEiD,OAAQ,SACRC,SAAU,SACVC,KAAM,SAAC1G,GACL,OACE,oCACkC,IAA/BA,EAAM2G,SAASL,YAAoB,KAClC,0BACE9F,MAAO,CACLkD,SAAU,GACVD,WAAY,OACZE,MAAO,YAGT,0BAAMnD,MAAO,CAAEkD,SAAU,GAAID,WAAY,SAAzC,UAGCzD,EAAM2G,SAASL,aAEjB,IACH,0BAAM/F,UAAU,UAAUP,EAAMuD,UAKxC,CACEiD,OAAQ,QACRC,SAAU,QACVC,KAAM,SAAC1G,GACL,OACE,oCACE,0BAAMO,UAAU,UAAUP,EAAMuD,WAM1C,GACN,OACE,yBAAKhD,UAAU,oBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,qBACb,kBAAC,IAAD,CACEC,MAAO,CAAEoV,UAAW,KACpB/T,KAAMA,EACN0E,QAASA,EACTa,gBAAiB,GACjB7G,UAAU,sBACV8G,WAAY,4CACZC,cAAe,SAACrH,EAAOsH,EAASC,GAC9B,MAAO,CACLhH,MAAO,CACLiD,WAAY,UAIlBqE,YAAU,W,GAvIJhH,cCkHLqY,I,yDAhHb,WAAYnZ,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAKT,IAAD,OACD+O,EAAS,CACb4C,UAAW,UACXE,OAAQ,UACRE,UAAW,UACXC,OAAQ,WAGV,OACE,yBAAK1R,UAAU,mBACZD,KAAKN,MAAM6B,KAAK6C,KAAI,SAAC0U,EAAMzQ,GAC1B,IAAI0Q,EAAY,EAAKrZ,MAAMqZ,UAAUpT,QACnC,SAACpE,GAAD,OAAUiF,OAAOC,KAAKlF,GAAM,KAAOiF,OAAOC,KAAKqS,GAAM,MAEnDE,EAAc,EAAKtZ,MAAMsZ,YAAYrT,QACvC,SAACpE,GAAD,OAAUiF,OAAOC,KAAKlF,GAAM,KAAOiF,OAAOC,KAAKqS,GAAM,MAEnDG,EAAc,EAAKvZ,MAAMuZ,YAAYtT,QACvC,SAACpE,GAAD,OAAUiF,OAAOC,KAAKlF,GAAM,KAAOiF,OAAOC,KAAKqS,GAAM,MAEvD,OACE,yBACErU,IAAK4D,EACLnI,MAAO,CAAE0K,aAAc,GAAI/D,UAAW,IACtC5G,UAAW,EAAKP,MAAMO,WAEtB,yBACEA,UAAU,OACVC,MAAO,CACL8E,WAAY0J,EAAOlI,OAAOC,KAAKqS,GAAM,MAGvC,yBACE7Y,UAAU,cACVC,MAA4B,IAArB6Y,EAAUtT,OAAe,GAAK,CAAEmF,aAAc,KAEpDpE,OAAOmB,OAAOmR,GAAM,IAED,IAArBC,EAAUtT,OACT,yBAAKxF,UAAU,gBACb,0BAAMA,UAAU,cAAhB,UAA4C,IAC3C8Y,EAAU,GAAGvS,OAAOC,KAAKqS,GAAM,IAC/BE,EAAY,GAAGxS,OAAOC,KAAKqS,GAAM,IAChC,kBAAC,IAAD,CACEjO,KACE,yBACE3K,MAAO,CACLgZ,UAAW,IACXC,UAAW,SACXC,YAAa,GACbpU,WAAY,QACZD,aAAc,GACdH,QAAS,GACTvB,MAAO,UACPF,WAAY,SAGb8V,EAAY,GAAGzS,OAAOC,KAAKqS,GAAM,KAGtChO,YAAa,QACbC,OAAQ,EAAKpL,MAAM6G,OAAOC,KAAKqS,GAAM,IACrC7N,cAAe,kBACb,EAAKhC,SAAL,eACGzC,OAAOC,KAAKqS,GAAM,IAAM,EAAKnZ,MAC5B6G,OAAOC,KAAKqS,GAAM,QAKxB,yBACEzR,QAAS,WACP6D,IAAQC,MAAM,CACZC,SAAU,EAAK1L,MAAMwJ,KAAO,QAC5BmC,OACE,EAAK3L,MAAMwJ,KACX1C,OAAOC,KAAKqS,GAAM,GAClB,gBACF1P,MACE,EAAK1J,MAAMwJ,KACX1C,OAAOC,KAAKqS,GAAM,GAClB,UAEJ,EAAK7P,SAAL,eACGzC,OAAOC,KAAKqS,GAAM,IAAM,EAAKnZ,MAC5B6G,OAAOC,KAAKqS,GAAM,OAIxB7Y,UAAU,0BAnBZ,MAwBA,MAEJ,KACJ,yBAAKC,MAAO,CAAEkD,SAAU,KAAOoD,OAAOC,KAAKqS,GAAM,c,GAvGvCtY,cCuHX6Y,G,kDAxHb,WAAY3Z,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAMjB,OACE,kBAAC,GAAD,CACEuJ,KAAK,SACLjJ,UAAU,iBACVsB,KAAM,CACJ,CACE+P,UACmC,IAAjCtR,KAAKN,MAAM8Y,WAAW/S,OAClBzF,KAAKN,MAAM8Y,WAAW7S,QACpB,SAAChG,GAAD,MAA2B,UAAhBA,EAAM0Q,SACjB,GAAG/M,UACL,GAER,CACEkO,OACmC,IAAjCxR,KAAKN,MAAM8Y,WAAW/S,OAClBzF,KAAKN,MAAM8Y,WAAW7S,QACpB,SAAChG,GAAD,MAA2B,UAAhBA,EAAM0Q,SACjB,GAAG7M,OACL,GAER,CACEkO,UACmC,IAAjC1R,KAAKN,MAAM8Y,WAAW/S,OAClBzF,KAAKN,MAAM8Y,WAAW7S,QACpB,SAAChG,GAAD,MAA2B,UAAhBA,EAAM0Q,SACjB,GAAG5M,UACL,GAER,CACEkO,OACmC,IAAjC3R,KAAKN,MAAM8Y,WAAW/S,OAClBzF,KAAKN,MAAM8Y,WAAW7S,QACpB,SAAChG,GAAD,MAA2B,UAAhBA,EAAM0Q,SACjB,GAAG1M,OACL,IAGVqV,YAAa,CACX,CACE1H,UACmC,IAAjCtR,KAAKN,MAAM8Y,WAAW/S,QAKhB,IAJNG,OACE5F,KAAKN,MAAM8Y,WAAW7S,QACpB,SAAChG,GAAD,MAA2B,UAAhBA,EAAM0Q,SACjB,GAAGoI,kBAKX,CACE9G,OACmC,IAAjC3R,KAAKN,MAAM8Y,WAAW/S,QAKhB,IAJNG,OACE5F,KAAKN,MAAM8Y,WAAW7S,QACpB,SAAChG,GAAD,MAA2B,UAAhBA,EAAM0Q,SACjB,GAAGqI,gBAMbK,UAAW,CACT,CACEzH,UACmC,IAAjCtR,KAAKN,MAAM8Y,WAAW/S,OAClBzF,KAAKN,MAAM8Y,WAAW7S,QACpB,SAAChG,GAAD,MAA2B,UAAhBA,EAAM0Q,SACjB,GAAGoI,gBACL,GAER,CACE9G,OACmC,IAAjC3R,KAAKN,MAAM8Y,WAAW/S,OAClBzF,KAAKN,MAAM8Y,WAAW7S,QACpB,SAAChG,GAAD,MAA2B,UAAhBA,EAAM0Q,SACjB,GAAGqI,aACL,IAGVO,YAAa,CACX,CACE3H,UAAWtR,KAAKN,MAAM8Y,WACnB7S,QACC,SAAChG,GAAD,MACkB,UAAhBA,EAAM0Q,OAA+C,KAA1B1Q,EAAM8Y,mBAEpCrU,KAAI,SAACzE,EAAO0I,GACX,OACE,yBAAK5D,IAAK4D,GACP1I,EAAM0Q,MADT,KACkB1Q,EAAM8Y,qBAKhC,CACE9G,OAAQ3R,KAAKN,MAAM8Y,WAChB7S,QACC,SAAChG,GAAD,MAA2B,UAAhBA,EAAM0Q,OAA4C,KAAvB1Q,EAAM+Y,gBAE7CtU,KAAI,SAACzE,EAAO0I,GACX,OACE,yBAAK5D,IAAK4D,GACP1I,EAAM0Q,MADT,KACkB1Q,EAAM+Y,yB,GA9GjBlY,aCsUVkL,G,kDA/Tb,WAAYhM,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAKT,IAAD,OACD6T,EAAe,CACnBC,QAAS,SAACC,GAAD,sBACJA,EADI,CAEP/D,gBAAiB,QACjBtK,YAAa,GACbuF,aAAc,MAEhBqB,OAAQ,SAACyH,EAAD,GAAyD,EAA9CnS,KAA+C,IAAzCoS,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAC9C,OAAO,eACFH,EADL,CAEE/D,gBAAiBgE,EACb,KACAE,EACA,UACAD,EACA,QACA,KACJvQ,MAAOsQ,EAAa,OAASE,EAAa,QAAU,UACpD5O,OAAQ0O,EAAa,cAAgB,UAErC,UAAU,eACLD,EAAO,WADZ,CAEE/D,iBAAkBgE,IAAeE,EAAa,UAAY,eAM9DjC,EACoC,IAAtC5R,KAAKN,MAAM4Z,gBAAgB7T,OACvBzF,KAAKN,MAAM4Z,gBAAgBlV,KAAI,SAACwF,EAAOvB,GACrC,MAAO,CACLyB,KAAMF,EAAM2P,WACZjI,UAAW1L,OAAOgE,EAAM4P,gBACxBhI,OACE5L,OAAOgE,EAAM4P,gBACb5T,OAAOgE,EAAM6P,gBACb7T,OAAOgE,EAAMjG,OAAO+V,OACtBhI,UAAW9L,OAAOgE,EAAM6P,gBACxB9H,OAAQ/L,OAAOgE,EAAMjG,OAAO+V,OAC5B7H,eAAgBjM,OAAOgE,EAAM/D,gBAC7BiM,YACY,IAAVzJ,EACIzC,OAAOgE,EAAM4P,gBACb5T,OAAOgE,EAAM6P,gBACb7T,OAAOgE,EAAMjG,OAAO+V,OACpB9T,OAAOgE,EAAM4P,gBACb5T,OAAOgE,EAAM6P,gBACb7T,OAAOgE,EAAMjG,OAAO+V,QACnB9T,OACC,EAAKlG,MAAM4Z,gBAAgBjR,EAAQ,GAAGmR,gBAEtC5T,OACE,EAAKlG,MAAM4Z,gBAAgBjR,EAAQ,GAAGoR,gBAExC7T,OACE,EAAKlG,MAAM4Z,gBAAgBjR,EAAQ,GAAG1E,OAAO+V,QAEvD3H,eAAgBnM,OAAOgE,EAAM7D,gBAC7BiM,YACY,IAAV3J,EACIzC,OAAOgE,EAAMjG,OAAO+V,OACpB9T,OAAOgE,EAAMjG,OAAO+V,OACpB9T,OAAO,EAAKlG,MAAM4Z,gBAAgBjR,EAAQ,GAAG1E,OAAO+V,WAG9D,GAEFC,EAC+B,IAAjC3Z,KAAKN,MAAMka,WAAWnU,OAClBe,OAAOmB,OACL3H,KAAKN,MAAMka,WAAWjU,QACpB,SAACuD,GAAD,MAAmC,oBAAzB1C,OAAOC,KAAKyC,GAAM,MAC5B,IACF,GAAG9E,KAAI,SAACwF,EAAOvB,GAAW,IAAD,EACzB,OAAO,EAAP,CACEyB,KAAMF,EAAMiQ,KADd,cAEG,WAAajQ,EAAMkQ,UAAUC,QAAQ,WAAY,KAFpD,cAGG,6BAA+BnQ,EAAMoQ,gBAAgBD,QACpD,WACA,KALJ,KASF,KAEFE,EAC+B,IAAjCja,KAAKN,MAAMka,WAAWnU,OAClBe,OAAOmB,OACL3H,KAAKN,MAAMka,WAAWjU,QACpB,SAACuD,GAAD,MAAmC,4BAAzB1C,OAAOC,KAAKyC,GAAM,MAC5B,IACF,GAAG9E,KAAI,SAACwF,EAAOvB,GAAW,IAAD,EACzB,OAAO,EAAP,CACEyB,KAAMF,EAAMiQ,KADd,cAEG,WAAajQ,EAAMkQ,UAAUC,QAAQ,WAAY,KAFpD,cAGG,6BACmD,IAAlDnQ,EAAMoQ,gBAAgBD,QAAQ,WAAY,IACtC,EACAnQ,EAAMoQ,gBAAgBD,QAAQ,WAAY,KANlD,KASF,KAQF7H,EAC+B,IAAjClS,KAAKN,MAAM8Y,WAAW/S,OAClBzF,KAAKN,MAAM8Y,WACR7S,QAAO,SAACwO,GAAD,MAA+B,UAAlBA,EAAQ9D,SAC5BjM,KAAI,SAACzE,GACJ,MAAO,CAACA,EAAM0Q,MAAOzK,OAAOjG,EAAM,EAAKD,MAAMyS,oBAEjD,GAEF+H,EAC+B,IAAjCla,KAAKN,MAAMka,WAAWnU,OAClBe,OAAOmB,OACL3H,KAAKN,MAAMka,WAAWjU,QACpB,SAACuD,GAAD,MAAmC,oBAAzB1C,OAAOC,KAAKyC,GAAM,MAC5B,IACF,GAAG9E,KAAI,SAACwF,EAAOvB,GACf,MAAO,CACLyB,KAAMF,EAAMuQ,IACZlX,MAAO2C,OAAOgE,EAAMoQ,gBAAgBD,QAAQ,WAAY,SAG5D,GAEN7H,EAAeA,EAAaE,MA7BT,SAACC,EAAGC,GACrB,OAAI1M,OAAOyM,EAAE,IAAMzM,OAAO0M,EAAE,KAAa,EACrC1M,OAAOyM,EAAE,IAAMzM,OAAO0M,EAAE,IAAY,EACjC,KA0BoCC,MAAM,EAAG,IAOtD,OACE,yBAAKtS,UAAU,OACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,iBACb,kBAAC,GAAD,CAAmBoQ,MAAO,gCAC1B,kBAAC,EAAD,CACErE,QAAS,CAAC,OAAQ,OAClBM,aAAc,CAAC,YAAa,YAC5BjF,QAAS,SAACmO,GACR,EAAK9V,MAAM0a,YAAY5E,IAEzBnJ,oBAAqBrM,KAAKN,MAAM2M,sBAElC,kBAAC,EAAD,CACEW,MAAOhN,KAAKN,MAAM2M,oBAClBwB,eAAe,EACf8H,MAAM,EACNpU,KAAMqQ,EACNpD,OAAQ,CAAC,aACTE,OAAQ,CAAC,eAIf,yBAAKzO,UAAU,mBACb,yBAAKA,UAAU,iBACb,kBAAC,GAAD,CAAmBoQ,MAAO,6BAC1B,kBAAC,EAAD,CACErE,QAAS,CAAC,OAAQ,OAClBM,aAAc,CAAC,YAAa,YAC5BjF,QAAS,SAACmO,GACR,EAAK9V,MAAM0a,YAAY5E,IAEzBnJ,oBAAqBrM,KAAKN,MAAM2M,sBAElC,kBAAC,EAAD,CACEW,MAAOhN,KAAKN,MAAM2M,oBAClBwB,eAAe,EACf8H,MAAM,EACNpU,KAAMqQ,EACNpD,OAAQ,CAAC,UACTE,OAAQ,CAAC,eAKf,yBAAKzO,UAAU,mBACb,yBAAKA,UAAU,iBACb,kBAAC,GAAD,CAAmBoQ,MAAO,uBAC1B,kBAAC,EAAD,CACErE,QAAS,CAAC,OAAQ,OAClBM,aAAc,CAAC,YAAa,YAC5BjF,QAAS,SAACmO,GACR,EAAK9V,MAAM0a,YAAY5E,IAEzBnJ,oBAAqBrM,KAAKN,MAAM2M,sBAElC,kBAAC,EAAD,CACEW,MAAOhN,KAAKN,MAAM2M,oBAClBwB,eAAe,EACf8H,MAAM,EACNpU,KAAMqQ,EACNpD,OAAQ,CAAC,UACTE,OAAQ,CAAC,eAKf,yBAAKzO,UAAU,mBACb,yBAAKA,UAAU,iBACb,kBAAC,GAAD,CAAmBoQ,MAAO,+BAC1B,yBAAKpQ,UAAU,MAAMC,MAAO,CAAEE,eAAgB,WAC5C,yBAAKH,UAAU,YACb,kBAAC,IAAD,CACE2V,aAAa,EACbC,cAAc,EACdC,SAAU,SAACC,GACT,EAAKrW,MAAMoW,SAASC,IAEtBrC,OAAQF,EACRyC,YAAY,mBACZjK,QAAS,CACP,CAAE/I,MAAO,YAAamG,MAAO,oBAC7B,CAAEnG,MAAO,SAAUmG,MAAO,iBAC1B,CAAEnG,MAAO,SAAUmG,MAAO,iBAC1B,CAAEnG,MAAO,YAAamG,MAAO,yBAKrC,kBAAC,EAAD,CACE6M,aAAa,EACbC,eAAgB,SAChBnG,UAAW,CAAE3B,KAAM,GAAID,IAAK,GAAIE,MAAO,GAAIC,OAAQ,IACnDiB,KAAM2C,EACNjM,QAnGI,CACZ,CAAEiD,KAAM,SAAUE,MAAO,QACzB,CAAEF,KAAM,SAAUE,MAAO,UAkGjB8F,UAAW,WACXjN,OAAQ,YAId,yBAAKhC,UAAU,mBACb,yBAAKA,UAAU,iBACb,kBAAC,GAAD,CAAmBoQ,MAAO,yBAC1B,kBAAC,EAAD,CACErD,MAAO,WACPa,eAAe,EACf8H,MAAM,EACNpU,KAAMoY,EACNnL,OAAQ,CAAC,YACTE,OAAQ,CAAC,aAEX,kBAAC,GAAD,CACEZ,QACE,4GAKR,yBAAK7N,UAAU,mBACb,yBAAKA,UAAU,iBACb,kBAAC,GAAD,CAAmBoQ,MAAO,4BAC1B,yBAAKnQ,MAAO,CAAE0K,cAAe,KAC3B,0BAAM1K,MAAO,CAAEmD,MAAO,UAAWF,WAAY,SAA7C,OACO,IACmB,IAAvB+W,EAAYzU,OACTyU,EAAYvU,QAAO,SAACwQ,GAAD,MAAwB,SAAdA,EAAKrM,QAAiB,GAAG7G,MACtD,GAEN,0BACE/C,MAAO,CACLoL,WAAY,GACZjI,MAAO,mBACPF,WAAY,SAJhB,SAOS,IACiB,IAAvB+W,EAAYzU,OACTyU,EAAYvU,QAAO,SAACwQ,GAAD,MAAwB,WAAdA,EAAKrM,QAAmB,GAClD7G,MACH,IAGR,kBAAC,GAAD,CAAgB1B,KAAM2Y,IACtB,kBAAC,GAAD,CACEpM,QACE,4GAKR,yBAAK7N,UAAU,mBACb,yBAAKA,UAAU,iBACb,kBAAC,GAAD,CAAmBoQ,MAAO,iCAC1B,kBAAC,EAAD,CACErD,MAAO,WACPa,eAAe,EACf8H,MAAM,EACNpU,KAAM0Y,EACNzL,OAAQ,CAAC,WAAY,8BACrBE,OAAQ,CAAC,UAAW,aAEtB,kBAAC,GAAD,CACEZ,QACE,iH,GAtTQtN,aC2BT6Z,I,OAjCM,SAAC3a,GACpB,OACE,yBAAKO,UAAU,gBACZP,EAAMsM,QAAQ5H,KAAI,SAAC6H,EAAQ5D,GAC1B,OACE,yBACE5D,IAAK4D,EACLpI,UACEP,EAAM4a,YAAc5a,EAAM4M,aAAajE,GACnC,mBACA,YAENnI,MACER,EAAM4a,YAAc5a,EAAM4M,aAAajE,GACnC,CACErD,WAAYtF,EAAMgP,OAAOrG,GACzBhF,MAAO,SAET,CACEyB,OAAQ,aAAepF,EAAMgP,OAAOrG,GACpChF,MAAO3D,EAAMgP,OAAOrG,IAG5BhB,QAAS,kBAAM3H,EAAM2H,QAAQ3H,EAAM4M,aAAajE,MAE/C4D,S,UCpBPvJ,GAAaC,cAChBC,OAAO,CAAC,EAAG,KACXC,MAAM,CACL,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAqGW0X,GAlGE,SAAC,GAA4C,IAA1C7Y,EAAyC,EAAzCA,kBAAmBH,EAAsB,EAAtBA,KAAM+Y,EAAgB,EAAhBA,UAC3C,OACE,kBAAC,gBAAD,CACErY,OAAQ,IACRH,MAAO,IACPmC,WAAS,GACTJ,iBAAkB,CAChB2W,OAAQ,EAAE,GAAI,EAAG,GACjB5Z,MAAO,MAGRW,EAAKkE,OAAS,GACb,kBAAC,cAAD,CAAavB,UA5BnB,2GA6BS,qBAAGC,YACUC,KAAI,SAACrB,GACf,IAAM0X,EAAIlZ,EAAK8C,MACb,SAACC,GAAD,OAAOoW,GAASpW,EAAE+L,SAAWtN,EAAI4X,WAAWC,UAQ9C,OACE,kBAAC,YAAD,CACEnW,IAAK1B,EAAI2B,OACTR,UAAWnB,EACXD,aAAc,WAEVpB,EADe,qBAAN+Y,EACS,CAChB,CAAEpK,MAAOtN,EAAI4X,WAAWE,WACxB,CAAEvJ,UAA2B,KAAhBmJ,EAAEnX,UAAmB,EAAImX,EAAEnX,WACxC,CAAEqO,OAAqB,KAAb8I,EAAE9W,OAAgB,EAAI8W,EAAE9W,QAClC,CAAE+N,UAA2B,KAAhB+I,EAAEhX,UAAmB,EAAIgX,EAAEhX,WACxC,CACEqX,YACqB,KAAnBL,EAAE/B,aAAsB,EAAI+B,EAAE/B,cAElC,CACEqC,eACwB,KAAtBN,EAAEhC,gBAAyB,EAAIgC,EAAEhC,kBAkBrB,CAChB,CAAEpI,MAAOtN,EAAI4X,WAAWK,MACxB,CAAE1J,UAAW,GACb,CAAEK,OAAQ,GACV,CAAED,UAAW,GACb,CAAEoJ,YAAa,GACf,CAAEC,eAAgB,MAIxB7X,aAAc,WACZxB,EAAkB,KAEpBxB,MAAO,CACLgB,MAAO,CACLC,KAAM,OACNF,QAAS,QAEXI,QAAS,CACPF,KAAM,OACNF,QAAS,SAGbE,KACEsZ,EACI/X,GAAWkD,OAAO6U,EAAEH,KAEpB,oBCqBTW,G,kDA3Hb,WAAYvb,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,oEAKKub,GACtB,OAAQA,EAAS,IACf,IAAK,YACH,MAAO,mBAET,IAAK,SACH,MAAO,mBAET,IAAK,YACH,MAAO,mBAET,QACE,MAAO,sB,+BAGH,IAAD,OACP,OACE,yBAAKjb,UAAU,MAAMC,MAAO,CAAE2G,UAAW,KACvC,yBAAK5G,UAAU,mBAAmBC,MAAO,CAAEoV,UAAW,UACpD,yBAAKrV,UAAU,cACb,kBAAC,GAAD,CACEqa,UAAWta,KAAKN,MAAM4a,UACtBtO,QAAS,CAAC,YAAa,YAAa,UACpCM,aAAc,CAAC,YAAa,YAAa,UACzCoC,OAAQ,CACN,oBACA,mBACA,oBAEFrH,QAAS,SAACmO,GAAD,OAAU,EAAK9V,MAAMyb,YAAY3F,MAE5C,kBAAC4F,GAAD,CACEd,UAAWta,KAAKN,MAAM4a,UACtB/Y,KACmC,IAAjCvB,KAAKN,MAAM8Y,WAAW/S,OAClBzF,KAAKN,MAAM8Y,WAAW7S,QACpB,SAACrG,GAAD,MAAiC,UAAnBA,EAAS+Q,SAEzB,GAEN3O,kBAAmB,SAACoM,GAAD,OACjB,EAAKpO,MAAM2b,oBAAoBvN,MAGnC,kBAAC,IAAD,KAC2C,IAAxC9N,KAAKN,MAAMgC,kBAAkB+D,OAC5B,6BACE,0BACEvF,MAAO,CACLmD,MAAOrD,KAAKsb,wBACV9U,OAAOC,KAAKzG,KAAKN,MAAMgC,kBAAkB,KAE3CyB,WAAY,OACZC,SAAU,KAGXoD,OAAOmB,OAAO3H,KAAKN,MAAMgC,kBAAkB,KAE9C,6BACA,0BACExB,MAAO,CACLmD,MAAOrD,KAAKsb,wBACV9U,OAAOC,KAAKzG,KAAKN,MAAMgC,kBAAkB,KAE3CyB,WAAY,OACZC,SAAU,KAGXoD,OAAOC,KAAKzG,KAAKN,MAAMgC,kBAAkB,IAT5C,IASkD,KAC/C8E,OAAOmB,OAAO3H,KAAKN,MAAMgC,kBAAkB,IAAK,IACjD,0BAAMxB,MAAO,CAAEkD,SAAU,GAAID,WAAY,SAAzC,UAGCqD,OAAOmB,OAAO3H,KAAKN,MAAMgC,kBAAkB,KAE9C,6BACA,0BACExB,MAAO,CACLmD,MAAOrD,KAAKsb,wBACV9U,OAAOC,KAAKzG,KAAKN,MAAMgC,kBAAkB,KAE3CyB,WAAY,OACZC,SAAU,KAGXoD,OAAOC,KAAKzG,KAAKN,MAAMgC,kBAAkB,IAT5C,IASkD,KAC/C8E,OAAOmB,OAAO3H,KAAKN,MAAMgC,kBAAkB,IAAK,IACjD,0BAAMxB,MAAO,CAAEkD,SAAU,GAAID,WAAY,SAAzC,UAGCqD,OAAOmB,OAAO3H,KAAKN,MAAMgC,kBAAkB,KAE9C,6BACA,0BACExB,MAAO,CACLmD,MAAOrD,KAAKsb,wBACV9U,OAAOC,KAAKzG,KAAKN,MAAMgC,kBAAkB,KAE3CyB,WAAY,OACZC,SAAU,KAGXoD,OAAOC,KAAKzG,KAAKN,MAAMgC,kBAAkB,IAT5C,IASkD,KAC/C8E,OAAOmB,OAAO3H,KAAKN,MAAMgC,kBAAkB,KAE9C,8BAGF,W,GAlHQlB,aCFlBkO,I,OAAS,CACb4C,UAAW,UACXK,OAAQ,YA+CK4J,GA5CE,SAAC7b,GAChB,OACE,yBAAK+E,IAAK/E,EAAM2I,MAAOpI,UAAU,qBAC/B,yBAAKA,UAAU,aACb,2BAAOA,UAAU,mBAAmBP,EAAM2Q,OAC1C,6BACA,yBAAKpQ,UAAU,8BACZP,EAAM6B,KAAK6C,KAAI,SAAC7C,EAAM8G,GACrB,IAAImT,EAAW9b,EAAM8b,SAAS7V,QAC5B,SAACmI,GAAD,OAAatH,OAAOC,KAAKqH,GAAS,KAAOtH,OAAOC,KAAKlF,GAAM,MAEzDka,EAAW/b,EAAMqZ,UAAUpT,QAC7B,SAACmI,GAAD,OAAatH,OAAOC,KAAKqH,GAAS,KAAOtH,OAAOC,KAAKlF,GAAM,MAG7D,OACE,yBAAKtB,UAAU,mBACb,6BACGuG,OAAOmB,OAAOpG,GACM,IAApBia,EAAS/V,QAAgB+V,EAAS,GACjC,0BACEvb,UAAU,uBACVC,MAAO,CACLmD,MAAOqL,GAAOlI,OAAOC,KAAKlF,MAG3B,KACD,0BAAMtB,UAAU,wBAAhB,UACqB,IAApBub,EAAS/V,QAAgB+V,EAAS,GAC/BhV,OAAOmB,OAAO8T,EAAS,IAAI,GAC3B,MAEJ,MAEN,6BAAMjV,OAAOC,KAAKlF,YCsCnBsG,G,uKA3EH,IAAD,OACP,OAAqC,IAA9B7H,KAAKN,MAAMoI,eAChB,6BACE,yBAAKC,IAAKC,IAAOC,IAAI,YAGvB,oCACE,yBAAK/H,MAAO,CAAE0K,aAAc,KAC1B,2BACE8Q,aAAc1b,KAAKN,MAAM0I,aACzBc,KAAK,OACL+M,YAAY,SACZH,SAAU,SAACxO,GAAD,OAAO,EAAK5H,MAAMic,SAASrU,OAGzC,yBAAKrH,UAAU,OACqB,IAAjCD,KAAKN,MAAM8Y,WAAW/S,OACnBzF,KAAKN,MAAM8Y,WACR7S,QACC,SAACrG,GAAD,MACqB,UAAnBA,EAAS+Q,OACT/Q,EAAS+Q,MACNnI,cACAC,SAAS,EAAKzI,MAAM0I,iBAE1BhE,KAAI,SAAC9E,EAAU+I,GACd,OACE,kBAAC,GAAD,CACE5D,IAAK4D,EACLgI,MAAO/Q,EAAS+Q,MAChB/Q,SAAUA,EACV+I,MAAOA,EACP9G,KAAM,CACJ,CACE+P,UAAWhS,EAASgE,WAEtB,CACEkO,OAAQlS,EAASkE,QAEnB,CACEmO,OAAQrS,EAASqE,QAEnB,CACE+N,UAAWpS,EAASmE,WAEtB,CAAEmY,QAAStc,EAASuc,UACpB,CAAEC,MAAOxc,EAASsZ,aAEpB4C,SAAU,CACR,CACElK,UAC+B,KAA7BhS,EAASmZ,iBAEb,CACE9G,OAAkC,KAA1BrS,EAASoZ,eAGrBK,UAAW,CACT,CACEzH,UAAWhS,EAASmZ,iBAEtB,CACE9G,OAAQrS,EAASoZ,oBAM7B,W,GArEMlY,aCAdub,GAAY,OAOZlZ,GAAQ,SAACmZ,EAAMC,GAInB,IAJqC,IAAdC,EAAa,uDAAN,EAC1B7I,EAAI2I,EACFnZ,EAAQ,GAEPwQ,GAAK4I,GACVpZ,EAAM+F,KAAKyK,GACXA,GAAK6I,EAGP,OAAOrZ,GAqLMsZ,G,kDAhLb,WAAYzc,GAAQ,IAAD,uBACjB,cAAMA,IAoBR0c,SAAW,SAAAC,GAAS,IAAD,EACkB,EAAK3c,MAAhC4c,qBADS,MACO,SAAAC,GAAC,OAAIA,GADZ,EAGX7F,EAAc3S,KAAKyY,IAAI,EAAGzY,KAAK0Y,IAAIJ,EAAM,EAAKxF,aAE9C6F,EAAiB,CACrBhG,cACAG,WAAY,EAAKA,WACjB8F,UAAW,EAAKA,UAChBC,aAAc,EAAKA,cAGrB,EAAK3T,SAAS,CAAEyN,gBAAe,kBAAM4F,EAAcI,OAjClC,EAoCnBG,YAAc,SAAAR,GAAI,OAAI,SAAAS,GACpBA,EAAIC,iBACJ,EAAKX,SAASC,KAtCG,EAyCnBW,eAAiB,SAAAF,GACfA,EAAIC,iBACJ,EAAKX,SAAS,EAAKzc,MAAM+W,YAAqC,EAAtB,EAAKuG,eAAsB,IA3ClD,EA8CnBC,gBAAkB,SAAAJ,GAChBA,EAAIC,iBACJ,EAAKX,SAAS,EAAKzc,MAAM+W,YAAqC,EAAtB,EAAKuG,eAAsB,IAhDlD,EA8DnBE,iBAAmB,WAEjB,IAAMtG,EAAa,EAAKA,WAClBH,EAAc,EAAK/W,MAAM+W,YACzBuG,EAAiB,EAAKA,eAMtBG,EAAsC,EAAtB,EAAKH,eAAsB,EAGjD,GAAIpG,EAFgBuG,EAAe,EAEL,CAE5B,IAAMC,EAAYtZ,KAAKyY,IAAI,EAAG9F,EAAcuG,GACtCK,EAAUvZ,KAAK0Y,IAAI5F,EAAa,EAAGH,EAAcuG,GAEnDM,EAAQ1a,GAAMwa,EAAWC,GAOvBE,EAAeH,EAAY,EAC3BI,EAAiB5G,EAAayG,EAAW,EACzCI,EAAcN,GAAgBG,EAAM9X,OAAS,GAEnD,QAAQ,GAEN,KAAM+X,IAAiBC,EACrB,IAAME,EAAa9a,GAAMwa,EAAYK,EAAaL,EAAY,GAC9DE,EAAK,CAAIxB,IAAJ,mBAAkB4B,GAAlB,YAAiCJ,IACtC,MAIF,KAAOC,GAAgBC,EACrB,IAAME,EAAa9a,GAAMya,EAAU,EAAGA,EAAUI,GAChDH,EAAK,sBAAOA,GAAP,YAAiBI,GAAjB,CA1HI,UA2HT,MAIF,KAAMH,GAAgBC,EACtB,QACEF,EAAK,CAAIxB,IAAJ,mBAAkBwB,GAAlB,CAjII,UAsIb,MAAM,CAAE,GAAR,mBAAcA,GAAd,CAAqB1G,IAIvB,OAAOhU,GAAM,EAAGgU,IAtHC,MAEmDnX,EAA5Dkd,oBAFS,MAEM,KAFN,IAEmDld,EAAvCid,iBAFZ,MAEwB,GAFxB,IAEmDjd,EAAvBud,sBAF5B,MAE6C,EAF7C,SAIjB,EAAKN,UAAiC,kBAAdA,EAAyBA,EAAY,GAC7D,EAAKC,aAAuC,kBAAjBA,EAA4BA,EAAe,EAGtE,EAAKK,eAA2C,kBAAnBA,EACzBlZ,KAAKyY,IAAI,EAAGzY,KAAK0Y,IAAIQ,EAAgB,IACrC,EAEJ,EAAKpG,WAAa9S,KAAK6Z,KAAK,EAAKhB,aAAe,EAAKD,WAErD,EAAKhd,MAAQ,CAAE+W,YAAa,GAdX,E,gEAkBjB1W,KAAKoc,SAAS,K,+BAwGN,IAAD,OAEP,IAAKpc,KAAK4c,cAAoC,IAApB5c,KAAK6W,WAAkB,OAAO,KAFjD,IAICH,EAAgB1W,KAAKL,MAArB+W,YACF6G,EAAQvd,KAAKmd,mBAEnB,OACE,kBAAC,WAAD,KACE,yBAAKU,aAAW,wBACd,wBAAI5d,UAAU,cACVsd,EAAMnZ,KAAI,SAACiY,EAAMhU,GAEjB,OAAIgU,IAASN,GACX,wBAAItX,IAAK4D,EAAOpI,UAAU,aACxB,uBAAGA,UAAU,YAAYI,KAAK,IAAIwd,aAAW,WAAWxW,QAAS,EAAK2V,gBACpE,0BAAMc,cAAY,QAAlB,QACA,0BAAM7d,UAAU,WAAhB,cA/JD,UAoKDoc,EACF,wBAAI5X,IAAK4D,EAAOpI,UAAU,aACxB,uBAAGA,UAAU,YAAYI,KAAK,IAAIwd,aAAW,OAAOxW,QAAS,EAAK6V,iBAChE,0BAAMY,cAAY,QAAlB,QACA,0BAAM7d,UAAU,WAAhB,UAMJ,wBAAIwE,IAAK4D,EAAOpI,UAAS,mBAAeyW,IAAgB2F,EAAO,UAAY,KACzE,uBAAGpc,UAAU,YAAYI,KAAK,IAAIgH,QAAU,EAAKwV,YAAYR,IAAUA,c,GA7JhE7b,aCyNVud,G,uKAvOH,IAAD,OACDvK,EAAe,CACnBC,QAAS,SAACC,GAAD,sBACJA,EADI,CAEP/D,gBAAiB,QACjBtK,YAAa,GACbuF,aAAc,MAEhBqB,OAAQ,SAACyH,EAAD,GAAyD,EAA9CnS,KAA+C,IAAzCoS,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAC9C,OAAO,eACFH,EADL,CAEE/D,gBAAiBgE,EACb,KACAE,EACA,UACAD,EACA,QACA,KACJvQ,MAAOsQ,EAAa,OAASE,EAAa,QAAU,UACpD5O,OAAQ0O,EAAa,cAAgB,UAErC,UAAU,eACLD,EAAO,WADZ,CAEE/D,iBAAkBgE,IAAeE,EAAa,UAAY,eAM5D7H,EAAUxF,OAAOC,KAAKiU,IAAUtW,KAAI,SAAC9E,GACzC,MAAO,CACL2D,MAAO3D,EACP8J,MAAOsR,GAASpb,OAIhByK,EAAO,IAAIiU,KACXC,EACFlU,EAAKmU,WAAa,EAAI,IAAMnU,EAAKoU,UAAY,IAAMpU,EAAKqU,cAE1D,OACE,oCACE,6BACE,kBAAC,IAAD,CACExI,aAAa,EACbE,SAAU,SAACC,GACT,EAAK9M,SAAS,CACZ+N,UAAW,GACXD,iBAAiB,IAEnB,EAAKsH,cACgB,OAAnBtI,EACIuI,KAAEC,MAAM/X,OAAOC,KAAKiU,IAAW,GAAG,GAClC,CAAC3E,EAAe9S,MAAMmQ,iBAG9BM,OAAQF,EACRxH,QAASA,KAIb,yBAAK/L,UAAU,QACkB,IAA9BD,KAAKN,MAAMoI,eACV,yBAAK5H,MAAO,CAAE4B,MAAO,SACnB,yBAAKiG,IAAKC,IAAOC,IAAI,YAEW,IAAhCjI,KAAKN,MAAMsX,UAAUvR,OACvBzF,KAAKN,MAAMsX,UAAU5S,KAAI,SAACoa,EAAUC,GAClC,IA4D+B,EA5D3Bld,EAAOiF,OAAOC,KAAK+X,EAASE,cAAc,IAC3C/Y,QAAO,SAACpE,GAAD,MAAmB,SAATA,GAAmBA,IAAS0c,KAC7C7Z,KAAI,SAAC+E,EAASd,GAAW,IAAD,EACvB,OAAO,EAAP,CACEyB,KAAMX,EACNmI,UAAWkN,EAASE,cAAc,GAAGvV,GAASwV,YAC9ChN,OAAQ6M,EAASE,cAAc,GAAGvV,GAASyV,aAC3ClN,UACE8M,EAASE,cAAc,GAAGvV,GAAS0V,kBALvC,cAMG,YACCL,EAASE,cAAc,GAAGvV,GAAS2V,iBAPvC,cAQG,aACCN,EAASE,cAAc,GAAGvV,GAAS4V,kBATvC,KAYAC,EAC0B,IAA5B,EAAKtf,MAAMuf,MAAMxZ,eACVe,OAAOmB,OACZ,EAAKjI,MAAMuf,MAAM,GAAGC,aAAa,IACjCvZ,QACA,SAACwO,GAAD,MACc,OAAZA,GACAA,EAAQ9D,QAAUmO,EAASW,oBAAoB,GAAGC,KAAK/O,SACzD,GACAgP,EAAgB7Y,OAAOmB,OACzB,EAAKjI,MAAMuf,MAAM,GAAGC,aAAa,IACjCvZ,QACA,SAACwO,GAAD,MACc,OAAZA,GACAA,EAAQ9D,QAAUmO,EAASW,oBAAoB,GAAGC,KAAK/O,SACzD,GACEiP,EAAa9Y,OAAOmB,OAAO6W,EAASE,cAAc,IACpDlY,OAAOmB,OAAO6W,EAASE,cAAc,IAAIjZ,OAAS,GAEhDnC,EACY,cAAd0b,EACIK,EAAcV,YACdW,EAAWX,YACbhb,EACY,cAAdqb,EACIK,EAAcT,aACdU,EAAWV,aACbnb,EACY,cAAdub,EACIK,EAAcE,gBACdD,EAAWT,iBACbW,EACY,cAAdR,EACIK,EAAcI,sBACdH,EAAWR,gBACbY,EACY,cAAdV,EACIK,EAAcM,uBACdL,EAAWP,iBACba,EAAuBpZ,OAAOmB,OAChC,EAAKjI,MAAMuf,MAAM,GAAGC,aAAa,IACjCvZ,QACA,SAACwO,GAAD,OACEA,EAAQ9D,QAAUmO,EAASW,oBAAoB,GAAGC,KAAK/O,SACzD,GACgB,cAAd2O,GACFzd,EAAKqH,MAAL,GACEkB,KAAMmU,EACN3M,UAAWsO,EAAqBjB,YAChChN,OAAQiO,EAAqBhB,aAC7BlN,UAAWkO,EAAqBL,iBAJlC,cAKG,YAAcK,EAAqBH,uBALtC,cAMG,aAAeG,EAAqBD,wBANvC,IASF,OACE,yBAAKlb,IAAKga,EAAQxe,UAAU,uBAC1B,yBAAKA,UAAU,oBACb,2BAAOA,UAAU,oBACdue,EAASW,oBAAoB,GAAGC,KAAK/O,OAExC,6BACA,yBAAKpQ,UAAU,8BACb,yBAAKA,UAAU,8BACb,6BACGqD,EACiB,IAAjBkc,EAAqB,KACpB,0BAAMtf,MAAO,CAAEkD,SAAU,KACtB,KACD,0BACElD,MAAO,CACLkD,SAAU,GACVD,WAAY,SAHhB,UAQCqc,IAIP,2CAEF,yBAAKvf,UAAU,2BACb,6BACG0D,EACc,IAAd+b,EAAkB,KACjB,0BAAMxf,MAAO,CAAEkD,SAAU,KACtB,KACD,0BACElD,MAAO,CACLkD,SAAU,GACVD,WAAY,SAHhB,UAQCuc,IAIP,wCAEF,yBAAKzf,UAAU,8BACb,6BAAMwD,GACN,4CAGJ,kBAAC,EAAD,CACEuJ,MAAO,YACPwB,OAAQ,CACN,YACA,YACA,SACA,YACA,cAEFE,OAAQ,CACN,UACA,UACA,UACA,UACA,WAEFnN,KAAMA,SAMd,KACJ,6BACEvB,KAAKN,MAAMqX,gBAST,KARF,yBAAK9W,UAAU,MAAMC,MAAO,CAAE4B,MAAO,OAAQ8C,QAAS,KACpD,kBAAC,GAAD,CACEgY,aAAcpW,OAAOC,KAAKiU,IAAUjV,OACpCkX,UAAW,EACXM,eAAgB,EAChBX,cAAetc,KAAKN,MAAM4c,uB,GA9NjB9b,aCwRVqf,G,kDA9Qb,WAAYngB,GAAQ,IAAD,8BACjB,cAAMA,IAwJR4c,cAAgB,SAACjF,GAAW,IAClBX,EAA4BW,EAA5BX,YAAaG,EAAeQ,EAAfR,WAErB,EAAK5N,SAAS,CACZ+N,UAAW,GACXlP,gBAAgB,IAEb,EAAKnI,MAAMoX,iBACd,EAAKsH,cAAcC,KAAEC,MAAM/X,OAAOC,KAAKiU,IAAW,GAAGhE,EAAc,IAGrE,EAAKzN,SAAS,CACZyN,YAAaA,EAAc,EAC3BG,WAAYA,KAtKG,EA0KnB7N,iBAAmB,WACjB,EAAKC,SAAS,CAAEnH,MAAOzC,OAAO0C,WAAYE,OAAQ5C,OAAO6C,eAzKzD,EAAKvC,MAAQ,CACX0M,oBAAqB,YACrBjE,aAAc,GACd6W,MAAO,GACP/S,GAAI,IACJpK,MAAO,EACPG,OAAQ,EACRqX,gBAAiB,GACjB5X,kBAAmB,GACnB4Y,UAAW,YACXnI,cAAe,YACfyE,cAAe,MACfF,YAAa,EACboJ,gBAAiB,EACjBC,eAAgB,EAChBlJ,WAAY,EACZ2B,WAAY,GACZoB,WAAY,GACZ9R,gBAAgB,EAChBiP,iBAAiB,EACjBxV,KAAM,GACNyV,UAAW,IAvBI,E,gEA2BE,IAAD,OAClB3X,OAAOkD,iBAAiB,SAAUvC,KAAKgJ,kBAEvChJ,KAAKiJ,SAAS,CACZnB,gBAAgB,IAElBzI,OAAOkD,iBAAiB,SAAS,WAC/B,EAAKyd,gBACL,EAAKC,eACL,EAAKC,gBACL,EAAKC,aAAa,CAAC,OAGrBngB,KAAKggB,gBACLhgB,KAAKigB,eACLjgB,KAAKkgB,gBACLlgB,KAAKmgB,aAAa,CAAC,M,sCAGJ,IAAD,OACdvI,MAAM,4DAA6D,CACjEC,OAAQ,QAEPC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKhP,SAAS,CACZ2Q,WAAY3B,OAGfC,OAAM,SAACrY,GACN,EAAKoJ,SAAS,CACZnB,gBAAgB,S,sCAKP,IAAD,OACd8P,MAAM,uDAAwD,CAC5DwI,OAAQ,CAAE,8BAA+B,KACzCvI,OAAQ,QAEPC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKhP,SAAS,CACZuP,WAAYP,OAGfC,OAAM,SAACrY,GACN,EAAKoJ,SAAS,CACZnB,gBAAgB,S,qCAKR,IAAD,OACb8P,MAAM,uCAAwC,CAC5CC,OAAQ,QAEPC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKhP,SAAS,CACZqQ,gBAAiBrB,OAGpBC,OAAM,SAACrY,GACN,EAAKoJ,SAAS,CACZnB,gBAAgB,S,mCAKXuY,GAAS,IAAD,OACfpB,EAAQ,GACZjf,KAAKiJ,SAAS,CACZgW,MAAO,GACPnX,gBAAgB,IAElBuY,EAAOjc,KAAI,SAAC9E,GACVsY,MAAM,+FAEJ,CACEC,OAAQ,QAGTC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKhP,SAAS,CACZnB,gBAAgB,EAChBmX,MAAOA,EAAMqB,OAAOrI,QAGvBC,OAAM,SAACrY,GACN,EAAKoJ,SAAS,CACZnB,gBAAgB,Y,oCAMZvG,GAAO,IAAD,OAClBA,EAAK6C,KAAI,SAAC9E,GACRsY,MAAM,8FAAD,OAC2FtY,GAC9F,CACEuY,OAAQ,QAGTC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKhP,UAAS,SAACtJ,GAGb,MAAO,CACLqX,UAHgBrX,EAAMqX,UAAUsJ,OAAOrI,GAIvCnQ,gBAHqB,SAO1BoQ,OAAM,SAACrY,GACN,EAAKoJ,SAAS,CACZnB,gBAAgB,Y,6CA4BxBzI,OAAOmD,oBAAoB,SAAUxC,KAAKgJ,oB,+BAGlC,IAAD,OACP,OACE,kBAAC,EAAD,KACE,yBAAK/I,UAAU,UACb,yBAAKA,UAAU,aACb,6BACE,kBAAC,EAAD,CAAQ0I,QAAS3I,KAAKN,MAAMiJ,QAAS7G,MAAO9B,KAAKL,MAAMmC,SAEzD,yBAAK5B,MAAO,CAAEoV,UAAW,SACvB,kBAAC,GAAD,CAAYkD,WAAYxY,KAAKL,MAAM6Y,aACnC,kBAAC,EAAD,CACEtP,KAAK,SACLgD,GAAIlM,KAAKL,MAAMuM,GACfF,QAAS,CAAC,YAAa,OAAQ,QAAS,OACxCG,aAAc,CAAC,IAAK,QAAS,SAAU,QACvC9E,QAAS,SAACiR,GACR,EAAKrP,SAAS,CACZiD,GAAIoM,OAIS,MAAlBtY,KAAKL,MAAMuM,GACV,kBAAC,GAAD,CACEoN,gBAAiBtZ,KAAKL,MAAM2Z,gBAC5BM,WAAY5Z,KAAKL,MAAMia,WACvBpB,WAAYxY,KAAKL,MAAM6Y,WACvBnM,oBAAqBrM,KAAKL,MAAM0M,oBAChC8F,cAAenS,KAAKL,MAAMwS,cAC1BiI,YAAa,SAAC5E,GACZ,EAAKvM,SAAS,CACZoD,oBAAqBmJ,KAGzBM,SAAU,SAACC,GACT,EAAK9M,SAAS,CACZkJ,cACqB,OAAnB4D,EACI,YACAA,EAAe9S,WAIzB,KACe,SAAlBjD,KAAKL,MAAMuM,GACV,kBAAC,GAAD,CACEoO,UAAWta,KAAKL,MAAM2a,UACtB9B,WAAYxY,KAAKL,MAAM6Y,WACvB9W,kBAAmB1B,KAAKL,MAAM+B,kBAC9B2Z,oBAAqB,SAACvN,GACpB,EAAK7E,SAAS,CAAEvH,kBAAmBoM,KAErCqN,YAAa,SAAC3F,GACZ,EAAKvM,SAAS,CACZqR,UAAW9E,OAIf,KACe,WAAlBxV,KAAKL,MAAMuM,GACV,kBAAC,GAAD,CAAOsM,WAAYxY,KAAKL,MAAM6Y,aAC5B,KACe,UAAlBxY,KAAKL,MAAMuM,GACV,kBAAC,GAAD,CACEpE,eAAgB9H,KAAKL,MAAMmI,eAC3BM,aAAcpI,KAAKL,MAAMyI,aACzBoQ,WAAYxY,KAAKL,MAAM6Y,WACvBmD,SAAU,SAACrU,GACT,EAAK2B,SAAS,CACZb,aAAcd,EAAEnC,OAAOlC,MAAMiF,cAC7B6O,iBAAiB,OAIrB,KACe,WAAlB/W,KAAKL,MAAMuM,GACV,kBAAC,GAAD,CACEpE,eAAgB9H,KAAKL,MAAMmI,eAC3BmX,MAAOjf,KAAKL,MAAMsf,MAClBjI,UAAWhX,KAAKL,MAAMqX,UACtBD,gBAAiB/W,KAAKL,MAAMoX,gBAC5BuF,cAAetc,KAAKsc,gBAEpB,MAEN,kBAAC,EAAD,a,GAvQS9b,aCRrB+f,KAAQC,IAAIC,KAAKC,MACjB,IAAM/X,GAAUgY,eAEhBzV,IAAQ0V,WAAW,iBAAkB,CAAEC,OAAO,IAC9C3V,IAAQ4V,IAAI,CAAEzE,KAAMhd,OAAOC,SAASyhB,SAAW1hB,OAAOC,SAAS0hB,OAC/D9V,IAAQ+V,SAAS5hB,OAAOC,SAASyhB,SAAW1hB,OAAOC,SAAS0hB,MAE5DrY,GAAQuY,QAAO,SAAC5hB,GACd4L,IAAQ4V,IAAI,CAAEzE,KAAM/c,EAASyhB,SAAWzhB,EAAS0hB,OACjD9V,IAAQ+V,SAAS3hB,EAASyhB,SAAWzhB,EAAS0hB,SAGzC,IAAMG,GAAb,uKAEI,OACE,6BACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,SAASC,UAAWlL,KAChC,kBAAC,IAAD,CAAOiL,KAAK,IAAIC,UAAWzB,YAPvC,GAA2Brf,aCZrB+gB,ID2BShJ,YAAW4I,IC1BxB,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,GAAD,SAKNK,IAASC,OAAOF,GAASG,SAASC,eAAe,S/BkH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhK,MAAK,SAAAiK,GACJA,EAAaC,gBAEd9J,OAAM,SAAArY,GACLE,QAAQF,MAAMA,EAAMoiB,a,mBgCzI5B/iB,EAAOC,QAAU,IAA0B,oC","file":"static/js/main.a63d7d5b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github1.0ba2aa20.png\";","module.exports = __webpack_public_path__ + \"static/media/india.b9bb7cd7.png\";","module.exports = __webpack_public_path__ + \"static/media/world.37c09ef3.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport \"./ErrorBoundry.css\";\n\nclass ErrorBoundry extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    console.error(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return (\n        <div>\n          <section className=\"page_404\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div\n                  className=\"col-sm-12\"\n                  style={{ display: \"flex\", justifyContent: \"center\" }}\n                >\n                  <div className=\"col-sm-10 col-sm-offset-1  text-center\">\n                    <div className=\"four_zero_four_bg\"></div>\n\n                    <div className=\"contant_box_404\">\n                      <h3 className=\"h2\">Look like you're lost</h3>\n\n                      <p>the page you are looking for not available!</p>\n\n                      <a\n                        href=\"https://miteshtagadiya.github.io/Covid-19-Global-Dashboard\"\n                        className=\"link_404\"\n                      >\n                        Go to Home\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundry;\n","import React, { useState } from \"react\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport { scaleLog } from \"d3-scale\";\nimport ReactTooltip from \"react-tooltip\";\nimport \"./indiaMap.css\";\nimport { useEffect } from \"react\";\n\nconst INDIA_TOPO_JSON = require(\"./india.topo.json\");\n\nconst PROJECTION_CONFIG = {\n  scale: 350,\n  center: [78.9629, 22.5937], // always in [East Latitude, North Longitude]\n};\n\n// Red Variants\nconst COLOR_RANGE = [\"#ffedea\", \"#ffcec5\", \"#ffad9f\"];\n\nconst DEFAULT_COLOR = \"#EEE\";\n\nconst geographyStyle = {\n  default: {\n    outline: \"none\",\n  },\n  hover: {\n    fill: \"#F53\",\n    transition: \"all 250ms\",\n    outline: \"none\",\n  },\n  pressed: {\n    outline: \"none\",\n  },\n};\n\nfunction useWindowSize() {\n  const isClient = typeof window === \"object\";\n\n  function getSize() {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined,\n    };\n  }\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    if (!isClient) {\n      return false;\n    }\n\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowSize;\n}\n\nconst IndiaMap = ({ data }) => {\n  const [tooltipContent, setTooltipContent] = useState(\"\");\n  const size = useWindowSize();\n\n  const colorScale = scaleLog().domain([1, 10]).range(COLOR_RANGE);\n\n  const onMouseEnter = (geo, current = { value: \"NA\" }) => {\n    return () => {\n      setTooltipContent(current);\n    };\n  };\n\n  const onMouseLeave = () => {\n    setTooltipContent(\"\");\n  };\n\n  return (\n    <div className=\"indiamap\">\n      {tooltipContent !== \"\" ? (\n        <ReactTooltip>\n          <div>\n            <span\n              style={{\n                fontWeight: \"bold\",\n                fontSize: 16,\n                color: \"rgb(64, 75, 105)\",\n              }}\n            >\n              {tooltipContent.state}\n            </span>\n            <br />\n            <span\n              style={{\n                fontWeight: \"bold\",\n                fontSize: 16,\n                color: \"rgb(228, 51, 57)\",\n              }}\n            >\n              {\"Confirmed: \"}\n              {tooltipContent.confirmed}{\" \"}\n              {tooltipContent.deltaconfirmed !== \"0\" ? (\n                <span style={{ fontSize: 17, fontWeight: \"bold\" }}>\n                  &#9650; {tooltipContent.deltaconfirmed}\n                </span>\n              ) : null}\n            </span>\n            <br />\n            <span\n              style={{\n                fontWeight: \"bold\",\n                fontSize: 16,\n                color: \"rgb(25, 42, 86)\",\n              }}\n            >\n              {\"Active: \"}\n              {tooltipContent.active}\n            </span>\n            <br />\n            <span\n              style={{\n                fontWeight: \"bold\",\n                fontSize: 16,\n                color: \"rgb(0, 98, 102)\",\n              }}\n            >\n              {\"Recovered: \"}\n              {tooltipContent.recovered}\n              {tooltipContent.deltaconfirmed !== \"0\" ? (\n                <span style={{ fontSize: 17, fontWeight: \"bold\" }}>\n                  &#9650; {tooltipContent.deltarecovered}\n                </span>\n              ) : null}\n            </span>\n            <br />\n            <span\n              style={{\n                fontWeight: \"bold\",\n                fontSize: 16,\n                color: \"rgb(83, 92, 104)\",\n              }}\n            >\n              {\"Deaths: \"}\n              {tooltipContent.deaths}\n              {tooltipContent.deltaconfirmed !== \"0\" ? (\n                <span style={{ fontSize: 17, fontWeight: \"bold\" }}>\n                  &#9650; {tooltipContent.deltadeaths}\n                </span>\n              ) : null}\n            </span>\n            <br />\n          </div>\n        </ReactTooltip>\n      ) : null}\n      <ComposableMap\n        projectionConfig={PROJECTION_CONFIG}\n        projection=\"geoMercator\"\n        height={\n          size.width < 1500 && size.width > 768\n            ? 200\n            : size.width <= 768 && size.width > 400\n            ? 150\n            : size.width <= 400\n            ? 120\n            : Math.floor(size.width / 10)\n        }\n        width={\n          size.width < 1500 && size.width > 768\n            ? 500\n            : size.width <= 768 && size.width > 400\n            ? 300\n            : size.width <= 400\n            ? 220\n            : Math.floor(size.width / 5)\n        }\n        data-tip=\"\"\n      >\n        <Geographies geography={INDIA_TOPO_JSON}>\n          {({ geographies }) =>\n            geographies.map((geo) => {\n              const current = data.find((s) => s.statecode === geo.id);\n              return (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  fill={current ? colorScale(current.active) : DEFAULT_COLOR}\n                  style={geographyStyle}\n                  onMouseEnter={onMouseEnter(geo, current)}\n                  onMouseLeave={onMouseLeave}\n                />\n              );\n            })\n          }\n        </Geographies>\n      </ComposableMap>\n    </div>\n  );\n};\n\nexport default IndiaMap;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Footer = (props) => {\n  return (\n    <div style={{ padding: 15 }}>\n      <div\n        style={{\n          fontWeight: \"bold\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          fontSize: 22,\n          paddingBottom: 15,\n        }}\n      >\n        <div\n          style={{\n            border: \"3px solid white\",\n            padding: \"5px 25px\",\n            borderRadius: 5,\n            background: \"white\",\n            color: \"#404b69\",\n            cursor: \"pointer\",\n          }}\n        >\n          <a\n            style={{ textDecoration: \"none\", color: \"#404b69\" }}\n            href=\"https://github.com/miteshtagadiya/Covid-19-Global-Dashboard\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <span style={{ marginRight: 10 }}>\n              <FontAwesomeIcon icon={[\"fab\", \"github\"]} className=\"github\" />\n            </span>\n            Github\n          </a>\n        </div>\n      </div>\n      <div>\n        Designed and Developed by{\"  \"}\n        <a\n          style={{\n            color: \"#f6565b\",\n            fontWeight: \"bold\",\n            textDecoration: \"none\",\n          }}\n          href=\"https://miteshtagadiya.js.org\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          Mitesh Tagadiya\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const data =\n      this.props.india.length !== 0\n        ? this.props.india.statewise\n            .filter((state) => state.state !== \"Total\")\n            .map((state) => {\n              return {\n                state: state.state,\n                confirmed: Number(state.confirmed),\n                active: Number(state.active),\n                recovered: Number(state.recovered),\n                deaths: Number(state.deaths),\n                deltaConfirmed: Number(state.deltaconfirmed),\n                deltaActive: Number(\n                  state.deltaconfirmed -\n                    state.deltarecovered -\n                    state.deltadeaths\n                ),\n                deltaRecovered: Number(state.deltarecovered),\n                deltaDeaths: Number(state.deltadeaths),\n              };\n            })\n        : [];\n\n    const columns =\n      this.props.india.length !== 0\n        ? [\n            {\n              Header: \"State/UT\",\n              accessor: \"state\", // String-based value accessors!\n            },\n            {\n              Header: \"Confirmed\",\n              accessor: \"confirmed\",\n              Cell: (props) => {\n                return (\n                  <>\n                    {props.original.deltaConfirmed === 0 ? null : (\n                      <span\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"bold\",\n                          color: \"#e43339\",\n                        }}\n                      >\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\n                          &#9650;\n                        </span>\n                        {props.original.deltaConfirmed}\n                      </span>\n                    )}{\" \"}\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n            {\n              Header: \"Active\",\n              accessor: \"active\",\n              Cell: (props) => {\n                return (\n                  <>\n                    {props.original.deltaActive === 0 ? null : (\n                      <span\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"bold\",\n                          color: \"#192a56\",\n                        }}\n                      >\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\n                          &#9650;\n                        </span>\n                        {props.original.deltaActive}\n                      </span>\n                    )}{\" \"}\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n            {\n              Header: \"Recovered\",\n              accessor: \"recovered\",\n              Cell: (props) => {\n                return (\n                  <>\n                    {props.original.deltaRecovered === 0 ? null : (\n                      <span\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"bold\",\n                          color: \"#006266\",\n                        }}\n                      >\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\n                          &#9650;\n                        </span>\n                        {props.original.deltaRecovered}\n                      </span>\n                    )}{\" \"}\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n            {\n              Header: \"Deaths\",\n              accessor: \"deaths\",\n              Cell: (props) => {\n                return (\n                  <>\n                    {props.original.deltaDeaths === 0 ? null : (\n                      <span\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"bold\",\n                          color: \"#535c68\",\n                        }}\n                      >\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\n                          &#9650;\n                        </span>\n                        {props.original.deltaDeaths}\n                      </span>\n                    )}{\" \"}\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n          ]\n        : [];\n\n    const cityData =\n      this.props.stateWiseCity.length !== 0\n        ? Object.keys(this.props.stateWiseCity).map((city) => {\n            return {\n              [city]: Object.keys(\n                this.props.stateWiseCity[city].districtData\n              ).map((key) => {\n                return {\n                  city: key,\n                  confirmed: this.props.stateWiseCity[city].districtData[key]\n                    .confirmed,\n                  active: this.props.stateWiseCity[city].districtData[key]\n                    .active,\n                  recovered: this.props.stateWiseCity[city].districtData[key]\n                    .recovered,\n                  deaths: this.props.stateWiseCity[city].districtData[key]\n                    .deaths,\n                };\n              }),\n            };\n          })\n        : [];\n\n    const cityColumns =\n      this.props.india.length !== 0\n        ? [\n            {\n              Header: \"District\",\n              accessor: \"city\",\n            },\n            {\n              Header: \"Confirmed\",\n              accessor: \"confirmed\",\n            },\n            {\n              Header: \"Active\",\n              accessor: \"active\",\n            },\n            {\n              Header: \"Recovered\",\n              accessor: \"recovered\",\n            },\n            {\n              Header: \"Deaths\",\n              accessor: \"deaths\",\n            },\n          ]\n        : [];\n    return (\n      <div className=\"row\" style={{ marginTop: 15 }}>\n        <div className=\"col-sm-12\">\n          <div\n            style={{\n              background: \"white\",\n              color: \"#404b69\",\n              borderRadius: 10,\n            }}\n          >\n            <ReactTable\n              data={data}\n              columns={columns}\n              defaultPageSize={10}\n              className=\"-striped -highlight\"\n              noDataText={<b>No data found</b>}\n              getTheadProps={(state, rowInfo, column) => {\n                return {\n                  style: {\n                    fontWeight: \"bold\",\n                  },\n                };\n              }}\n              getTdProps={(state, rowInfo, column, instance) => {\n                return {\n                  onClick: (e, handleOriginal) => {\n                    if (handleOriginal) {\n                      handleOriginal();\n                    }\n                  },\n                };\n              }}\n              filterable\n              SubComponent={(row) => {\n                return row.original.confirmed === 0 ? null : (\n                  <div style={{ padding: \"20px\" }}>\n                    <div style={{ borderRadius: 10 }}>\n                      <ReactTable\n                        data={\n                          Object.values(\n                            cityData.filter(\n                              (state) =>\n                                Object.keys(state)[0] === row.original.state\n                            )[0]\n                          )[0]\n                        }\n                        columns={cityColumns}\n                        defaultPageSize={5}\n                        showPagination={true}\n                      />\n                    </div>\n                  </div>\n                );\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Table;\n","import React, { Component } from \"react\";\nimport Virus from \"assets/virus.gif\";\n\nclass Cards extends Component {\n  render() {\n    return (\n      <div className=\"row\">\n        {this.props.locationLoader === true ? (\n          <div>\n            <img src={Virus} alt=\"Loader\" />\n          </div>\n        ) : this.props.india.length !== 0 ? (\n          this.props.india.statewise\n            .filter((location) =>\n              location.state\n                .toLowerCase()\n                .includes(this.props.searchString.toLowerCase())\n            )\n            .map((location, index) => {\n              return location.state !== \"Total\" ? (\n                <div key={index} className=\"col-sm-4\" style={{ padding: 15 }}>\n                  <div\n                    style={{\n                      textAlign: \"center\",\n                      borderRadius: 10,\n                      background: \"white\",\n                      color: \"#404b69\",\n                    }}\n                  >\n                    <label\n                      style={{\n                        borderTopLeftRadius: 10,\n                        borderTopRightRadius: 10,\n                        color: \"white\",\n                        width: \"100%\",\n                        fontSize: 18,\n                        fontWeight: \"bold\",\n                        padding: 10,\n                        background: \"#404b69\",\n                      }}\n                    >\n                      {location.state}\n                    </label>\n                    <br />\n                    <div\n                      className=\"row justify-content-center\"\n                      style={{ paddingTop: 15, paddingBottom: 15 }}\n                    >\n                      <div style={{ padding: 10, fontWeight: \"bold\" }}>\n                        <div>{location.confirmed}</div>\n                        <div>Confirmed</div>\n                      </div>\n                      <div style={{ padding: 10, fontWeight: \"bold\" }}>\n                        <div>{location.active}</div>\n                        <div>Active</div>\n                      </div>\n                      <div style={{ padding: 10, fontWeight: \"bold\" }}>\n                        <div>{location.recovered}</div>\n                        <div>Recovered</div>\n                      </div>\n                      <div style={{ padding: 10, fontWeight: \"bold\" }}>\n                        <div>{location.deaths}</div>\n                        <div>Deaths</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ) : null;\n            })\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Cards;\n","import React from \"react\";\nimport Github from \"../../../assets/github1.png\";\nimport IndiaIcon from \"../../../assets/india.png\";\nimport World from \"../../../assets/world.png\";\nimport \"./Header.sass\";\n\nconst Header = (props) => {\n  return (\n    <div>\n      <div className=\"Header\">\n        Covid-19 Global {props.width < 1024 ? \"\" : \"Dashboard\"}\n        <a\n          href=\"https://github.com/miteshtagadiya/Covid-19-Global-Dashboard\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <img src={Github} alt=\"github\" className=\"github-icon\" />\n        </a>\n      </div>\n      <div className=\"Switch-dashboard\">\n        <img\n          onClick={() => props.history.push(\"/india\")}\n          src={IndiaIcon}\n          alt=\"India\"\n          className=\"india-icon\"\n        />\n        <span style={{ fontWeight: \"bold\" }}>Switch</span>\n        <img\n          onClick={() => props.history.push(\"/\")}\n          src={World}\n          alt=\"World\"\n          className=\"global-icon\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { PureComponent } from \"react\";\nimport {\n  LineChart,\n  Line,\n} from \"recharts\";\n\nexport default class TinyChart extends PureComponent {\n  state = { width: 0, height: 0 };\n\n  updateDimensions = () => {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  };\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  render() {\n    return (\n      <LineChart\n        width={this.state.width < 1439 ? 100 : 250}\n        height={this.state.width < 250 ? 30 : 50}\n        data={this.props.data}\n      >\n        <Line\n          type=\"monotone\"\n          dataKey={this.props.label}\n          stroke={this.props.color}\n          strokeWidth={2}\n          dot={false}\n        />\n      </LineChart>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TinyChart from \"components/charts/TinyChart\";\nimport Popover from \"react-popover\";\nimport ReactGA from \"react-ga\";\n\nclass NumbersCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    let confirmedTinyChartData =\n      this.props.india.length !== 0\n        ? this.props.india.cases_time_series.map((cases) => {\n            return cases.totalconfirmed !== \"\"\n              ? {\n                  name: cases.date,\n                  confirmed: Number(cases.totalconfirmed),\n                }\n              : null;\n          })\n        : null;\n\n    let activeTinyChartData =\n      this.props.india.length !== 0\n        ? this.props.india.cases_time_series.map((cases) => {\n            return cases.totalconfirmed !== \"\"\n              ? {\n                  name: cases.date,\n                  confirmed:\n                    Number(cases.totalconfirmed) -\n                    Number(cases.totaldeceased) -\n                    Number(cases.totalrecovered),\n                }\n              : null;\n          })\n        : null;\n    let deathTinyChartData =\n      this.props.india.length !== 0\n        ? this.props.india.cases_time_series.map((cases) => {\n            return cases.totaldeceased !== \"\"\n              ? {\n                  name: cases.date,\n                  confirmed: Number(cases.totaldeceased),\n                }\n              : null;\n          })\n        : null;\n    let recoveredTinyChartData =\n      this.props.india.length !== 0\n        ? this.props.india.cases_time_series.map((cases) => {\n            return cases.totalrecovered !== \"\"\n              ? {\n                  name: cases.date,\n                  confirmed: Number(cases.totalrecovered),\n                }\n              : null;\n          })\n        : null;\n\n    const totalConformedToday =\n      this.props.india.length !== 0\n        ? this.props.india.statewise.filter(\n            (record) => record.state === \"Total\"\n          )[0].deltaconfirmed\n        : 0;\n\n    const totalRecoveredToday =\n      this.props.india.length !== 0\n        ? this.props.india.statewise.filter(\n            (record) => record.state === \"Total\"\n          )[0].deltarecovered\n        : 0;\n\n    const totalDeathsToday =\n      this.props.india.length !== 0\n        ? this.props.india.statewise.filter(\n            (record) => record.state === \"Total\"\n          )[0].deltadeaths\n        : 0;\n\n    const confirmedPopover =\n      this.props.india.length !== 0\n        ? this.props.india.statewise\n            .filter((record) => record.state !== \"Total\")\n            .filter((state) => Number(state.deltaconfirmed) !== 0)\n            .map((state) => {\n              return { [state.state]: state.deltaconfirmed };\n            })\n        : [];\n\n    const recoveredPopover =\n      this.props.india.length !== 0\n        ? this.props.india.statewise\n            .filter((record) => record.state !== \"Total\")\n            .filter((state) => Number(state.deltarecovered) !== 0)\n            .map((state) => {\n              return { [state.state]: Number(state.deltarecovered) };\n            })\n        : [];\n    const deathsPopover =\n      this.props.india.length !== 0\n        ? this.props.india.statewise\n            .filter((record) => record.state !== \"Total\")\n            .filter((state) => Number(state.deltadeaths) !== 0)\n            .map((state) => {\n              return { [state.state]: Number(state.deltadeaths) };\n            })\n        : [];\n\n    return (\n      <div className=\"row\" style={{ padding: \"50px 0px 30px 0px\" }}>\n        <div className=\"col-sm-3 col-6\" style={{ padding: 15 }}>\n          <div\n            style={{\n              padding: 20,\n              fontWeight: \"bold\",\n              background: \"#448AFF\",\n              color: \"white\",\n              borderRadius: 10,\n            }}\n          >\n            <div style={{ fontSize: 30 }}>\n              {this.props.india.length !== 0\n                ? this.props.india.statewise.filter(\n                    (record) => record.state === \"Total\"\n                  )[0].confirmed\n                : 0}\n            </div>\n            <div\n              style={{\n                fontSize: 15,\n                marginBottom: 10,\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <span style={{ fontSize: 17, fontWeight: \"bold\" }}>&#9650;</span>\n              {this.props.india.length !== 0\n                ? typeof this.props.india.statewise.filter(\n                    (record) => record.state === \"Total\"\n                  )[0].deltaconfirmed !== \"undefined\" &&\n                  this.props.india.statewise.filter(\n                    (record) => record.state === \"Total\"\n                  )[0].deltaconfirmed !== null\n                  ? this.props.india.statewise.filter(\n                      (record) => record.state === \"Total\"\n                    )[0].deltaconfirmed\n                  : 0\n                : 0}\n              {Number(totalConformedToday) !== 0 ? (\n                <Popover\n                  body={\n                    <div\n                      style={{\n                        background: \"white\",\n                        borderRadius: 10,\n                        padding: 15,\n                        color: \"#192a56\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      {confirmedPopover.map((state, index) => {\n                        return (\n                          <div key={index}>\n                            {Object.keys(state)[0]}: {Object.values(state)[0]}\n                          </div>\n                        );\n                      })}\n                    </div>\n                  }\n                  preferPlace={\"below\"}\n                  isOpen={this.state.confirmedOpen}\n                  onOuterAction={() =>\n                    this.setState({\n                      confirmedOpen: !this.state.confirmedOpen,\n                    })\n                  }\n                >\n                  <div\n                    onClick={() => {\n                      ReactGA.event({\n                        category: \"India Info\",\n                        action: \"Confirmed Info Clicked\",\n                        label: \"Confirm Info\",\n                      });\n                      this.setState({\n                        confirmedOpen: !this.state.confirmedOpen,\n                      });\n                    }}\n                    className=\"report-tile\"\n                    style={{ marginLeft: 5, cursor: \"pointer\" }}\n                  >\n                    ?\n                  </div>\n                </Popover>\n              ) : null}\n            </div>\n            <div style={{ fontSize: 18 }}>Confirmed</div>\n            {this.props.india.length !== 0 ? (\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <TinyChart\n                  data={confirmedTinyChartData}\n                  label=\"confirmed\"\n                  color=\"#ffffff\"\n                />\n              </div>\n            ) : null}\n          </div>\n        </div>\n        <div className=\"col-sm-3 col-6\" style={{ padding: 15 }}>\n          <div\n            style={{\n              padding: 20,\n              fontWeight: \"bold\",\n              background: \"#F9A825\",\n              color: \"#ffffff\",\n              borderRadius: 10,\n            }}\n          >\n            <div style={{ fontSize: 30, marginBottom: 35 }}>\n              {this.props.india.length !== 0\n                ? this.props.india.statewise.filter(\n                    (record) => record.state === \"Total\"\n                  )[0].active\n                : 0}\n            </div>\n\n            <div style={{ fontSize: 18 }}>Active</div>\n            {this.props.india.length !== 0 ? (\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <TinyChart\n                  data={activeTinyChartData}\n                  label=\"confirmed\"\n                  color=\"#ffffff\"\n                />\n              </div>\n            ) : null}\n          </div>\n        </div>\n        <div className=\"col-sm-3 col-6\" style={{ padding: 15 }}>\n          <div\n            style={{\n              padding: 20,\n              fontWeight: \"bold\",\n              background: \"#4CAF50\",\n              color: \"#ffffff\",\n              borderRadius: 10,\n            }}\n          >\n            <div style={{ fontSize: 30 }}>\n              {this.props.india.length !== 0\n                ? this.props.india.statewise.filter(\n                    (record) => record.state === \"Total\"\n                  )[0].recovered\n                : 0}\n            </div>\n            <div\n              style={{\n                fontSize: 15,\n                marginBottom: 10,\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <span style={{ fontSize: 17, fontWeight: \"bold\" }}>&#9650;</span>\n              {this.props.india.length !== 0\n                ? typeof this.props.india.statewise.filter(\n                    (record) => record.state === \"Total\"\n                  )[0].deltarecovered !== \"undefined\" &&\n                  this.props.india.statewise.filter(\n                    (record) => record.state === \"Total\"\n                  )[0].deltarecovered !== null\n                  ? this.props.india.statewise.filter(\n                      (record) => record.state === \"Total\"\n                    )[0].deltarecovered\n                  : 0\n                : 0}\n              {Number(totalRecoveredToday) !== 0 ? (\n                <Popover\n                  body={\n                    <div\n                      style={{\n                        background: \"white\",\n                        borderRadius: 10,\n                        padding: 15,\n                        color: \"#192a56\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      {recoveredPopover.map((state, index) => {\n                        return (\n                          <div key={index}>\n                            {Object.keys(state)[0]}: {Object.values(state)[0]}\n                          </div>\n                        );\n                      })}\n                    </div>\n                  }\n                  preferPlace={\"below\"}\n                  isOpen={this.state.activeOpen}\n                  onOuterAction={() =>\n                    this.setState({\n                      activeOpen: !this.state.activeOpen,\n                    })\n                  }\n                >\n                  <div\n                    onClick={() => {\n                      ReactGA.event({\n                        category: \"India Info\",\n                        action: \"Active Info Clicked\",\n                        label: \"Active Info\",\n                      });\n                      this.setState({\n                        activeOpen: !this.state.activeOpen,\n                      });\n                    }}\n                    className=\"report-tile\"\n                    style={{ marginLeft: 5, cursor: \"pointer\" }}\n                  >\n                    ?\n                  </div>\n                </Popover>\n              ) : null}\n            </div>\n            <div style={{ fontSize: 18 }}>Recovered</div>\n            {this.props.india.length !== 0 ? (\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <TinyChart\n                  data={recoveredTinyChartData}\n                  label=\"confirmed\"\n                  color=\"#ffffff\"\n                />\n              </div>\n            ) : null}\n          </div>\n        </div>\n        <div className=\"col-sm-3 col-6\" style={{ padding: 15 }}>\n          <div\n            style={{\n              padding: 20,\n              fontWeight: \"bold\",\n              background: \"#FF5252\",\n              color: \"#ffffff\",\n              borderRadius: 10,\n            }}\n          >\n            <div style={{ fontSize: 30 }}>\n              {this.props.india.length !== 0\n                ? this.props.india.statewise.filter(\n                    (record) => record.state === \"Total\"\n                  )[0].deaths\n                : 0}\n            </div>\n            <div\n              style={{\n                fontSize: 15,\n                marginBottom: 10,\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <span style={{ fontSize: 17, fontWeight: \"bold\" }}>&#9650;</span>\n              {this.props.india.length !== 0\n                ? typeof this.props.india.statewise.filter(\n                    (record) => record.state === \"Total\"\n                  )[0].deltadeaths !== \"undefined\" &&\n                  this.props.india.statewise.filter(\n                    (record) => record.state === \"Total\"\n                  )[0].deltadeaths !== null\n                  ? this.props.india.statewise.filter(\n                      (record) => record.state === \"Total\"\n                    )[0].deltadeaths\n                  : 0\n                : 0}\n              {Number(totalDeathsToday) !== 0 ? (\n                <Popover\n                  body={\n                    <div\n                      style={{\n                        background: \"white\",\n                        borderRadius: 10,\n                        padding: 15,\n                        color: \"#192a56\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      {deathsPopover.map((state, index) => {\n                        return (\n                          <div key={index}>\n                            {Object.keys(state)[0]}: {Object.values(state)[0]}\n                          </div>\n                        );\n                      })}\n                    </div>\n                  }\n                  preferPlace={\"below\"}\n                  isOpen={this.state.deathsOpen}\n                  onOuterAction={() =>\n                    this.setState({\n                      deathsOpen: !this.state.deathsOpen,\n                    })\n                  }\n                >\n                  <div\n                    onClick={() => {\n                      ReactGA.event({\n                        category: \"India Info\",\n                        action: \"Deaths Info Clicked\",\n                        label: \"Deaths Info\",\n                      });\n                      this.setState({\n                        deathsOpen: !this.state.deathsOpen,\n                      });\n                    }}\n                    className=\"report-tile\"\n                    style={{ marginLeft: 5, cursor: \"pointer\" }}\n                  >\n                    ?\n                  </div>\n                </Popover>\n              ) : null}\n            </div>\n            <div style={{ fontSize: 18 }}>Deaths</div>\n            {this.props.india.length !== 0 ? (\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <TinyChart\n                  data={deathTinyChartData}\n                  label=\"confirmed\"\n                  color=\"#ffffff\"\n                />\n              </div>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NumbersCard;\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport windowSize from \"react-window-size\";\n\nimport \"./NavigationBar.sass\";\n\nconst NavigationBar = (props) => {\n  const icons = {\n    Analytics: \"chart-area\",\n    Card: \"tablet-alt\",\n    Map: \"globe\",\n    Table: \"table\",\n    Chart: \"chart-bar\",\n  };\n  let uiClass = \"nav-item nav-link\";\n\n  return props.windowWidth > 900 ? (\n    <nav>\n      <div className=\"nav nav-tabs nav-fill\">\n        {props.options.map((option, index) => {\n          return (\n            <label\n              key={index}\n              className={\n                props.ui === props.optionRoutes[index]\n                  ? uiClass + \" active\"\n                  : uiClass\n              }\n              onClick={() => {\n                props.onClick(props.optionRoutes[index]);\n                ReactGA.event({\n                  category: props.type,\n                  action: option + \" selected\",\n                  label: props.type + \" \" + option,\n                });\n              }}\n            >\n              <FontAwesomeIcon\n                icon={[\"fas\", icons[option]]}\n                className=\"navbar-icon\"\n              />\n              {option}\n            </label>\n          );\n        })}\n      </div>\n    </nav>\n  ) : (\n    <nav>\n      <div className=\"nav nav-tabs nav-fill\">\n        {props.options.map((option, index) => {\n          return (\n            <label\n              key={index}\n              className={\n                props.ui === props.optionRoutes[index]\n                  ? uiClass + \" active\"\n                  : uiClass\n              }\n              onClick={() => {\n                props.onClick(props.optionRoutes[index]);\n                ReactGA.event({\n                  category: props.type,\n                  action: option + \" selected\",\n                  label: props.type + \" \" + option,\n                });\n              }}\n            >\n              <FontAwesomeIcon\n                icon={[\"fas\", icons[option]]}\n                className=\"navbar-icon\"\n              />\n            </label>\n          );\n        })}\n      </div>\n    </nav>\n  );\n};\n\nexport default windowSize(NavigationBar);\n","import React from \"react\";\nimport \"./SwitchBar.sass\";\n\nconst SwitchBar = (props) => {\n  return (\n    <div className=\"SwitchBar\">\n      {props.options.map((option, index) => {\n        return (\n          <div\n            key={index}\n            className={\n              props.showGlobalChartType === props.optionValues[index]\n                ? \"switch-active\"\n                : \"switch\"\n            }\n            style={\n              index === 0\n                ? {\n                    borderTopLeftRadius: 10,\n                    borderBottomLeftRadius: 10,\n                  }\n                : index === props.options.length - 1\n                ? {\n                    borderTopRightRadius: 10,\n                    borderBottomRightRadius: 10,\n                  }\n                : {}\n            }\n            onClick={() => props.onClick(props.optionValues[index])}\n          >\n            {option}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default SwitchBar;\n","import React from \"react\";\nimport {\n  LineChart,\n  BarChart,\n  AreaChart,\n  Area,\n  Line,\n  Bar,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  CartesianGrid,\n} from \"recharts\";\nimport \"./SimpleLineChart.css\";\n\nconst SimpleLineChart = (props) => {\n  const data =\n    props.data === undefined\n      ? [\n          { name: \"Jan\", uv: 4000, pv: 2400, amt: 2400 },\n          { name: \"Feb\", uv: 3000, pv: 1398, amt: 2210 },\n          { name: \"March\", uv: 2000, pv: 9800, amt: 2290 },\n          { name: \"April\", uv: 2780, pv: 3908, amt: 2000 },\n          { name: \"May\", uv: 1890, pv: 4800, amt: 2181 },\n          { name: \"June\", uv: 2390, pv: 3800, amt: 2500 },\n          { name: \"July\", uv: 3490, pv: 4300, amt: 2100 },\n        ]\n      : props.data;\n\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active) {\n      return (\n        <div\n          className=\"custom-tooltip\"\n          style={{ background: \"white\", padding: 15, borderRadius: 10 }}\n        >\n          <p\n            style={{\n              textAlign: \"center\",\n              fontWeight: \"bold\",\n              color: \"#404b69\",\n            }}\n          >\n            {label}\n          </p>\n          {typeof payload !== \"undefined\" &&\n            payload !== null &&\n            payload.map((item, index) => {\n              return (\n                <div key={index}>\n                  <span style={{ color: item.color, fontWeight: \"bold\" }}>\n                    {item.name}:{\" \"}\n                  </span>\n                  <span style={{ color: item.color, fontWeight: \"bold\" }}>\n                    {item.value}\n                    {typeof props.data.filter(\n                      (data) => data?.name === item.payload.name\n                    )[0][`daily${item.name}`] === \"undefined\"\n                      ? null\n                      : \" [+\"}\n                    {\n                      props.data.filter(\n                        (data) => data?.name === item.payload.name\n                      )[0][`daily${item.name}`]\n                    }\n                    {/* {props.data[payload.payload.name][`daily${payload.name}`]} */}\n                    {typeof props.data.filter(\n                      (data) => data?.name === item.payload.name\n                    )[0][`daily${item.name}`] === \"undefined\"\n                      ? null\n                      : \"]\"}\n                  </span>\n                  <br />\n                </div>\n              );\n            })}\n        </div>\n      );\n    }\n\n    return null;\n  };\n\n  let ChartName = (chart) => {\n    switch (chart) {\n      case \"LineChart\":\n        return LineChart;\n      case \"BarChart\":\n        return BarChart;\n      case \"AreaChart\":\n        return AreaChart;\n      default:\n        return LineChart;\n    }\n  };\n\n  let selectChart = (chart) => {\n    switch (chart) {\n      case \"LineChart\":\n        return Line;\n      case \"BarChart\":\n        return Bar;\n      case \"AreaChart\":\n        return Area;\n      default:\n        return Line;\n    }\n  };\n\n  let Chart = selectChart(props.chart);\n  let Type = ChartName(props.chart);\n  return (\n    <div\n      className=\"container-Linechart\"\n      style={props.height ? { height: props.height } : { height: 270 }}\n    >\n      <ResponsiveContainer>\n        <Type width={500} height={100} data={data}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n\n          <XAxis hide={false} dataKey={props.axis ? props.axis : \"name\"} />\n\n          <YAxis />\n          {props.customTooltip ? (\n            <Tooltip content={<CustomTooltip />} />\n          ) : (\n            <Tooltip />\n          )}\n          {typeof props.legend === \"undefined\" || props.legend === true ? (\n            <Legend\n              layout={props.legendLayout ? props.legendLayout : \"horizontal\"}\n              margin={{ top: 0, left: 0, right: 0, bottom: 10 }}\n              verticalAlign={\n                props.verticalAlign ? props.verticalAlign : \"bottom\"\n              }\n            />\n          ) : null}\n          {props.labels.map((label, index) =>\n            props.chart === \"BarChart\" ? (\n              <Chart\n                key={index}\n                stackId={\"a\"}\n                type=\"monotone\"\n                dataKey={label}\n                stroke={props.colors[index]}\n                fill={props.colors[index]}\n              />\n            ) : (\n              <Chart\n                key={index}\n                stackId={\"a\"}\n                type=\"monotone\"\n                dataKey={label}\n                stroke={props.colors[index]}\n                activeDot={{ r: 8 }}\n                fill={props.colors[index]}\n                dot={false}\n              />\n            )\n          )}\n        </Type>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default SimpleLineChart;\n","import * as React from \"react\";\nimport { Chart } from \"react-google-charts\";\nimport \"./CustomChart.css\";\n\nconst CustomChart = (props) => {\n  const chartEvents = [\n    {\n      eventName: \"select\",\n      callback({ chartWrapper }) {\n        if (props.chartType === \"TreeMap\") {\n          let selectedItem = chartWrapper.getChart().getSelection()[0];\n          props.onPlotClick(props.rows[selectedItem.row]);\n          //console.log(props.rows[(Object.values(selectedItem[0]))])\n          chartWrapper.getChart().setSelection([]);\n        } else {\n          var selectedItem = chartWrapper.getChart().getSelection()[0];\n          if (selectedItem) {\n            // console.log(\n            //   \"The user selected \" +\n            //     Object.values(selectedItem) +\n            //     props.rows[Object.values(selectedItem)[0]][0]\n            // );\n            props.onPlotClick(props.rows[Object.values(selectedItem)[0]][0]);\n          }\n        }\n      },\n    },\n  ];\n  return (\n    <Chart\n      className=\"custom-charts\"\n      height={props.height ? props.height : \"300px\"}\n      width={props.width ? props.width : \"auto\"}\n      chartType={props.chartType ? props.chartType : \"Bar\"}\n      rows={props.rows}\n      columns={props.columns}\n      options={{\n        sliceVisibilityThreshold: 0,\n        headerHeight: 0,\n        backgroundColor: \"transparent\",\n        colors: [\n          \"#3c3568\",\n          \"#f6ba62\",\n          \"#bc443b\",\n          \"#185e4b\",\n          \"#150a47\",\n          \"#334553\",\n          \"#d82f5a\",\n          \"#000133\",\n          \"#11887b\",\n          \"#044a05\",\n          \"#004953\",\n          \"#062e03\",\n          \"#7f4330\",\n          \"#420303\",\n          \"#980036\",\n          \"#9c004a\",\n          \"#490648\",\n          \"#76424e\",\n          \"#36013f\",\n          \"#36013f\",\n          \"#333333\",\n          \"#25342b\",\n          \"#171717\",\n        ],\n        minColor: \"#A7A0B3\",\n        midColor: \"#88E3CA\",\n        maxColor: \"#E0AEF6\",\n        chartArea: props.chartArea\n          ? props.chartArea\n          : { left: 0, top: 10, right: 0 },\n        //height: props.height ? props.height : 300,\n\n        //width: props.width ? props.width : \"100%\",\n        // title: \"Company Performance\",\n        isStacked: props.isStacked === true ? true : false,\n        legend: props.legend\n          ? { position: \"none\" }\n          : props.legendPosition\n          ? props.legendPosition\n          : {\n              position: \"right\",\n              alignment: \"center\",\n            },\n        hAxis: props.hAxis\n          ? {\n              title: \"\",\n              textPosition: \"none\",\n              textColor: \"#ffffff\",\n            }\n          : { title: props.title, titleTextStyle: { color: \"#333\" } },\n        vAxis: props.vAxis\n          ? {\n              textPosition: \"none\",\n            }\n          : { minValue: 0 },\n        generateTooltip:\n          props.generateTooltip === true\n            ? (row, size, value) => {\n                return (\n                  '<div style=\"background:#fff; padding:5px 10px 5px 10px; border:1px solid grey\"><b>' +\n                  props.rows[row][0] +\n                  \"</b> : \" +\n                  size +\n                  \"</div>\"\n                );\n              }\n            : null,\n        // For the legend to fit, we make the chart area smaller\n        //chartArea: { width: \"50%\", height: \"70%\" }\n        // lineWidth: 25\n      }}\n      // For tests\n      rootProps={{ \"data-testid\": \"2\" }}\n      chartEvents={props.onplot === true ? chartEvents : null}\n    />\n  );\n};\nexport default CustomChart;\n","import React from \"react\";\nimport \"./GradientCardTitle.sass\";\n\nconst GradientCardTitle = (props) => {\n  return <div className=\"GradientCardTitle\">{props.title}</div>;\n};\n\nexport default GradientCardTitle;\n","import React from \"react\";\nimport \"./GradientCardFooter.sass\";\n\nconst GradientCardFooter = (props) => {\n  return <div className=\"GradientCardFooter\">{props.content}</div>;\n};\n\nexport default GradientCardFooter;\n","import React from \"react\";\nimport { Tooltip, ResponsiveContainer, PieChart, Pie, Cell } from \"recharts\";\nimport \"../SimpleLineChart/SimpleLineChart.css\";\n\nconst COLORS = [\"#192a56\", \"rgb(255, 82, 82)\", \"#404b69\"];\n\nconst SimplePieChart = (props) => {\n  return (\n    <div\n      className=\"container-Linechart\"\n      style={props.height ? { height: props.height } : { height: 270 }}\n    >\n      <ResponsiveContainer>\n        <PieChart>\n          <Pie\n            dataKey=\"value\"\n            data={props.data}\n            outerRadius={100}\n            fill=\"#8884d8\"\n            label={false}\n          >\n            {props.data.map((entry, index) => (\n              <Cell\n                key={`cell-${index}`}\n                fill={COLORS[index % COLORS.length]}\n              />\n            ))}\n          </Pie>\n\n          <Tooltip />\n        </PieChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default SimplePieChart;\n","import React, { Component } from \"react\";\nimport SwitchBar from \"components/ui/SwitchBar/SwitchBar\";\nimport SimpleLineChart from \"components/charts/SimpleLineChart/SimpleLineChart\";\nimport Select from \"react-select\";\nimport CustomChart from \"components/charts/PieChart/CustomChart\";\nimport GradientCardTitle from \"components/ui/GradientCardTitle/GradientCardTitle\";\nimport GradientCardFooter from \"components/ui/GradientCardFooter/GradientCardFooter\";\nimport SimplePieChart from \"components/charts/SimplePieChart/SimplePieChart\";\n\nclass Analytics extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    let totalDataDaily =\n      this.props.india.length !== 0\n        ? this.props.india.cases_time_series.map((cases) => {\n            return cases.dailyrecovered !== \"\"\n              ? {\n                  name: cases.date,\n                  Confirmed: Number(cases.dailyconfirmed),\n                  Active:\n                    Number(cases.dailyconfirmed) -\n                    Number(cases.dailyrecovered) -\n                    Number(cases.dailydeceased),\n                  Recovered: Number(cases.dailyrecovered),\n                  Deaths: Number(cases.dailydeceased),\n                }\n              : null;\n          })\n        : null;\n\n    let totalData =\n      this.props.india.length !== 0\n        ? this.props.india.cases_time_series.map((cases) => {\n            return cases.totalrecovered !== \"\"\n              ? {\n                  name: cases.date,\n                  Confirmed: Number(cases.totalconfirmed),\n                  Active:\n                    Number(cases.totalconfirmed) -\n                    Number(cases.totalrecovered) -\n                    Number(cases.totaldeceased),\n                  Recovered: Number(cases.totalrecovered),\n                  Deaths: Number(cases.totaldeceased),\n                  dailyConfirmed: Number(cases.dailyconfirmed),\n                  dailyActive:\n                    Number(cases.dailyconfirmed) -\n                    Number(cases.dailyrecovered) -\n                    Number(cases.dailydeceased),\n                  dailyRecovered: Number(cases.dailyrecovered),\n                  dailyDeaths: Number(cases.dailydeceased),\n                }\n              : null;\n          })\n        : null;\n\n    var sortable =\n      this.props.india.length !== 0 ? this.props.india.statewise : [];\n\n    const Comparator = (a, b) => {\n      if (Number(a[1]) > Number(b[1])) return -1;\n      if (Number(a[1]) < Number(b[1])) return 1;\n      return 0;\n    };\n\n    var pieChartData =\n      this.props.india.length !== 0\n        ? sortable\n            .filter((record) => record.state !== \"Total\")\n            .map((state) => {\n              return [state.state, Number(state[this.props.filterByCases])];\n            })\n        : [];\n\n    pieChartData = pieChartData.sort(Comparator).slice(0, 10);\n\n    let sortedCuntryName = [];\n    if (pieChartData.length !== 0) {\n      pieChartData.map((data) => {\n        sortedCuntryName.push(data[0]);\n      });\n    }\n\n    let sortedCountryCode =\n      this.props.india.length !== 0\n        ? sortable\n            .filter(\n              (record) =>\n                record.state !== \"Total\" &&\n                sortedCuntryName.includes(record.state)\n            )\n            .map((code) => {\n              return code.statecode.toLowerCase();\n            })\n        : [];\n\n    let sortedCountryName =\n      this.props.india.length !== 0\n        ? sortable\n            .filter(\n              (record) =>\n                record.state !== \"Total\" &&\n                sortedCuntryName.includes(record.state)\n            )\n            .map((code) => {\n              return code.state;\n            })\n        : [];\n\n    let dailyConfirmedStatus = this.props.dailyStatus.filter(\n      (data) => data.status === \"Confirmed\"\n    );\n    let dailyRecoveredStatus = this.props.dailyStatus.filter(\n      (data) => data.status === \"Recovered\"\n    );\n    let dailyDeathsStatus = this.props.dailyStatus.filter(\n      (data) => data.status === \"Deceased\"\n    );\n\n    let count = (code, data, index) => {\n      let confirmed = 0;\n      for (var i = 0; i <= index; i++) {\n        confirmed += Number(dailyConfirmedStatus[i][code]);\n      }\n      return confirmed;\n    };\n\n    let dailyConfirmedFiltered = dailyConfirmedStatus.map((data, index) => {\n      let arr = [];\n\n      sortedCountryCode.map((code) => {\n        arr.push({\n          [code.toUpperCase()]: count(code, dailyConfirmedStatus, index),\n        });\n      });\n      return { [data.date]: arr };\n    });\n\n    let dailyRecoveredFiltered = dailyRecoveredStatus.map((data) => {\n      let arr = [];\n      sortedCountryCode.map((code) => {\n        arr.push({ [code.toUpperCase()]: data[code] });\n      });\n      return { [data.date]: arr };\n    });\n\n    let dailyDeathsFiltered = dailyDeathsStatus.map((data) => {\n      let arr = [];\n      sortedCountryCode.map((code) => {\n        arr.push({ [code.toUpperCase()]: data[code] });\n      });\n      return { [data.date]: arr };\n    });\n\n    let multiLineChartData = [];\n\n    multiLineChartData =\n      this.props.dailyStatus.length !== 0\n        ? dailyConfirmedFiltered.map((cases, index) => {\n            let array = Object.values(cases).map((state) => {\n              let subArray = { name: Object.keys(cases)[0] };\n              state.map((state, i) => {\n                subArray[sortedCountryName[i]] = Object.values(state)[0];\n              });\n              return subArray;\n            });\n            return array[0];\n          })\n        : null;\n\n    let Columns = [\n      { type: \"string\", label: \"name\" },\n      { type: \"number\", label: \"value\" },\n    ];\n\n    const colourStyles = {\n      control: (styles) => ({\n        ...styles,\n        backgroundColor: \"white\",\n        marginRight: 15,\n        marginBottom: 15,\n      }),\n      option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n        return {\n          ...styles,\n          backgroundColor: isDisabled\n            ? null\n            : isSelected\n            ? \"#404b69\"\n            : isFocused\n            ? \"#ffffff\"\n            : null,\n          color: isDisabled ? \"#ccc\" : isSelected ? \"white\" : \"#404b69\",\n          cursor: isDisabled ? \"not-allowed\" : \"default\",\n\n          \":active\": {\n            ...styles[\":active\"],\n            backgroundColor: !isDisabled && (isSelected ? \"#404b69\" : \"white\"),\n          },\n        };\n      },\n    };\n    let countries = [];\n    let nationalityGroup = [];\n\n    if (this.props.rawData.length !== 0) {\n      this.props.rawData.map((data) => {\n        countries.push(data.nationality);\n      });\n      countries = [...new Set(countries)].map((country) => {\n        return { [country]: 0 };\n      });\n    }\n\n    let ageGroup = [],\n      genderGroup = [];\n    let unknown = 0;\n    let unknownGender = 0;\n    if (this.props.rawData.length !== 0) {\n      let range1 = 0,\n        range2 = 0,\n        range3 = 0,\n        range4 = 0,\n        range5 = 0,\n        range6 = 0,\n        range7 = 0,\n        range8 = 0,\n        range9 = 0,\n        range10 = 0,\n        male = 0,\n        female = 0;\n      this.props.rawData.map((data) => {\n        countries.filter((country, index) => {\n          if (Object.keys(country)[0] === data.nationality) {\n            countries[index][data.nationality] =\n              countries[index][data.nationality] + 1;\n          }\n        });\n        if (data.agebracket !== \"\") {\n          if (Number(data.agebracket) >= 0 && Number(data.agebracket) <= 10) {\n            range1++;\n          } else if (\n            Number(data.agebracket) > 10 &&\n            Number(data.agebracket) <= 20\n          ) {\n            range2++;\n          } else if (\n            Number(data.agebracket) > 20 &&\n            Number(data.agebracket) <= 30\n          ) {\n            range3++;\n          } else if (\n            Number(data.agebracket) > 30 &&\n            Number(data.agebracket) <= 40\n          ) {\n            range4++;\n          } else if (\n            Number(data.agebracket) > 40 &&\n            Number(data.agebracket) <= 50\n          ) {\n            range5++;\n          } else if (\n            Number(data.agebracket) > 50 &&\n            Number(data.agebracket) <= 60\n          ) {\n            range6++;\n          } else if (\n            Number(data.agebracket) > 60 &&\n            Number(data.agebracket) <= 70\n          ) {\n            range7++;\n          } else if (\n            Number(data.agebracket) > 70 &&\n            Number(data.agebracket) <= 80\n          ) {\n            range8++;\n          } else if (\n            Number(data.agebracket) > 80 &&\n            Number(data.agebracket) <= 90\n          ) {\n            range9++;\n          } else {\n            range10++;\n          }\n        } else {\n          unknown++;\n        }\n\n        if (data.gender !== \"\") {\n          if (data.gender === \"M\") {\n            male++;\n          } else if (data.gender === \"F\") {\n            female++;\n          }\n        } else {\n          unknownGender++;\n        }\n      });\n\n      nationalityGroup = countries.map((country) => {\n        if (Object.keys(country)[0] !== \"\") {\n          return {\n            name: Object.keys(country),\n            [\"Patients\"]: Object.values(country),\n          };\n        }\n      });\n\n      ageGroup = [\n        {\n          name: \"0-10 years\",\n          [\"Cases\"]: range1,\n        },\n        { name: \"11-20 years\", [\"Cases\"]: range2 },\n        { name: \"21-30 years\", [\"Cases\"]: range3 },\n        { name: \"31-40 years\", [\"Cases\"]: range4 },\n        { name: \"41-50 years\", [\"Cases\"]: range5 },\n        { name: \"51-60 years\", [\"Cases\"]: range6 },\n        { name: \"61-70 years\", [\"Cases\"]: range7 },\n        { name: \"71-80 years\", [\"Cases\"]: range8 },\n        { name: \"81-90 years\", [\"Cases\"]: range9 },\n        { name: \"91 up years\", [\"Cases\"]: range10 },\n      ];\n      genderGroup = [\n        { name: \"Male\", value: male },\n        { name: \"Female\", value: female },\n        { name: \"Awaiting Details\", value: unknownGender },\n      ];\n    }\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-sm-6 col-12\">\n          <div\n            style={{\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\n              paddingBottom: 15,\n              minHeight: 368,\n              paddingLeft: 15,\n              paddingTop: 30,\n              borderRadius: 15,\n              marginBottom: 15,\n            }}\n          >\n            <GradientCardTitle title={\"Total Confirmed and Active cases\"} />\n            <SwitchBar\n              options={[\"Total\", \"Daily\"]}\n              optionValues={[\"cumulative\", \"daily\"]}\n              onClick={(prop) => {\n                this.props.onSwitch(prop);\n              }}\n              showGlobalChartType={this.props.changeChart}\n            />\n            <SimpleLineChart\n              chart={\"AreaChart\"}\n              customTooltip={true}\n              grid={false}\n              data={\n                this.props.changeChart === \"daily\" ? totalDataDaily : totalData\n              }\n              labels={[\"Confirmed\", \"Active\"]}\n              colors={[\"#e43339\", \"#192a56\"]}\n            />\n          </div>\n        </div>\n\n        <div className=\"col-sm-6 col-12\">\n          <div\n            style={{\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\n              paddingBottom: 15,\n              minHeight: 368,\n              paddingLeft: 15,\n              paddingTop: 30,\n              borderRadius: 15,\n              marginBottom: 15,\n            }}\n          >\n            <GradientCardTitle title={\"Total Recovered cases and Deaths\"} />\n            <SwitchBar\n              options={[\"Total\", \"Daily\"]}\n              optionValues={[\"cumulative\", \"daily\"]}\n              onClick={(prop) => {\n                this.props.onSwitch(prop);\n              }}\n              showGlobalChartType={this.props.changeChart}\n            />\n            <SimpleLineChart\n              chart={\"AreaChart\"}\n              customTooltip={true}\n              grid={false}\n              data={\n                this.props.changeChart === \"daily\" ? totalDataDaily : totalData\n              }\n              labels={[\"Recovered\", \"Deaths\"]}\n              colors={[\"#006266\", \"#535c68\"]}\n            />\n          </div>\n        </div>\n        <div className=\"col-sm-12 col-12\">\n          <div\n            style={{\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\n              paddingBottom: 15,\n              minHeight: 368,\n              paddingLeft: 15,\n              paddingTop: 30,\n              borderRadius: 15,\n              marginBottom: 15,\n            }}\n          >\n            <GradientCardTitle title={\"Total cases in top ten states\"} />\n            <SimpleLineChart\n              chart={\"AreaChart\"}\n              legend={false}\n              customTooltip={true}\n              grid={false}\n              data={multiLineChartData}\n              labels={sortedCountryName}\n              colors={[\n                \"#3c3568\",\n                \"#f6ba62\",\n                \"#bc443b\",\n                \"#185e4b\",\n                \"#150a47\",\n                \"#334553\",\n                \"#d82f5a\",\n                \"#000133\",\n                \"#11887b\",\n                \"#044a05\",\n              ]}\n            />\n          </div>\n        </div>\n        <div className=\"col-sm-6 col-12\">\n          <div\n            style={{\n              minHeight: 368,\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\n              paddingBottom: 15,\n              paddingLeft: 15,\n              paddingTop: 30,\n              borderRadius: 15,\n              marginBottom: 15,\n            }}\n          >\n            <GradientCardTitle title={\"Top ten states by cases\"} />\n            <div className=\"row\" style={{ justifyContent: \"center\" }}>\n              <div className=\"col-sm-4\">\n                <Select\n                  isClearable={false}\n                  isSearchable={false}\n                  onChange={(selectedOption) => {\n                    this.props.onSelectOption(selectedOption);\n                  }}\n                  styles={colourStyles}\n                  placeholder=\"Confirmed\"\n                  options={[\n                    { value: \"confirmed\", label: \"Confirmed\" },\n                    { value: \"active\", label: \"Active\" },\n                    { value: \"deaths\", label: \"Deaths\" },\n                    { value: \"recovered\", label: \"Recovered\" },\n                  ]}\n                />\n              </div>\n            </div>\n            <CustomChart\n              placeholder={false}\n              emptyClassName={\"m-t-40\"}\n              chartArea={{ left: 10, top: 15, right: 10, bottom: 15 }}\n              rows={pieChartData}\n              columns={Columns}\n              chartType={\"PieChart\"}\n              height={\"270px\"}\n            />\n          </div>\n        </div>\n        <div className=\"col-sm-6 col-12\">\n          <div\n            style={{\n              minHeight: 368,\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\n              paddingBottom: 15,\n              paddingLeft: 15,\n              paddingTop: 30,\n              borderRadius: 15,\n              marginBottom: 15,\n            }}\n          >\n            <GradientCardTitle title={\"Patients count by age\"} />\n            <SimpleLineChart\n              chart={\"BarChart\"}\n              customTooltip={true}\n              grid={false}\n              data={ageGroup}\n              labels={[\"Cases\"]}\n              colors={[\"#192a56\"]}\n            />\n            <GradientCardFooter\n              content={`*Awaiting details for ${unknown} patients, as they do NOT represent share of deaths by age group.`}\n            />\n          </div>\n        </div>\n        <div className=\"col-sm-6 col-12\">\n          <div\n            style={{\n              minHeight: 368,\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\n              paddingBottom: 15,\n              paddingLeft: 15,\n              paddingTop: 30,\n              borderRadius: 15,\n              marginBottom: 15,\n            }}\n          >\n            <GradientCardTitle title={\"Patients count by gender\"} />\n            <div style={{ marginBottom: -24 }}>\n              <span style={{ color: \"#192a56\", fontWeight: \"bold\" }}>\n                Male{\" \"}\n                {genderGroup.length !== 0\n                  ? genderGroup.filter((stat) => stat.name === \"Male\")[0].value\n                  : 0}\n              </span>\n              <span\n                style={{\n                  marginLeft: 15,\n                  color: \"rgb(255, 82, 82)\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                Female{\" \"}\n                {genderGroup.length !== 0\n                  ? genderGroup.filter((stat) => stat.name === \"Female\")[0]\n                      .value\n                  : 0}\n              </span>\n              <span\n                style={{\n                  marginLeft: 15,\n                  color: \"#404b69\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                A. Details{\" \"}\n                {genderGroup.length !== 0\n                  ? genderGroup.filter(\n                      (stat) => stat.name === \"Awaiting Details\"\n                    )[0].value\n                  : 0}\n              </span>\n            </div>\n            <SimplePieChart data={genderGroup} />\n            <GradientCardFooter\n              content={`*Awaiting details for ${unknownGender} patients, as they do NOT represent share of deaths by age group.`}\n            />\n          </div>\n        </div>\n        <div className=\"col-sm-6 col-12\">\n          <div\n            style={{\n              minHeight: 368,\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\n              paddingBottom: 15,\n              paddingLeft: 15,\n              paddingTop: 30,\n              borderRadius: 15,\n              marginBottom: 15,\n            }}\n          >\n            <GradientCardTitle title={\"Patients count by nationality\"} />\n\n            <SimpleLineChart\n              chart={\"BarChart\"}\n              customTooltip={true}\n              grid={false}\n              data={nationalityGroup}\n              labels={[\"Patients\"]}\n              colors={[\"#192a56\"]}\n            />\n            <GradientCardFooter\n              content={`*Awaiting details for ${\n                typeof countries.filter(\n                  (country) => Object.keys(country)[0] === \"\"\n                )[0] !== \"undefined\"\n                  ? Object.values(\n                      countries.filter(\n                        (country) => Object.keys(country)[0] === \"\"\n                      )[0]\n                    )[0]\n                  : countries.filter(\n                      (country) => Object.keys(country)[0] === \"\"\n                    )[0]\n              } patients, as they do NOT represent share of deaths by age group.`}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Analytics;\n","import React, { Component } from \"react\";\nimport \"components/Backup/App.css\";\nimport \"react-table-6/react-table.css\";\nimport { withRouter } from \"react-router-dom\";\nimport ErrorBoundary from \"components/ui/ErrorBoundry/ErrorBoundry\";\nimport IndiaMap from \"components/charts/IndiaMap/IndiaMap\";\nimport Footer from \"components/ui/Footer/Footer\";\nimport Table from \"components/container/India/SubComponents/Table\";\nimport Cards from \"components/container/India/SubComponents/Cards\";\nimport \"components/container/India/India.sass\";\nimport Header from \"components/ui/Header/Header\";\nimport NumbersCard from \"components/container/India/SubComponents/NumbersCard\";\nimport NavigationBar from \"components/ui/NavigationBar/NavigationBar\";\nimport Analytics from \"components/container/India/SubComponents/Analytics\";\n\nclass India extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchString: \"\",\n      currentPage: 0,\n      ui: \"/\",\n      width: 0,\n      height: 0,\n      selectedCity: \"\",\n      confirmedOpen: false,\n      activeOpen: false,\n      filterByCases: \"confirmed\",\n      changeChart: \"cumulative\",\n      displayBySort: \"All\",\n      deathsOpen: false,\n      totalPages: 0,\n      activePage: 0,\n      selectedCountry: false,\n      locationLoader: false,\n      data: [],\n      stateWiseCity: [],\n      rawData: [],\n      dailyStatus: [],\n      india: [],\n      timelines: [],\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\"],\n      isTable: 0,\n      datasets: [\n        {\n          label: \"Rainfall\",\n          backgroundColor: \"rgba(75,192,192,1)\",\n          borderColor: \"rgba(0,0,0,1)\",\n          borderWidth: 2,\n          data: [65, 59, 80, 81, 56],\n          data1: [65, 59, 80, 81, 56],\n          data2: [65, 59, 80, 81, 56],\n          data3: [65, 59, 80, 81, 56],\n        },\n      ],\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n\n    window.addEventListener(\"focus\", () => {\n      this.getData();\n      this.getStateData();\n    });\n\n    this.setState({\n      locationLoader: true,\n    });\n    this.getRawData();\n    this.getDailyStatus();\n    this.getData();\n    this.getStateData();\n  }\n\n  getStateData() {\n    fetch(\"https://api.covid19india.org/state_district_wise.json\", {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        this.setState({\n          stateWiseCity: response,\n        });\n      })\n      .catch((error) => {});\n  }\n\n  getRawData() {\n    fetch(`https://api.covid19india.org/raw_data.json`, {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        this.setState({\n          rawData: response.raw_data,\n          locationLoader: false,\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          locationLoader: false,\n        });\n      });\n  }\n\n  getDailyStatus() {\n    fetch(`https://api.covid19india.org/states_daily.json`, {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        console.log(response);\n        this.setState({\n          dailyStatus: response.states_daily,\n          locationLoader: false,\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          locationLoader: false,\n        });\n      });\n  }\n\n  getData() {\n    fetch(`https://api.covid19india.org/data.json`, {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        this.setState({\n          india: response,\n          locationLoader: false,\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          locationLoader: false,\n        });\n      });\n  }\n\n  chunkArray = (array, size) => {\n    let result = [];\n    let arrayCopy = [...array];\n    while (arrayCopy.length > 0) {\n      result.push(arrayCopy.splice(0, size));\n    }\n    return result;\n  };\n\n  updateDimensions = () => {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  render() {\n    return (\n      <ErrorBoundary>\n        <div className=\"App India\">\n          <div className=\"container\">\n            <div>\n              <Header history={this.props.history} width={this.state.width} />\n            </div>\n            <div style={{ minHeight: \"90vh\" }}>\n              <NumbersCard india={this.state.india} />\n              <NavigationBar\n                type=\"India\"\n                ui={this.state.ui}\n                options={[\"Analytics\", \"Card\", \"Table\", \"Map\"]}\n                optionRoutes={[\"/\", \"/card\", \"/table\", \"/map\"]}\n                onClick={(route) => {\n                  this.setState({\n                    ui: route,\n                  });\n                }}\n              />\n              {this.state.ui === \"/\" ? (\n                <Analytics\n                  dailyStatus={this.state.dailyStatus}\n                  rawData={this.state.rawData}\n                  filterByCases={this.state.filterByCases}\n                  displayBySort={this.state.displayBySort}\n                  india={this.state.india}\n                  onSelectOption={(selectedOption) => {\n                    this.setState({\n                      filterByCases:\n                        selectedOption === null\n                          ? \"confirmed\"\n                          : selectedOption.value,\n                    });\n                  }}\n                  onSwitch={(prop) =>\n                    this.setState({\n                      changeChart: prop,\n                    })\n                  }\n                  changeChart={this.state.changeChart}\n                />\n              ) : null}\n              {this.state.ui === \"/map\" ? (\n                <div\n                  className=\"row india-map\"\n                  style={{\n                    border: \"2px solid rgb(255, 252, 220)\",\n                    marginRight: 0,\n                    marginTop: 15,\n                    marginLeft: 0,\n                    borderRadius: 10,\n                  }}\n                >\n                  <div\n                    className=\"col-sm-12\"\n                    style={{ marginTop: 60, marginBottom: 80 }}\n                  >\n                    <IndiaMap\n                      data={\n                        this.state.india.length !== 0\n                          ? this.state.india.statewise.filter(\n                              (state) => state.state !== \"Total\"\n                            )\n                          : []\n                      }\n                    />\n                  </div>\n                </div>\n              ) : null}\n              {this.state.ui === \"/card\" ? (\n                <>\n                  <div style={{ paddingTop: 5 }}>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Search\"\n                      onChange={(e) =>\n                        this.setState({\n                          searchString: e.target.value,\n                        })\n                      }\n                    />\n                  </div>\n                  <Cards\n                    locationLoader={this.state.locationLoader}\n                    india={this.state.india}\n                    searchString={this.state.searchString}\n                  />\n                </>\n              ) : null}{\" \"}\n              {this.state.ui === \"/table\" ? (\n                <Table\n                  india={this.state.india}\n                  stateWiseCity={this.state.stateWiseCity}\n                />\n              ) : null}\n            </div>\n            <Footer />\n          </div>\n        </div>\n      </ErrorBoundary>\n    );\n  }\n}\n\nexport default withRouter(India);\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const data =\n      this.props.globalData.length !== 0\n        ? this.props.globalData\n            .filter((country) => country.title !== \"World\")\n            .map((country) => {\n              return {\n                country: country.title,\n                confirmed: Number(country.confirmed),\n                active: Number(country.active),\n                recovered: Number(country.recovered),\n                deaths: Number(country.deaths),\n                deltaConfirmed: Number(country.confirmed_today),\n                deltaDeaths: Number(country.deaths_today),\n                tests: Number(country.totaltests),\n              };\n            })\n        : [];\n\n    const columns =\n      this.props.globalData.length !== 0\n        ? [\n            {\n              Header: \"Country\",\n              accessor: \"country\",\n            },\n            {\n              Header: \"Confirmed\",\n              accessor: \"confirmed\",\n              Cell: (props) => {\n                return (\n                  <>\n                    {props.original.deltaConfirmed === 0 ? null : (\n                      <span\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"bold\",\n                          color: \"#e43339\",\n                        }}\n                      >\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\n                          &#9650;\n                        </span>\n                        {props.original.deltaConfirmed}\n                      </span>\n                    )}{\" \"}\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n            {\n              Header: \"Active\",\n              accessor: \"active\",\n              Cell: (props) => {\n                return (\n                  <>\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n            {\n              Header: \"Recovered\",\n              accessor: \"recovered\",\n              Cell: (props) => {\n                return (\n                  <>\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n            {\n              Header: \"Deaths\",\n              accessor: \"deaths\",\n              Cell: (props) => {\n                return (\n                  <>\n                    {props.original.deltaDeaths === 0 ? null : (\n                      <span\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"bold\",\n                          color: \"#535c68\",\n                        }}\n                      >\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\n                          &#9650;\n                        </span>\n                        {props.original.deltaDeaths}\n                      </span>\n                    )}{\" \"}\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n            {\n              Header: \"Tests\",\n              accessor: \"tests\",\n              Cell: (props) => {\n                return (\n                  <>\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n          ]\n        : [];\n    return (\n      <div className=\"row global-table\">\n        <div className=\"col-sm-12\">\n          <div className=\"global-table-card\">\n            <ReactTable\n              style={{ minHeight: 500 }}\n              data={data}\n              columns={columns}\n              defaultPageSize={10}\n              className=\"-striped -highlight\"\n              noDataText={<b>No data found</b>}\n              getTheadProps={(state, rowInfo, column) => {\n                return {\n                  style: {\n                    fontWeight: \"bold\",\n                  },\n                };\n              }}\n              filterable\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Table;\n","import React, { Component } from \"react\";\nimport ReactGA from \"react-ga\";\nimport \"./NumericCard.sass\";\nimport Popover from \"react-popover\";\n\nclass NumericCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const colors = {\n      Confirmed: \"#448AFF\",\n      Active: \"#F9A825\",\n      Recovered: \"#4CAF50\",\n      Deaths: \"#FF5252\",\n    };\n\n    return (\n      <div className=\"row NumericCard\">\n        {this.props.data.map((card, index) => {\n          let dataToday = this.props.dataToday.filter(\n            (data) => Object.keys(data)[0] === Object.keys(card)[0]\n          );\n          let showPopover = this.props.showPopover.filter(\n            (data) => Object.keys(data)[0] === Object.keys(card)[0]\n          );\n          let popoverData = this.props.popoverData.filter(\n            (data) => Object.keys(data)[0] === Object.keys(card)[0]\n          );\n          return (\n            <div\n              key={index}\n              style={{ marginBottom: 15, marginTop: 15 }}\n              className={this.props.className}\n            >\n              <div\n                className=\"card\"\n                style={{\n                  background: colors[Object.keys(card)[0]],\n                }}\n              >\n                <div\n                  className=\"mainNumbers\"\n                  style={dataToday.length !== 0 ? {} : { marginBottom: 42 }}\n                >\n                  {Object.values(card)[0]}\n                </div>\n                {dataToday.length !== 0 ? (\n                  <div className=\"deltaNumbers\">\n                    <span className=\"deltaarrow\">&#9650;</span>{\" \"}\n                    {dataToday[0][Object.keys(card)[0]]}\n                    {showPopover[0][Object.keys(card)[0]] ? (\n                      <Popover\n                        body={\n                          <div\n                            style={{\n                              maxHeight: 400,\n                              overflowY: \"scroll\",\n                              borderRight: 10,\n                              background: \"white\",\n                              borderRadius: 10,\n                              padding: 15,\n                              color: \"#192a56\",\n                              fontWeight: \"bold\",\n                            }}\n                          >\n                            {popoverData[0][Object.keys(card)[0]]}\n                          </div>\n                        }\n                        preferPlace={\"below\"}\n                        isOpen={this.state[Object.keys(card)[0]]}\n                        onOuterAction={() =>\n                          this.setState({\n                            [Object.keys(card)[0]]: !this.state[\n                              Object.keys(card)[0]\n                            ],\n                          })\n                        }\n                      >\n                        <div\n                          onClick={() => {\n                            ReactGA.event({\n                              category: this.props.type + \" Info\",\n                              action:\n                                this.props.type +\n                                Object.keys(card)[0] +\n                                \" Info Clicked\",\n                              label:\n                                this.props.type +\n                                Object.keys(card)[0] +\n                                \" Info\",\n                            });\n                            this.setState({\n                              [Object.keys(card)[0]]: !this.state[\n                                Object.keys(card)[0]\n                              ],\n                            });\n                          }}\n                          className=\"report-tile delta-info\"\n                        >\n                          ?\n                        </div>\n                      </Popover>\n                    ) : null}\n                  </div>\n                ) : null}\n                <div style={{ fontSize: 18 }}>{Object.keys(card)[0]}</div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default NumericCard;\n","import React, { Component } from \"react\";\nimport NumericCard from \"components/ui/NumericCard/NumericCard\";\n\nclass NumberCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <NumericCard\n        type=\"Global\"\n        className=\"col-sm-3 col-6\"\n        data={[\n          {\n            Confirmed:\n              this.props.globalData.length !== 0\n                ? this.props.globalData.filter(\n                    (state) => state.title === \"World\"\n                  )[0].confirmed\n                : 0,\n          },\n          {\n            Active:\n              this.props.globalData.length !== 0\n                ? this.props.globalData.filter(\n                    (state) => state.title === \"World\"\n                  )[0].active\n                : 0,\n          },\n          {\n            Recovered:\n              this.props.globalData.length !== 0\n                ? this.props.globalData.filter(\n                    (state) => state.title === \"World\"\n                  )[0].recovered\n                : 0,\n          },\n          {\n            Deaths:\n              this.props.globalData.length !== 0\n                ? this.props.globalData.filter(\n                    (state) => state.title === \"World\"\n                  )[0].deaths\n                : 0,\n          },\n        ]}\n        showPopover={[\n          {\n            Confirmed:\n              this.props.globalData.length !== 0 &&\n              Number(\n                this.props.globalData.filter(\n                  (state) => state.title === \"World\"\n                )[0].confirmed_today\n              ) !== 0\n                ? true\n                : false,\n          },\n          {\n            Deaths:\n              this.props.globalData.length !== 0 &&\n              Number(\n                this.props.globalData.filter(\n                  (state) => state.title === \"World\"\n                )[0].deaths_today\n              ) !== 0\n                ? true\n                : false,\n          },\n        ]}\n        dataToday={[\n          {\n            Confirmed:\n              this.props.globalData.length !== 0\n                ? this.props.globalData.filter(\n                    (state) => state.title === \"World\"\n                  )[0].confirmed_today\n                : 0,\n          },\n          {\n            Deaths:\n              this.props.globalData.length !== 0\n                ? this.props.globalData.filter(\n                    (state) => state.title === \"World\"\n                  )[0].deaths_today\n                : 0,\n          },\n        ]}\n        popoverData={[\n          {\n            Confirmed: this.props.globalData\n              .filter(\n                (state) =>\n                  state.title !== \"World\" && state.confirmed_today !== \"\"\n              )\n              .map((state, index) => {\n                return (\n                  <div key={index}>\n                    {state.title}: {state.confirmed_today}\n                  </div>\n                );\n              }),\n          },\n          {\n            Deaths: this.props.globalData\n              .filter(\n                (state) => state.title !== \"World\" && state.deaths_today !== \"\"\n              )\n              .map((state, index) => {\n                return (\n                  <div key={index}>\n                    {state.title}: {state.deaths_today}\n                  </div>\n                );\n              }),\n          },\n        ]}\n      />\n    );\n  }\n}\n\nexport default NumberCard;\n","import React, { Component } from \"react\";\nimport GradientCardTitle from \"components/ui/GradientCardTitle/GradientCardTitle\";\nimport SwitchBar from \"components/ui/SwitchBar/SwitchBar\";\nimport SimpleLineChart from \"components/charts/SimpleLineChart/SimpleLineChart\";\nimport CustomChart from \"components/charts/PieChart/CustomChart\";\nimport GradientCardFooter from \"components/ui/GradientCardFooter/GradientCardFooter\";\nimport SimplePieChart from \"components/charts/SimplePieChart/SimplePieChart\";\nimport Select from \"react-select\";\n\nclass Analytics extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const colourStyles = {\n      control: (styles) => ({\n        ...styles,\n        backgroundColor: \"white\",\n        marginRight: 15,\n        marginBottom: 15,\n      }),\n      option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n        return {\n          ...styles,\n          backgroundColor: isDisabled\n            ? null\n            : isSelected\n            ? \"#404b69\"\n            : isFocused\n            ? \"white\"\n            : null,\n          color: isDisabled ? \"#ccc\" : isSelected ? \"white\" : \"#404b69\",\n          cursor: isDisabled ? \"not-allowed\" : \"default\",\n\n          \":active\": {\n            ...styles[\":active\"],\n            backgroundColor: !isDisabled && (isSelected ? \"#404b69\" : \"white\"),\n          },\n        };\n      },\n    };\n\n    let totalData =\n      this.props.globalTimelines.length !== 0\n        ? this.props.globalTimelines.map((cases, index) => {\n            return {\n              name: cases.reportDate,\n              Confirmed: Number(cases.totalConfirmed),\n              Active:\n                Number(cases.totalConfirmed) -\n                Number(cases.totalRecovered) -\n                Number(cases.deaths.total),\n              Recovered: Number(cases.totalRecovered),\n              Deaths: Number(cases.deaths.total),\n              dailyConfirmed: Number(cases.deltaConfirmed),\n              dailyActive:\n                index === 0\n                  ? Number(cases.totalConfirmed) -\n                    Number(cases.totalRecovered) -\n                    Number(cases.deaths.total)\n                  : Number(cases.totalConfirmed) -\n                    Number(cases.totalRecovered) -\n                    Number(cases.deaths.total) -\n                    (Number(\n                      this.props.globalTimelines[index - 1].totalConfirmed\n                    ) -\n                      Number(\n                        this.props.globalTimelines[index - 1].totalRecovered\n                      ) -\n                      Number(\n                        this.props.globalTimelines[index - 1].deaths.total\n                      )),\n              dailyRecovered: Number(cases.deltaRecovered),\n              dailyDeaths:\n                index === 0\n                  ? Number(cases.deaths.total)\n                  : Number(cases.deaths.total) -\n                    Number(this.props.globalTimelines[index - 1].deaths.total),\n            };\n          })\n        : [];\n\n    let totalDeathsByAge =\n      this.props.deathsRate.length !== 0\n        ? Object.values(\n            this.props.deathsRate.filter(\n              (type) => Object.keys(type)[0] === \"deathsRateByAge\"\n            )[0]\n          )[0].map((cases, index) => {\n            return {\n              name: cases.age,\n              [\"Rate (%)\"]: cases.all_cases.replace(/[^0-9.]/g, \"\"),\n              [\"Rate in confirmed cases(%)\"]: cases.confirmed_cases.replace(\n                /[^0-9.]/g,\n                \"\"\n              ),\n            };\n          })\n        : null;\n\n    let totalDeathsByCom =\n      this.props.deathsRate.length !== 0\n        ? Object.values(\n            this.props.deathsRate.filter(\n              (type) => Object.keys(type)[0] === \"deathsRateBycomorbidity\"\n            )[0]\n          )[0].map((cases, index) => {\n            return {\n              name: cases.age,\n              [\"Rate (%)\"]: cases.all_cases.replace(/[^0-9.]/g, \"\"),\n              [\"Rate in confirmed cases(%)\"]:\n                cases.confirmed_cases.replace(/[^0-9.]/g, \"\") === 0\n                  ? 0\n                  : cases.confirmed_cases.replace(/[^0-9.]/g, \"\"),\n            };\n          })\n        : null;\n\n    const Comparator = (a, b) => {\n      if (Number(a[1]) > Number(b[1])) return -1;\n      if (Number(a[1]) < Number(b[1])) return 1;\n      return 0;\n    };\n\n    var pieChartData =\n      this.props.globalData.length !== 0\n        ? this.props.globalData\n            .filter((country) => country.title !== \"World\")\n            .map((state) => {\n              return [state.title, Number(state[this.props.filterByCases])];\n            })\n        : [];\n\n    var deathsBySex =\n      this.props.deathsRate.length !== 0\n        ? Object.values(\n            this.props.deathsRate.filter(\n              (type) => Object.keys(type)[0] === \"deathsRateBySex\"\n            )[0]\n          )[0].map((cases, index) => {\n            return {\n              name: cases.sex,\n              value: Number(cases.confirmed_cases.replace(/[^0-9.]/g, \"\")),\n            };\n          })\n        : [];\n\n    pieChartData = pieChartData.sort(Comparator).slice(0, 10);\n\n    let Columns = [\n      { type: \"string\", label: \"name\" },\n      { type: \"number\", label: \"value\" },\n    ];\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-sm-4 col-12\">\n          <div className=\"gradient-card\">\n            <GradientCardTitle title={\"Total Confirmed cases daily\"} />\n            <SwitchBar\n              options={[\"Area\", \"Bar\"]}\n              optionValues={[\"AreaChart\", \"BarChart\"]}\n              onClick={(prop) => {\n                this.props.onSwitchBar(prop);\n              }}\n              showGlobalChartType={this.props.showGlobalChartType}\n            />\n            <SimpleLineChart\n              chart={this.props.showGlobalChartType}\n              customTooltip={true}\n              grid={false}\n              data={totalData}\n              labels={[\"Confirmed\"]}\n              colors={[\"#e43339\"]}\n            />\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-12\">\n          <div className=\"gradient-card\">\n            <GradientCardTitle title={\"Total Active cases daily\"} />\n            <SwitchBar\n              options={[\"Area\", \"Bar\"]}\n              optionValues={[\"AreaChart\", \"BarChart\"]}\n              onClick={(prop) => {\n                this.props.onSwitchBar(prop);\n              }}\n              showGlobalChartType={this.props.showGlobalChartType}\n            />\n            <SimpleLineChart\n              chart={this.props.showGlobalChartType}\n              customTooltip={true}\n              grid={false}\n              data={totalData}\n              labels={[\"Active\"]}\n              colors={[\"#192a56\"]}\n            />\n          </div>\n        </div>\n\n        <div className=\"col-sm-4 col-12\">\n          <div className=\"gradient-card\">\n            <GradientCardTitle title={\"Total deaths daily\"} />\n            <SwitchBar\n              options={[\"Area\", \"Bar\"]}\n              optionValues={[\"AreaChart\", \"BarChart\"]}\n              onClick={(prop) => {\n                this.props.onSwitchBar(prop);\n              }}\n              showGlobalChartType={this.props.showGlobalChartType}\n            />\n            <SimpleLineChart\n              chart={this.props.showGlobalChartType}\n              customTooltip={true}\n              grid={false}\n              data={totalData}\n              labels={[\"Deaths\"]}\n              colors={[\"#535c68\"]}\n            />\n          </div>\n        </div>\n\n        <div className=\"col-sm-6 col-12\">\n          <div className=\"gradient-card\">\n            <GradientCardTitle title={\"Top ten countries by cases\"} />\n            <div className=\"row\" style={{ justifyContent: \"center\" }}>\n              <div className=\"col-sm-6\">\n                <Select\n                  isClearable={false}\n                  isSearchable={false}\n                  onChange={(selectedOption) => {\n                    this.props.onChange(selectedOption);\n                  }}\n                  styles={colourStyles}\n                  placeholder=\"Top 10 Confirmed\"\n                  options={[\n                    { value: \"confirmed\", label: \"Top 10 Confirmed\" },\n                    { value: \"active\", label: \"Top 10 Active\" },\n                    { value: \"deaths\", label: \"Top 10 Deaths\" },\n                    { value: \"recovered\", label: \"Top 10 Recovered\" },\n                  ]}\n                />\n              </div>\n            </div>\n            <CustomChart\n              placeholder={false}\n              emptyClassName={\"m-t-40\"}\n              chartArea={{ left: 10, top: 15, right: 10, bottom: 15 }}\n              rows={pieChartData}\n              columns={Columns}\n              chartType={\"PieChart\"}\n              height={\"270px\"}\n            />\n          </div>\n        </div>\n        <div className=\"col-sm-6 col-12\">\n          <div className=\"gradient-card\">\n            <GradientCardTitle title={\"Fatality Rate By Age\"} />\n            <SimpleLineChart\n              chart={\"BarChart\"}\n              customTooltip={true}\n              grid={false}\n              data={totalDeathsByAge}\n              labels={[\"Rate (%)\"]}\n              colors={[\"#192a56\"]}\n            />\n            <GradientCardFooter\n              content={\n                \"The percentages do not have to add up to 100%, as they do NOT represent share of deaths by age group.\"\n              }\n            />\n          </div>\n        </div>\n        <div className=\"col-sm-6 col-12\">\n          <div className=\"gradient-card\">\n            <GradientCardTitle title={\"Fatality Rate By Gender\"} />\n            <div style={{ marginBottom: -24 }}>\n              <span style={{ color: \"#192a56\", fontWeight: \"bold\" }}>\n                Male{\" \"}\n                {deathsBySex.length !== 0\n                  ? deathsBySex.filter((stat) => stat.name === \"Male\")[0].value\n                  : 0}\n              </span>\n              <span\n                style={{\n                  marginLeft: 15,\n                  color: \"rgb(255, 82, 82)\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                Female{\" \"}\n                {deathsBySex.length !== 0\n                  ? deathsBySex.filter((stat) => stat.name === \"Female\")[0]\n                      .value\n                  : 0}\n              </span>\n            </div>\n            <SimplePieChart data={deathsBySex} />\n            <GradientCardFooter\n              content={\n                \"The percentages do not have to add up to 100%, as they do NOT represent share of deaths by age group.\"\n              }\n            />\n          </div>\n        </div>\n        <div className=\"col-sm-6 col-12\">\n          <div className=\"gradient-card\">\n            <GradientCardTitle title={\"Fatality Rate By Comorbility\"} />\n            <SimpleLineChart\n              chart={\"BarChart\"}\n              customTooltip={true}\n              grid={false}\n              data={totalDeathsByCom}\n              labels={[\"Rate (%)\", \"Rate in confirmed cases(%)\"]}\n              colors={[\"#192a56\", \"#192a56\"]}\n            />\n            <GradientCardFooter\n              content={\n                \"The percentages do not have to add up to 100%, as they do NOT represent share of deaths by age group.\"\n              }\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Analytics;\n","import React from \"react\";\nimport \"./MapSwitchBar.sass\";\n\nconst MapSwitchBar = (props) => {\n  return (\n    <div className=\"MapSwitchBar\">\n      {props.options.map((option, index) => {\n        return (\n          <div\n            key={index}\n            className={\n              props.mapFilter === props.optionValues[index]\n                ? \"mapswitch-active\"\n                : \"mapswitch\"\n            }\n            style={\n              props.mapFilter === props.optionValues[index]\n                ? {\n                    background: props.colors[index],\n                    color: \"white\",\n                  }\n                : {\n                    border: \"2px solid \" + props.colors[index],\n                    color: props.colors[index],\n                  }\n            }\n            onClick={() => props.onClick(props.optionValues[index])}\n          >\n            {option}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default MapSwitchBar;\n","import React from \"react\";\nimport { scaleLog } from \"d3-scale\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport Countrys from \"./ISO2.json\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst colorScale = scaleLog()\n  .domain([1, 10])\n  .range([\n    \"#ffedea\",\n    \"#ffcec5\",\n    \"#ffad9f\",\n    \"#ff8a75\",\n    \"#ff5533\",\n    \"#e2492d\",\n    \"#be3d26\",\n    \"#9a311f\",\n    \"#782618\",\n  ]);\n\nconst MapChart = ({ setTooltipContent, data, mapFilter }) => {\n  return (\n    <ComposableMap\n      height={550}\n      width={700}\n      data-tip=\"\"\n      projectionConfig={{\n        rotate: [-10, 0, 0],\n        scale: 147,\n      }}\n    >\n      {data.length > 0 && (\n        <Geographies geography={geoUrl}>\n          {({ geographies }) =>\n            geographies.map((geo) => {\n              const d = data.find(\n                (s) => Countrys[s.title] === geo.properties.ISO_A2\n              );\n              //VirusTracker\n              // const d = data.find((s) => s.code === geo.properties.ISO_A2);\n              //Covid19Info\n              // const d = data.find(\n              //   (s) => Object.keys(s)[0] === geo.properties.ISO_A3\n              // );\n              return (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  onMouseEnter={() => {\n                    if (typeof d !== \"undefined\") {\n                      setTooltipContent([\n                        { title: geo.properties.NAME_LONG },\n                        { Confirmed: d.confirmed === \"\" ? 0 : d.confirmed },\n                        { Deaths: d.deaths === \"\" ? 0 : d.deaths },\n                        { Recovered: d.recovered === \"\" ? 0 : d.recovered },\n                        {\n                          DeathsToday:\n                            d.deaths_today === \"\" ? 0 : d.deaths_today,\n                        },\n                        {\n                          ConfirmedToday:\n                            d.confirmed_today === \"\" ? 0 : d.confirmed_today,\n                        },\n                      ]);\n                      // VirusTracker\n                      // setTooltipContent([\n                      //   { title: d.title },\n                      //   { Confirmed: d.total_cases },\n                      //   { Deaths: d.total_deaths },\n                      //   { Recovered: d.total_recovered },\n                      // ]);\n                      // //Covid19Info\n                      // setTooltipContent([\n                      //   { title: Object.keys(d)[0] },\n                      //   { Confirmed: Object.values(d)[0].confirmed },\n                      //   { Deaths: Object.values(d)[0].deaths },\n                      //   { Recovered: Object.values(d)[0].recovered },\n                      // ]);\n                    } else {\n                      setTooltipContent([\n                        { title: geo.properties.NAME },\n                        { Confirmed: 0 },\n                        { Deaths: 0 },\n                        { Recovered: 0 },\n                        { DeathsToday: 0 },\n                        { ConfirmedToday: 0 },\n                      ]);\n                    }\n                  }}\n                  onMouseLeave={() => {\n                    setTooltipContent(\"\");\n                  }}\n                  style={{\n                    hover: {\n                      fill: \"#F53\",\n                      outline: \"none\",\n                    },\n                    pressed: {\n                      fill: \"#E42\",\n                      outline: \"none\",\n                    },\n                  }}\n                  fill={\n                    d\n                      ? colorScale(Number(d[mapFilter]))\n                      : // ? colorScale(Number(Object.values(d)[0][mapFilter])) // covid19Info\n                        \"#F5F4F6\"\n                  }\n                />\n              );\n            })\n          }\n        </Geographies>\n      )}\n    </ComposableMap>\n  );\n};\n\nexport default MapChart;\n","import React, { Component } from \"react\";\nimport MapSwitchBar from \"components/ui/MapSwitchBar/MapSwitchBar\";\nimport DataMap from \"components/charts/DataMap/DataMap\";\nimport ReactTooltip from \"react-tooltip\";\n\nclass GlobalMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  renderTooltipLabelColor(caseType) {\n    switch (caseType[0]) {\n      case \"Confirmed\":\n        return \"rgb(64, 75, 105)\";\n\n      case \"Deaths\":\n        return \"rgb(255, 82, 82)\";\n\n      case \"Recovered\":\n        return \"rgb(76, 175, 80)\";\n\n      default:\n        return \"rgb(64, 75, 105)\";\n    }\n  }\n  render() {\n    return (\n      <div className=\"row\" style={{ marginTop: 20 }}>\n        <div className=\"col-sm-12 col-12\" style={{ minHeight: \"368px\" }}>\n          <div className=\"global-map\">\n            <MapSwitchBar\n              mapFilter={this.props.mapFilter}\n              options={[\"Confirmed\", \"Recovered\", \"Deaths\"]}\n              optionValues={[\"confirmed\", \"recovered\", \"deaths\"]}\n              colors={[\n                \"rgb(68, 138, 255)\",\n                \"rgb(76, 175, 80)\",\n                \"rgb(255, 82, 82)\",\n              ]}\n              onClick={(prop) => this.props.onMapSwitch(prop)}\n            />\n            <DataMap\n              mapFilter={this.props.mapFilter}\n              data={\n                this.props.globalData.length !== 0\n                  ? this.props.globalData.filter(\n                      (location) => location.title !== \"World\"\n                    )\n                  : []\n              }\n              setTooltipContent={(content) =>\n                this.props.onSetTooltipContent(content)\n              }\n            />\n            <ReactTooltip>\n              {this.props.setTooltipContent.length !== 0 ? (\n                <div>\n                  <span\n                    style={{\n                      color: this.renderTooltipLabelColor(\n                        Object.keys(this.props.setTooltipContent[0])\n                      ),\n                      fontWeight: \"bold\",\n                      fontSize: 16,\n                    }}\n                  >\n                    {Object.values(this.props.setTooltipContent[0])}\n                  </span>\n                  <br />\n                  <span\n                    style={{\n                      color: this.renderTooltipLabelColor(\n                        Object.keys(this.props.setTooltipContent[0])\n                      ),\n                      fontWeight: \"bold\",\n                      fontSize: 16,\n                    }}\n                  >\n                    {Object.keys(this.props.setTooltipContent[1])} {\": \"}\n                    {Object.values(this.props.setTooltipContent[1])}{\" \"}\n                    <span style={{ fontSize: 20, fontWeight: \"bold\" }}>\n                      &#9650;\n                    </span>\n                    {Object.values(this.props.setTooltipContent[5])}\n                  </span>\n                  <br />\n                  <span\n                    style={{\n                      color: this.renderTooltipLabelColor(\n                        Object.keys(this.props.setTooltipContent[2])\n                      ),\n                      fontWeight: \"bold\",\n                      fontSize: 16,\n                    }}\n                  >\n                    {Object.keys(this.props.setTooltipContent[2])} {\": \"}\n                    {Object.values(this.props.setTooltipContent[2])}{\" \"}\n                    <span style={{ fontSize: 20, fontWeight: \"bold\" }}>\n                      &#9650;\n                    </span>\n                    {Object.values(this.props.setTooltipContent[4])}\n                  </span>\n                  <br />\n                  <span\n                    style={{\n                      color: this.renderTooltipLabelColor(\n                        Object.keys(this.props.setTooltipContent[3])\n                      ),\n                      fontWeight: \"bold\",\n                      fontSize: 16,\n                    }}\n                  >\n                    {Object.keys(this.props.setTooltipContent[3])} {\": \"}\n                    {Object.values(this.props.setTooltipContent[3])}\n                  </span>\n                  <br />\n                </div>\n              ) : (\n                \"\"\n              )}\n            </ReactTooltip>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GlobalMap;\n","import React from \"react\";\nimport \"./DataCard.sass\";\n\nconst colors = {\n  Confirmed: \"#e43339\",\n  Deaths: \"#404b69\",\n};\n\nconst DataCard = (props) => {\n  return (\n    <div key={props.index} className=\"col-sm-4 DataCard\">\n      <div className=\"data-card\">\n        <label className=\"data-card-title\">{props.title}</label>\n        <br />\n        <div className=\"row justify-content-center\">\n          {props.data.map((data, index) => {\n            let showIcon = props.showIcon.filter(\n              (content) => Object.keys(content)[0] === Object.keys(data)[0]\n            );\n            let showData = props.dataToday.filter(\n              (content) => Object.keys(content)[0] === Object.keys(data)[0]\n            );\n\n            return (\n              <div className=\"data-card-label\">\n                <div>\n                  {Object.values(data)}\n                  {showIcon.length !== 0 && showIcon[0] ? (\n                    <span\n                      className=\"data-card-span-label\"\n                      style={{\n                        color: colors[Object.keys(data)],\n                      }}\n                    >\n                      {\"  \"}\n                      <span className=\"data-card-span-value\">&#9650;</span>\n                      {showIcon.length !== 0 && showIcon[0]\n                        ? Object.values(showData[0])[0]\n                        : null}\n                    </span>\n                  ) : null}\n                </div>\n                <div>{Object.keys(data)}</div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DataCard;\n","import React, { Component } from \"react\";\nimport DataCard from \"components/ui/DataCard/DataCard\";\nimport Virus from \"assets/virus.gif\";\n\nclass Cards extends Component {\n  render() {\n    return this.props.locationLoader === true ? (\n      <div>\n        <img src={Virus} alt=\"Loader\" />\n      </div>\n    ) : (\n      <>\n        <div style={{ marginBottom: 20 }}>\n          <input\n            defaultValue={this.props.searchString}\n            type=\"text\"\n            placeholder=\"Search\"\n            onChange={(e) => this.props.onSearch(e)}\n          />\n        </div>\n        <div className=\"row\">\n          {this.props.globalData.length !== 0\n            ? this.props.globalData\n                .filter(\n                  (location) =>\n                    location.title !== \"World\" &&\n                    location.title\n                      .toLowerCase()\n                      .includes(this.props.searchString)\n                )\n                .map((location, index) => {\n                  return (\n                    <DataCard\n                      key={index}\n                      title={location.title}\n                      location={location}\n                      index={index}\n                      data={[\n                        {\n                          Confirmed: location.confirmed,\n                        },\n                        {\n                          Active: location.active,\n                        },\n                        {\n                          Deaths: location.deaths,\n                        },\n                        {\n                          Recovered: location.recovered,\n                        },\n                        { Serious: location.critical },\n                        { Tests: location.totaltests },\n                      ]}\n                      showIcon={[\n                        {\n                          Confirmed:\n                            location.confirmed_today !== \"\" ? true : false,\n                        },\n                        {\n                          Deaths: location.deaths_today !== \"\" ? true : false,\n                        },\n                      ]}\n                      dataToday={[\n                        {\n                          Confirmed: location.confirmed_today,\n                        },\n                        {\n                          Deaths: location.deaths_today,\n                        },\n                      ]}\n                    />\n                  );\n                })\n            : null}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Cards;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport \"index.css\"\n\nconst LEFT_PAGE = 'LEFT';\nconst RIGHT_PAGE = 'RIGHT';\n\n/**\n * Helper method for creating a range of numbers\n * range(1, 5) => [1, 2, 3, 4, 5]\n */\nconst range = (from, to, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n}\n\nclass Pagination extends Component {\n\n  constructor(props) {\n    super(props);\n    const { totalRecords = null, pageLimit = 30, pageNeighbours = 0 } = props;\n\n    this.pageLimit = typeof pageLimit === 'number' ? pageLimit : 30;\n    this.totalRecords = typeof totalRecords === 'number' ? totalRecords : 0;\n\n    // pageNeighbours can be: 0, 1 or 2\n    this.pageNeighbours = typeof pageNeighbours === 'number'\n      ? Math.max(0, Math.min(pageNeighbours, 2))\n      : 0;\n\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\n\n    this.state = { currentPage: 1 };\n  }\n\n  componentDidMount() {\n    this.gotoPage(1);\n  }\n\n  gotoPage = page => {\n    const { onPageChanged = f => f } = this.props;\n\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\n\n    const paginationData = {\n      currentPage,\n      totalPages: this.totalPages,\n      pageLimit: this.pageLimit,\n      totalRecords: this.totalRecords\n    };\n\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\n  }\n\n  handleClick = page => evt => {\n    evt.preventDefault();\n    this.gotoPage(page);\n  }\n\n  handleMoveLeft = evt => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage - (this.pageNeighbours * 2) - 1);\n  }\n\n  handleMoveRight = evt => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage + (this.pageNeighbours * 2) + 1);\n  }\n\n  /**\n   * Let's say we have 10 pages and we set pageNeighbours to 2\n   * Given that the current page is 6\n   * The pagination control will look like the following:\n   *\n   * (1) < {4 5} [6] {7 8} > (10)\n   *\n   * (x) => terminal pages: first and last page(always visible)\n   * [x] => represents current page\n   * {...x} => represents page neighbours\n   */\n  fetchPageNumbers = () => {\n\n    const totalPages = this.totalPages;\n    const currentPage = this.state.currentPage;\n    const pageNeighbours = this.pageNeighbours;\n\n    /**\n     * totalNumbers: the total page numbers to show on the control\n     * totalBlocks: totalNumbers + 2 to cover for the left(<) and right(>) controls\n     */\n    const totalNumbers = (this.pageNeighbours * 2) + 3;\n    const totalBlocks = totalNumbers + 2;\n\n    if (totalPages > totalBlocks) {\n\n      const startPage = Math.max(2, currentPage - pageNeighbours);\n      const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\n\n      let pages = range(startPage, endPage);\n\n      /**\n       * hasLeftSpill: has hidden pages to the left\n       * hasRightSpill: has hidden pages to the right\n       * spillOffset: number of hidden pages either to the left or to the right\n       */\n      const hasLeftSpill = startPage > 2;\n      const hasRightSpill = (totalPages - endPage) > 1;\n      const spillOffset = totalNumbers - (pages.length + 1);\n\n      switch (true) {\n        // handle: (1) < {5 6} [7] {8 9} (10)\n        case (hasLeftSpill && !hasRightSpill): {\n          const extraPages = range(startPage - spillOffset, startPage - 1);\n          pages = [LEFT_PAGE, ...extraPages, ...pages];\n          break;\n        }\n\n        // handle: (1) {2 3} [4] {5 6} > (10)\n        case (!hasLeftSpill && hasRightSpill): {\n          const extraPages = range(endPage + 1, endPage + spillOffset);\n          pages = [...pages, ...extraPages, RIGHT_PAGE];\n          break;\n        }\n\n        // handle: (1) < {4 5} [6] {7 8} > (10)\n        case (hasLeftSpill && hasRightSpill):\n        default: {\n          pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\n          break;\n        }\n      }\n\n      return [1, ...pages, totalPages];\n\n    }\n\n    return range(1, totalPages);\n\n  }\n\n  render() {\n\n    if (!this.totalRecords || this.totalPages === 1) return null;\n\n    const { currentPage } = this.state;\n    const pages = this.fetchPageNumbers();\n\n    return (\n      <Fragment>\n        <nav aria-label=\"Countries Pagination\">\n          <ul className=\"pagination\">\n            { pages.map((page, index) => {\n\n              if (page === LEFT_PAGE) return (\n                <li key={index} className=\"page-item\">\n                  <a className=\"page-link\" href=\"#\" aria-label=\"Previous\" onClick={this.handleMoveLeft}>\n                    <span aria-hidden=\"true\">&laquo;</span>\n                    <span className=\"sr-only\">Previous</span>\n                  </a>\n                </li>\n              );\n\n              if (page === RIGHT_PAGE) return (\n                <li key={index} className=\"page-item\">\n                  <a className=\"page-link\" href=\"#\" aria-label=\"Next\" onClick={this.handleMoveRight}>\n                    <span aria-hidden=\"true\">&raquo;</span>\n                    <span className=\"sr-only\">Next</span>\n                  </a>\n                </li>\n              );\n\n              return (\n                <li key={index} className={`page-item${ currentPage === page ? ' active' : ''}`}>\n                  <a className=\"page-link\" href=\"#\" onClick={ this.handleClick(page) }>{ page }</a>\n                </li>\n              );\n\n            }) }\n\n          </ul>\n        </nav>\n      </Fragment>\n    );\n\n  }\n}\n\nPagination.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  pageLimit: PropTypes.number,\n  pageNeighbours: PropTypes.number,\n  onPageChanged: PropTypes.func\n};\n\nexport default Pagination;","import React, { Component } from \"react\";\nimport Virus from \"assets/virus.gif\";\nimport Countrys from \"utils/CountryList.json\";\nimport Select from \"react-select\";\nimport SimpleLineChart from \"components/charts/SimpleLineChart/SimpleLineChart\";\nimport Pagination from \"components/ui/Pagination/Pagination\";\nimport _ from \"lodash\";\n\nclass ChartsCard extends Component {\n  render() {\n    const colourStyles = {\n      control: (styles) => ({\n        ...styles,\n        backgroundColor: \"white\",\n        marginRight: 15,\n        marginBottom: 15,\n      }),\n      option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n        return {\n          ...styles,\n          backgroundColor: isDisabled\n            ? null\n            : isSelected\n            ? \"#404b69\"\n            : isFocused\n            ? \"white\"\n            : null,\n          color: isDisabled ? \"#ccc\" : isSelected ? \"white\" : \"#404b69\",\n          cursor: isDisabled ? \"not-allowed\" : \"default\",\n\n          \":active\": {\n            ...styles[\":active\"],\n            backgroundColor: !isDisabled && (isSelected ? \"#404b69\" : \"white\"),\n          },\n        };\n      },\n    };\n\n    const options = Object.keys(Countrys).map((location) => {\n      return {\n        value: location,\n        label: Countrys[location],\n      };\n    });\n\n    let date = new Date();\n    let todayDate =\n      date.getMonth() + 1 + \"/\" + date.getDate() + \"/\" + date.getFullYear();\n\n    return (\n      <>\n        <div>\n          <Select\n            isClearable={true}\n            onChange={(selectedOption) => {\n              this.setState({\n                timelines: [],\n                selectedCountry: true,\n              });\n              this.getChartsData(\n                selectedOption === null\n                  ? _.chunk(Object.keys(Countrys), 9)[0]\n                  : [selectedOption.value.toUpperCase()]\n              );\n            }}\n            styles={colourStyles}\n            options={options}\n          />\n        </div>\n\n        <div className=\"row\">\n          {this.props.locationLoader === true ? (\n            <div style={{ width: \"100%\" }}>\n              <img src={Virus} alt=\"Loader\" />\n            </div>\n          ) : this.props.timelines.length !== 0 ? (\n            this.props.timelines.map((timeline, index1) => {\n              let data = Object.keys(timeline.timelineitems[0])\n                .filter((data) => data !== \"stat\" && data !== todayDate)\n                .map((dataKey, index) => {\n                  return {\n                    name: dataKey,\n                    Confirmed: timeline.timelineitems[0][dataKey].total_cases,\n                    Deaths: timeline.timelineitems[0][dataKey].total_deaths,\n                    Recovered:\n                      timeline.timelineitems[0][dataKey].total_recoveries,\n                    [\"New Conf.\"]:\n                      timeline.timelineitems[0][dataKey].new_daily_cases,\n                    [\"New Deaths\"]:\n                      timeline.timelineitems[0][dataKey].new_daily_deaths,\n                  };\n                });\n              let cardValue =\n                this.props.cards.length !== 0 &&\n                typeof Object.values(\n                  this.props.cards[0].countryitems[0]\n                ).filter(\n                  (country) =>\n                    country !== \"ok\" &&\n                    country.title === timeline.countrytimelinedata[0].info.title\n                )[0];\n              let filteredTitle = Object.values(\n                this.props.cards[0].countryitems[0]\n              ).filter(\n                (country) =>\n                  country !== \"ok\" &&\n                  country.title === timeline.countrytimelinedata[0].info.title\n              )[0];\n              let totalCases = Object.values(timeline.timelineitems[0])[\n                Object.values(timeline.timelineitems[0]).length - 2\n              ];\n              let confirmed =\n                cardValue !== \"undefined\"\n                  ? filteredTitle.total_cases\n                  : totalCases.total_cases;\n              let deaths =\n                cardValue !== \"undefined\"\n                  ? filteredTitle.total_deaths\n                  : totalCases.total_deaths;\n              let recovered =\n                cardValue !== \"undefined\"\n                  ? filteredTitle.total_recovered\n                  : totalCases.total_recoveries;\n              let NewConfirmed =\n                cardValue !== \"undefined\"\n                  ? filteredTitle.total_new_cases_today\n                  : totalCases.new_daily_cases;\n              let NewDeaths =\n                cardValue !== \"undefined\"\n                  ? filteredTitle.total_new_deaths_today\n                  : totalCases.new_daily_deaths;\n              let countryItemsFiltered = Object.values(\n                this.props.cards[0].countryitems[0]\n              ).filter(\n                (country) =>\n                  country.title === timeline.countrytimelinedata[0].info.title\n              )[0];\n              if (cardValue !== \"undefined\") {\n                data.push({\n                  name: todayDate,\n                  Confirmed: countryItemsFiltered.total_cases,\n                  Deaths: countryItemsFiltered.total_deaths,\n                  Recovered: countryItemsFiltered.total_recovered,\n                  [\"New Conf.\"]: countryItemsFiltered.total_new_cases_today,\n                  [\"New Deaths\"]: countryItemsFiltered.total_new_deaths_today,\n                });\n              }\n              return (\n                <div key={index1} className=\"col-sm-4 Chart-Card\">\n                  <div className=\"chart-card-style\">\n                    <label className=\"chart-card-title\">\n                      {timeline.countrytimelinedata[0].info.title}\n                    </label>\n                    <br />\n                    <div className=\"row justify-content-center\">\n                      <div className=\"chart-card-label-confirmed\">\n                        <div>\n                          {confirmed}\n                          {NewConfirmed === 0 ? null : (\n                            <span style={{ fontSize: 13 }}>\n                              {\"  \"}\n                              <span\n                                style={{\n                                  fontSize: 17,\n                                  fontWeight: \"bold\",\n                                }}\n                              >\n                                &#9650;\n                              </span>\n                              {NewConfirmed}\n                            </span>\n                          )}\n                        </div>\n                        <div>Confirmed</div>\n                      </div>\n                      <div className=\"chart-card-label-deaths\">\n                        <div>\n                          {deaths}\n                          {NewDeaths === 0 ? null : (\n                            <span style={{ fontSize: 13 }}>\n                              {\"  \"}\n                              <span\n                                style={{\n                                  fontSize: 17,\n                                  fontWeight: \"bold\",\n                                }}\n                              >\n                                &#9650;\n                              </span>\n                              {NewDeaths}\n                            </span>\n                          )}\n                        </div>\n                        <div>Deaths</div>\n                      </div>\n                      <div className=\"chart-card-label-recovered\">\n                        <div>{recovered}</div>\n                        <div>Recovered</div>\n                      </div>\n                    </div>\n                    <SimpleLineChart\n                      chart={\"AreaChart\"}\n                      labels={[\n                        \"Confirmed\",\n                        \"Recovered\",\n                        \"Deaths\",\n                        \"New Conf.\",\n                        \"New Deaths\",\n                      ]}\n                      colors={[\n                        \"#e43339\",\n                        \"#006266\",\n                        \"#535c68\",\n                        \"#192a56\",\n                        \"#192a56\",\n                      ]}\n                      data={data}\n                    />\n                  </div>\n                </div>\n              );\n            })\n          ) : null}\n          <br />\n          {!this.props.selectedCountry ? (\n            <div className=\"row\" style={{ width: \"100%\", padding: 30 }}>\n              <Pagination\n                totalRecords={Object.keys(Countrys).length}\n                pageLimit={9}\n                pageNeighbours={1}\n                onPageChanged={this.props.onPageChanged}\n              />\n            </div>\n          ) : null}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ChartsCard;\n","import React, { Component } from \"react\";\nimport \"components/Backup/App.css\";\nimport \"react-table-6/react-table.css\";\nimport ErrorBoundary from \"components/ui/ErrorBoundry/ErrorBoundry\";\nimport Countrys from \"utils/CountryList.json\";\nimport _ from \"lodash\";\nimport \"components/container/Global/Global.sass\";\nimport Header from \"components/ui/Header/Header\";\nimport NavigationBar from \"components/ui/NavigationBar/NavigationBar\";\nimport Footer from \"components/ui/Footer/Footer\";\nimport Table from \"components/container/Global/SubComponents/Table\";\nimport NumberCard from \"components/container/Global/SubComponents/NumberCard\";\nimport Analytics from \"components/container/Global/SubComponents/Analytics\";\nimport GlobalMap from \"components/container/Global/SubComponents/GlobalMap\";\nimport Cards from \"components/container/Global/SubComponents/Cards\";\nimport ChartsCard from \"components/container/Global/SubComponents/ChartsCard\";\n\nclass Global extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showGlobalChartType: \"AreaChart\",\n      searchString: \"\",\n      cards: [],\n      ui: \"/\",\n      width: 0,\n      height: 0,\n      globalTimelines: [],\n      setTooltipContent: \"\",\n      mapFilter: \"confirmed\",\n      filterByCases: \"confirmed\",\n      displayBySort: \"All\",\n      currentPage: 0,\n      currentCardPage: 0,\n      totalCardPages: 0,\n      totalPages: 0,\n      globalData: [],\n      deathsRate: [],\n      locationLoader: false,\n      selectedCountry: false,\n      data: [],\n      timelines: [],\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n\n    this.setState({\n      locationLoader: true,\n    });\n    window.addEventListener(\"focus\", () => {\n      this.getGlobalData();\n      this.getDailyData();\n      this.getDeathRates();\n      this.getCardsData([1]);\n    });\n\n    this.getGlobalData();\n    this.getDailyData();\n    this.getDeathRates();\n    this.getCardsData([1]);\n  }\n\n  getDeathRates() {\n    fetch(`https://covid19-global-api.herokuapp.com/deaths-rate.json`, {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        this.setState({\n          deathsRate: response,\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          locationLoader: false,\n        });\n      });\n  }\n\n  getGlobalData() {\n    fetch(`https://covid19-global-api.herokuapp.com/global.json`, {\n      header: { \"Access-Control-Allow-Origin\": \"*\" },\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        this.setState({\n          globalData: response,\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          locationLoader: false,\n        });\n      });\n  }\n\n  getDailyData() {\n    fetch(`https://covid19.mathdro.id/api/daily`, {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        this.setState({\n          globalTimelines: response,\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          locationLoader: false,\n        });\n      });\n  }\n\n  getCardsData(cardId) {\n    let cards = [];\n    this.setState({\n      cards: [],\n      locationLoader: true,\n    });\n    cardId.map((location) => {\n      fetch(\n        `https://cors-proxy-pass.herokuapp.com/https://thevirustracker.com/free-api?countryTotals=ALL`,\n        {\n          method: \"GET\",\n        }\n      )\n        .then((res) => res.json())\n        .then((response) => {\n          this.setState({\n            locationLoader: false,\n            cards: cards.concat(response),\n          });\n        })\n        .catch((error) => {\n          this.setState({\n            locationLoader: false,\n          });\n        });\n    });\n  }\n\n  getChartsData(data) {\n    data.map((location) => {\n      fetch(\n        `https://cors-proxy-pass.herokuapp.com/https://thevirustracker.com/free-api?countryTimeline=${location}`,\n        {\n          method: \"GET\",\n        }\n      )\n        .then((res) => res.json())\n        .then((response) => {\n          this.setState((state) => {\n            const timelines = state.timelines.concat(response);\n            const locationLoader = false;\n            return {\n              timelines,\n              locationLoader,\n            };\n          });\n        })\n        .catch((error) => {\n          this.setState({\n            locationLoader: false,\n          });\n        });\n    });\n  }\n\n  onPageChanged = (data1) => {\n    const { currentPage, totalPages } = data1;\n\n    this.setState({\n      timelines: [],\n      locationLoader: true,\n    });\n    if (!this.state.selectedCountry) {\n      this.getChartsData(_.chunk(Object.keys(Countrys), 9)[currentPage - 1]);\n    }\n\n    this.setState({\n      currentPage: currentPage - 1,\n      totalPages: totalPages,\n    });\n  };\n\n  updateDimensions = () => {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  render() {\n    return (\n      <ErrorBoundary>\n        <div className=\"Global\">\n          <div className=\"container\">\n            <div>\n              <Header history={this.props.history} width={this.state.width} />\n            </div>\n            <div style={{ minHeight: \"90vh\" }}>\n              <NumberCard globalData={this.state.globalData} />\n              <NavigationBar\n                type=\"Global\"\n                ui={this.state.ui}\n                options={[\"Analytics\", \"Card\", \"Table\", \"Map\"]}\n                optionRoutes={[\"/\", \"/card\", \"/table\", \"/map\"]}\n                onClick={(route) => {\n                  this.setState({\n                    ui: route,\n                  });\n                }}\n              />\n              {this.state.ui === \"/\" ? (\n                <Analytics\n                  globalTimelines={this.state.globalTimelines}\n                  deathsRate={this.state.deathsRate}\n                  globalData={this.state.globalData}\n                  showGlobalChartType={this.state.showGlobalChartType}\n                  filterByCases={this.state.filterByCases}\n                  onSwitchBar={(prop) => {\n                    this.setState({\n                      showGlobalChartType: prop,\n                    });\n                  }}\n                  onChange={(selectedOption) => {\n                    this.setState({\n                      filterByCases:\n                        selectedOption === null\n                          ? \"confirmed\"\n                          : selectedOption.value,\n                    });\n                  }}\n                />\n              ) : null}\n              {this.state.ui === \"/map\" ? (\n                <GlobalMap\n                  mapFilter={this.state.mapFilter}\n                  globalData={this.state.globalData}\n                  setTooltipContent={this.state.setTooltipContent}\n                  onSetTooltipContent={(content) => {\n                    this.setState({ setTooltipContent: content });\n                  }}\n                  onMapSwitch={(prop) => {\n                    this.setState({\n                      mapFilter: prop,\n                    });\n                  }}\n                />\n              ) : null}\n              {this.state.ui === \"/table\" ? (\n                <Table globalData={this.state.globalData} />\n              ) : null}\n              {this.state.ui === \"/card\" ? (\n                <Cards\n                  locationLoader={this.state.locationLoader}\n                  searchString={this.state.searchString}\n                  globalData={this.state.globalData}\n                  onSearch={(e) => {\n                    this.setState({\n                      searchString: e.target.value.toLowerCase(),\n                      selectedCountry: false,\n                    });\n                  }}\n                />\n              ) : null}\n              {this.state.ui === \"/chart\" ? (\n                <ChartsCard\n                  locationLoader={this.state.locationLoader}\n                  cards={this.state.cards}\n                  timelines={this.state.timelines}\n                  selectedCountry={this.state.selectedCountry}\n                  onPageChanged={this.onPageChanged}\n                />\n              ) : null}\n            </div>\n            <Footer />\n          </div>\n        </div>\n      </ErrorBoundary>\n    );\n  }\n}\n\nexport default Global;\n","import React, { Component } from \"react\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport India from \"./components/container/India/India\";\nimport ReactGA from \"react-ga\";\nimport { createBrowserHistory } from \"history\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport brands from \"@fortawesome/fontawesome-free-brands\";\nimport Global from \"./components/container/Global/Global\";\nlibrary.add(fas, brands);\nconst history = createBrowserHistory();\n\nReactGA.initialize(\"UA-162840601-1\", { debug: true });\nReactGA.set({ page: window.location.pathname + window.location.hash }); // Update the user's current page\nReactGA.pageview(window.location.pathname + window.location.hash);\n\nhistory.listen((location) => {\n  ReactGA.set({ page: location.pathname + location.hash }); // Update the user's current page\n  ReactGA.pageview(location.pathname + location.hash); // Record a pageview for the given page\n});\n\nexport class Index extends Component {\n  render() {\n    return (\n      <div>\n        <React.Fragment>\n          <Switch>\n            <Route path=\"/india\" component={India} />\n            <Route path=\"/\" component={Global} />\n          </Switch>\n        </React.Fragment>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Index);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ErrorBoundry from \"components/ui/ErrorBoundry/ErrorBoundry\";\nimport { Index } from \"./Routes\";\n\nconst routing = (\n  <HashRouter>\n    <ErrorBoundry>\n      <Index />\n    </ErrorBoundry>\n  </HashRouter>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/virus.2d7d3b99.gif\";"],"sourceRoot":""}