{"version":3,"sources":["assets/github1.png","assets/india.png","assets/world.png","serviceWorker.js","ErrorBoundry.jsx","SimpleLineChart/SimpleLineChart.jsx","TinyChart.jsx","PieChart/CustomChart.jsx","IndiaMap/IndiaMap.jsx","India.js","Pagination.jsx","DataMap/DataMap.jsx","App.js","Routes.jsx","index.js","assets/virus.gif"],"names":["module","exports","Boolean","window","location","hostname","match","ErrorBoundary","props","state","hasError","error","errorInfo","console","this","className","style","display","justifyContent","href","children","React","Component","SimpleLineChart","data","undefined","name","uv","pv","amt","CustomTooltip","active","payload","label","background","padding","borderRadius","textAlign","fontWeight","color","map","item","index","key","value","filter","Chart","chart","Line","Bar","Type","LineChart","BarChart","height","width","strokeDasharray","hide","dataKey","axis","customTooltip","content","layout","legendLayout","margin","top","left","right","bottom","verticalAlign","labels","stackId","type","stroke","colors","fill","activeDot","r","dot","TinyChart","updateDimensions","setState","innerWidth","innerHeight","addEventListener","removeEventListener","strokeWidth","PureComponent","CustomChart","chartEvents","eventName","callback","chartWrapper","chartType","selectedItem","getChart","getSelection","onPlotClick","rows","row","setSelection","Object","values","columns","options","sliceVisibilityThreshold","headerHeight","backgroundColor","minColor","midColor","maxColor","chartArea","isStacked","legend","position","legendPosition","alignment","hAxis","title","textPosition","textColor","titleTextStyle","vAxis","minValue","generateTooltip","size","rootProps","onplot","INDIA_TOPO_JSON","require","PROJECTION_CONFIG","scale","center","COLOR_RANGE","geographyStyle","default","outline","hover","transition","pressed","IndiaMap","useState","tooltipContent","setTooltipContent","isClient","getSize","windowSize","setWindowSize","useEffect","handleResize","useWindowSize","colorScale","scaleLog","domain","range","onMouseEnter","geo","current","onMouseLeave","fontSize","confirmed","deltaconfirmed","recovered","deltarecovered","deaths","deltadeaths","projectionConfig","projection","Math","floor","data-tip","geography","geographies","find","s","statecode","id","rsmKey","India","chunkArray","array","result","arrayCopy","length","push","splice","searchString","currentPage","selectedCity","confirmedOpen","activeOpen","filterByCases","changeChart","displayBySort","deathsOpen","totalPages","activePage","selectedCountry","locationLoader","stateWiseCity","india","timelines","isTable","datasets","borderColor","borderWidth","data1","data2","data3","fetch","method","then","res","json","response","catch","confirmedTinyChartData","cases_time_series","cases","totalconfirmed","date","Number","activeTinyChartData","totaldeceased","totalrecovered","deathTinyChartData","recoveredTinyChartData","totalDataDaily","dailyrecovered","Confirmed","dailyconfirmed","Active","dailydeceased","Recovered","Deaths","totalData","dailyConfirmed","dailyActive","dailyRecovered","dailyDeaths","statewise","deltaConfirmed","deltaActive","deltaRecovered","deltaDeaths","Header","accessor","Cell","original","cityData","keys","city","districtData","cityColumns","totalConformedToday","record","totalRecoveredToday","totalDeathsToday","confirmedPopover","recoveredPopover","deathsPopover","sortable","pieChartData","sort","a","b","slice","colourStyles","control","styles","marginRight","marginBottom","option","isDisabled","isFocused","isSelected","cursor","overflowY","marginTop","paddingBottom","borderBottom","onClick","open","src","Github","alt","history","IndiaIcon","World","marginLeft","minHeight","body","preferPlace","isOpen","onOuterAction","ReactGA","event","category","action","paddingLeft","paddingTop","border","grid","isClearable","isSearchable","onChange","selectedOption","placeholder","emptyClassName","Virus","e","target","toLowerCase","includes","borderTopLeftRadius","borderTopRightRadius","defaultPageSize","noDataText","getTheadProps","rowInfo","column","getTdProps","instance","handleOriginal","filterable","SubComponent","showPagination","textDecoration","rel","withRouter","LEFT_PAGE","from","to","step","i","Pagination","gotoPage","page","onPageChanged","f","max","min","paginationData","pageLimit","totalRecords","handleClick","evt","preventDefault","handleMoveLeft","pageNeighbours","handleMoveRight","fetchPageNumbers","totalNumbers","startPage","endPage","pages","hasLeftSpill","hasRightSpill","spillOffset","extraPages","ceil","aria-label","aria-hidden","MapChart","mapFilter","rotate","d","Countrys","properties","ISO_A2","NAME_LONG","DeathsToday","deaths_today","ConfirmedToday","confirmed_today","NAME","App","renderCharts","_","chunk","changeState","showGlobalChartType","cards","globalTimelines","currentCardPage","totalCardPages","globalData","loadDefaultCards","isChart","header","renderCards","cardId","concat","caseType","reportDate","totalConfirmed","totalRecovered","total","Date","todayDate","getMonth","getDate","getFullYear","country","tests","totaltests","maxHeight","borderRight","flexDirection","borderBottomLeftRadius","borderBottomRightRadius","toUpperCase","defaultValue","DataMap","renderTooltipLabelColor","critical","timeline","index1","timelineitems","total_cases","total_deaths","total_recoveries","new_daily_cases","new_daily_deaths","countryitems","countrytimelinedata","info","total_recovered","NewConfirmed","total_new_cases_today","NewDeaths","total_new_deaths_today","createBrowserHistory","initialize","debug","set","pathname","hash","pageview","listen","Index","Fragment","path","component","routing","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1f462738.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github1.0ba2aa20.png\";","module.exports = __webpack_public_path__ + \"static/media/india.b9bb7cd7.png\";","module.exports = __webpack_public_path__ + \"static/media/world.5a35664b.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport \"./ErrorBoundry.css\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    console.error(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return (\n        <div>\n          <section className=\"page_404\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div\n                  className=\"col-sm-12\"\n                  style={{ display: \"flex\", justifyContent: \"center\" }}\n                >\n                  <div className=\"col-sm-10 col-sm-offset-1  text-center\">\n                    <div className=\"four_zero_four_bg\"></div>\n\n                    <div className=\"contant_box_404\">\n                      <h3 className=\"h2\">Look like you're lost</h3>\n\n                      <p>the page you are looking for not available!</p>\n\n                      <a\n                        href=\"https://miteshtagadiya.github.io/Covid-19-Global-Dashboard\"\n                        className=\"link_404\"\n                      >\n                        Go to Home\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from \"react\";\nimport {\n  LineChart,\n  BarChart,\n  Line,\n  Bar,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  CartesianGrid,\n} from \"recharts\";\nimport \"./SimpleLineChart.css\";\n\nconst SimpleLineChart = (props) => {\n  const data =\n    props.data === undefined\n      ? [\n          { name: \"Jan\", uv: 4000, pv: 2400, amt: 2400 },\n          { name: \"Feb\", uv: 3000, pv: 1398, amt: 2210 },\n          { name: \"March\", uv: 2000, pv: 9800, amt: 2290 },\n          { name: \"April\", uv: 2780, pv: 3908, amt: 2000 },\n          { name: \"May\", uv: 1890, pv: 4800, amt: 2181 },\n          { name: \"June\", uv: 2390, pv: 3800, amt: 2500 },\n          { name: \"July\", uv: 3490, pv: 4300, amt: 2100 },\n        ]\n      : props.data;\n\n  const getIntroOfPage = (label) => {\n    if (label === \"Page A\") {\n      return \"Page A is about men's clothing\";\n    }\n    if (label === \"Page B\") {\n      return \"Page B is about women's dress\";\n    }\n    if (label === \"Page C\") {\n      return \"Page C is about women's bag\";\n    }\n    if (label === \"Page D\") {\n      return \"Page D is about household goods\";\n    }\n    if (label === \"Page E\") {\n      return \"Page E is about food\";\n    }\n    if (label === \"Page F\") {\n      return \"Page F is about baby food\";\n    }\n  };\n\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active) {\n      return (\n        <div\n          className=\"custom-tooltip\"\n          style={{ background: \"white\", padding: 15, borderRadius: 10 }}\n        >\n          <p\n            style={{\n              textAlign: \"center\",\n              fontWeight: \"bold\",\n              color: \"#404b69\",\n            }}\n          >\n            {label}\n          </p>\n          {typeof payload !== \"undefined\" &&\n            payload !== null &&\n            payload.map((item, index) => {\n              return (\n                <div key={index}>\n                  <span style={{ color: item.color, fontWeight: \"bold\" }}>\n                    {item.name}:{\" \"}\n                  </span>\n                  <span style={{ color: item.color, fontWeight: \"bold\" }}>\n                    {item.value}\n                    {typeof props.data.filter(\n                      (data) => data?.name === item.payload.name\n                    )[0][`daily${item.name}`] === \"undefined\"\n                      ? null\n                      : \" [+\"}\n                    {\n                      props.data.filter(\n                        (data) => data?.name === item.payload.name\n                      )[0][`daily${item.name}`]\n                    }\n                    {/* {props.data[payload.payload.name][`daily${payload.name}`]} */}\n                    {typeof props.data.filter(\n                      (data) => data?.name === item.payload.name\n                    )[0][`daily${item.name}`] === \"undefined\"\n                      ? null\n                      : \"]\"}\n                  </span>\n                  <br />\n                </div>\n              );\n            })}\n        </div>\n      );\n    }\n\n    return null;\n  };\n\n  let Chart = props.chart ? (props.chart === \"LineChart\" ? Line : Bar) : Line;\n  let Type = props.chart\n    ? props.chart === \"LineChart\"\n      ? LineChart\n      : BarChart\n    : LineChart;\n  return (\n    <div\n      className=\"container-Linechart\"\n      style={props.height ? { height: props.height } : { height: 270 }}\n    >\n      <ResponsiveContainer>\n        <Type\n          width={500}\n          height={100}\n          data={data}\n\n          //   data={data}\n          //   margin={{\n          //     top: 5,\n          //     right: 30,\n          //     left: 20,\n          //     bottom: 5\n          //   }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n\n          <XAxis hide={false} dataKey={props.axis ? props.axis : \"name\"} />\n\n          <YAxis />\n          {props.customTooltip ? (\n            <Tooltip content={<CustomTooltip />} />\n          ) : (\n            <Tooltip />\n          )}\n          <Legend\n            layout={props.legendLayout ? props.legendLayout : \"horizontal\"}\n            margin={{ top: 0, left: 0, right: 0, bottom: 10 }}\n            verticalAlign={props.verticalAlign ? props.verticalAlign : \"bottom\"}\n          />\n          {props.labels.map((label, index) =>\n            props.chart === \"BarChart\" ? (\n              <Chart\n                key={index}\n                stackId={\"a\"}\n                type=\"monotone\"\n                dataKey={label}\n                stroke={props.colors[index]}\n                fill={props.colors[index]}\n              />\n            ) : (\n              <Chart\n                key={index}\n                stackId={\"a\"}\n                type=\"monotone\"\n                dataKey={label}\n                stroke={props.colors[index]}\n                activeDot={{ r: 8 }}\n                fill={props.colors[index]}\n                dot={false}\n              />\n            )\n          )}\n        </Type>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default SimpleLineChart;\n","import React, { PureComponent } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\n\nconst data = [\n  {\n    name: \"Page A\",\n    uv: 4000,\n    pv: 2400,\n    amt: 2400,\n  },\n  {\n    name: \"Page B\",\n    uv: 3000,\n    pv: 1398,\n    amt: 2210,\n  },\n  {\n    name: \"Page C\",\n    uv: 2000,\n    pv: 9800,\n    amt: 2290,\n  },\n  {\n    name: \"Page D\",\n    uv: 2780,\n    pv: 3908,\n    amt: 2000,\n  },\n  {\n    name: \"Page E\",\n    uv: 1890,\n    pv: 4800,\n    amt: 2181,\n  },\n  {\n    name: \"Page F\",\n    uv: 2390,\n    pv: 3800,\n    amt: 2500,\n  },\n  {\n    name: \"Page G\",\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n];\n\nexport default class TinyChart extends PureComponent {\n  state = { width: 0, height: 0 };\n\n  updateDimensions = () => {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  };\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  render() {\n    return (\n      <LineChart\n        width={this.state.width < 1439 ? 100 : 250}\n        height={this.state.width < 250 ? 30 : 50}\n        data={this.props.data}\n      >\n        <Line\n          type=\"monotone\"\n          dataKey={this.props.label}\n          stroke={this.props.color}\n          strokeWidth={2}\n          dot={false}\n        />\n      </LineChart>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { Chart } from \"react-google-charts\";\nimport \"./CustomChart.css\";\n\nconst CustomChart = (props) => {\n  const chartEvents = [\n    {\n      eventName: \"select\",\n      callback({ chartWrapper }) {\n        if (props.chartType === \"TreeMap\") {\n          let selectedItem = chartWrapper.getChart().getSelection()[0];\n          props.onPlotClick(props.rows[selectedItem.row]);\n          //console.log(props.rows[(Object.values(selectedItem[0]))])\n          chartWrapper.getChart().setSelection([]);\n        } else {\n          var selectedItem = chartWrapper.getChart().getSelection()[0];\n          if (selectedItem) {\n            // console.log(\n            //   \"The user selected \" +\n            //     Object.values(selectedItem) +\n            //     props.rows[Object.values(selectedItem)[0]][0]\n            // );\n            props.onPlotClick(props.rows[Object.values(selectedItem)[0]][0]);\n          }\n        }\n      },\n    },\n  ];\n  return (\n    <Chart\n      className=\"custom-charts\"\n      //      width={\"500px\"}\n      height={props.height ? props.height : \"300px\"}\n      width={props.width ? props.width : \"auto\"}\n      //width={props.width ? props.width : \"100%\"}\n      chartType={props.chartType ? props.chartType : \"Bar\"}\n      //loader={<Skeleton active paragraph={{ rows: 1 }} />}\n      // data={props.data ? props.data :[\n      //   [\"Year\", \"Sales\", \"Expenses\"],\n      //   [\"2013\", 1000, 400],\n      //   [\"2014\", null, 460],\n      //   [\"2015\", 660, 1120],\n      //   [\"2016\", 1030, 540]\n      // ]}\n      rows={props.rows}\n      columns={props.columns}\n      options={{\n        sliceVisibilityThreshold: 0,\n        headerHeight: 0,\n        backgroundColor: \"transparent\",\n        colors: [\n          \"#262b2f\",\n          \"#214559\",\n          \"#00626f\",\n          \"#00022e\",\n          \"#2b6867\",\n          \"#29304e\",\n          \"#000133\",\n          \"#000133\",\n          \"#11887b\",\n          \"#044a05\",\n          \"#004953\",\n          \"#062e03\",\n          \"#7f4330\",\n          \"#420303\",\n          \"#980036\",\n          \"#9c004a\",\n          \"#490648\",\n          \"#76424e\",\n          \"#36013f\",\n          \"#36013f\",\n          \"#333333\",\n          \"#25342b\",\n          \"#171717\",\n        ],\n        minColor: \"#A7A0B3\",\n        midColor: \"#88E3CA\",\n        maxColor: \"#E0AEF6\",\n        chartArea: props.chartArea\n          ? props.chartArea\n          : { left: 0, top: 10, right: 0 },\n        //height: props.height ? props.height : 300,\n\n        //width: props.width ? props.width : \"100%\",\n        // title: \"Company Performance\",\n        isStacked: props.isStacked === true ? true : false,\n        legend: props.legend\n          ? { position: \"none\" }\n          : props.legendPosition\n          ? props.legendPosition\n          : {\n              position: \"right\",\n              alignment: \"center\",\n            },\n        hAxis: props.hAxis\n          ? {\n              title: \"\",\n              textPosition: \"none\",\n              textColor: \"#ffffff\",\n            }\n          : { title: props.title, titleTextStyle: { color: \"#333\" } },\n        vAxis: props.vAxis\n          ? {\n              textPosition: \"none\",\n            }\n          : { minValue: 0 },\n        generateTooltip:\n          props.generateTooltip === true\n            ? (row, size, value) => {\n                return (\n                  '<div style=\"background:#fff; padding:5px 10px 5px 10px; border:1px solid grey\"><b>' +\n                  props.rows[row][0] +\n                  \"</b> : \" +\n                  size +\n                  \"</div>\"\n                );\n              }\n            : null,\n        // For the legend to fit, we make the chart area smaller\n        //chartArea: { width: \"50%\", height: \"70%\" }\n        // lineWidth: 25\n      }}\n      // For tests\n      rootProps={{ \"data-testid\": \"2\" }}\n      chartEvents={props.onplot === true ? chartEvents : null}\n    />\n  );\n};\nexport default CustomChart;\n","import React, { useState } from \"react\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport { scaleLog } from \"d3-scale\";\nimport ReactTooltip from \"react-tooltip\";\nimport \"./indiaMap.css\";\nimport { useEffect } from \"react\";\n\nconst INDIA_TOPO_JSON = require(\"./india.topo.json\");\n\nconst PROJECTION_CONFIG = {\n  scale: 350,\n  center: [78.9629, 22.5937], // always in [East Latitude, North Longitude]\n};\n\n// Red Variants\nconst COLOR_RANGE = [\"#ffedea\", \"#ffcec5\", \"#ffad9f\"];\n\nconst DEFAULT_COLOR = \"#EEE\";\n\nconst geographyStyle = {\n  default: {\n    outline: \"none\",\n  },\n  hover: {\n    fill: \"#F53\",\n    transition: \"all 250ms\",\n    outline: \"none\",\n  },\n  pressed: {\n    outline: \"none\",\n  },\n};\n\nfunction useWindowSize() {\n  const isClient = typeof window === \"object\";\n\n  function getSize() {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined,\n    };\n  }\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    if (!isClient) {\n      return false;\n    }\n\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowSize;\n}\n\nconst IndiaMap = ({ data }) => {\n  const [tooltipContent, setTooltipContent] = useState(\"\");\n  const size = useWindowSize();\n\n  const colorScale = scaleLog().domain([1, 10]).range(COLOR_RANGE);\n\n  const onMouseEnter = (geo, current = { value: \"NA\" }) => {\n    return () => {\n      setTooltipContent(current);\n    };\n  };\n\n  const onMouseLeave = () => {\n    setTooltipContent(\"\");\n  };\n\n  return (\n    <div className=\"indiamap\">\n      {tooltipContent !== \"\" ? (\n        <ReactTooltip>\n          <div>\n            <span\n              style={{\n                fontWeight: \"bold\",\n                fontSize: 16,\n                color: \"rgb(64, 75, 105)\",\n              }}\n            >\n              {tooltipContent.state}\n            </span>\n            <br />\n            <span\n              style={{\n                fontWeight: \"bold\",\n                fontSize: 16,\n                color: \"rgb(228, 51, 57)\",\n              }}\n            >\n              {\"Confirmed: \"}\n              {tooltipContent.confirmed}{\" \"}\n              {tooltipContent.deltaconfirmed !== \"0\" ? (\n                <span style={{ fontSize: 17, fontWeight: \"bold\" }}>\n                  &#9650; {tooltipContent.deltaconfirmed}\n                </span>\n              ) : null}\n            </span>\n            <br />\n            <span\n              style={{\n                fontWeight: \"bold\",\n                fontSize: 16,\n                color: \"rgb(25, 42, 86)\",\n              }}\n            >\n              {\"Active: \"}\n              {tooltipContent.active}\n            </span>\n            <br />\n            <span\n              style={{\n                fontWeight: \"bold\",\n                fontSize: 16,\n                color: \"rgb(0, 98, 102)\",\n              }}\n            >\n              {\"Recovered: \"}\n              {tooltipContent.recovered}\n              {tooltipContent.deltaconfirmed !== \"0\" ? (\n                <span style={{ fontSize: 17, fontWeight: \"bold\" }}>\n                  &#9650; {tooltipContent.deltarecovered}\n                </span>\n              ) : null}\n            </span>\n            <br />\n            <span\n              style={{\n                fontWeight: \"bold\",\n                fontSize: 16,\n                color: \"rgb(83, 92, 104)\",\n              }}\n            >\n              {\"Deaths: \"}\n              {tooltipContent.deaths}\n              {tooltipContent.deltaconfirmed !== \"0\" ? (\n                <span style={{ fontSize: 17, fontWeight: \"bold\" }}>\n                  &#9650; {tooltipContent.deltadeaths}\n                </span>\n              ) : null}\n            </span>\n            <br />\n          </div>\n        </ReactTooltip>\n      ) : null}\n      <ComposableMap\n        projectionConfig={PROJECTION_CONFIG}\n        projection=\"geoMercator\"\n        height={\n          size.width < 1500 && size.width > 768\n            ? 200\n            : size.width <= 768 && size.width > 400\n            ? 150\n            : size.width <= 400\n            ? 120\n            : Math.floor(size.width / 10)\n        }\n        width={\n          size.width < 1500 && size.width > 768\n            ? 500\n            : size.width <= 768 && size.width > 400\n            ? 300\n            : size.width <= 400\n            ? 220\n            : Math.floor(size.width / 5)\n        }\n        data-tip=\"\"\n      >\n        <Geographies geography={INDIA_TOPO_JSON}>\n          {({ geographies }) =>\n            geographies.map((geo) => {\n              const current = data.find((s) => s.statecode === geo.id);\n              return (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  fill={current ? colorScale(current.active) : DEFAULT_COLOR}\n                  style={geographyStyle}\n                  onMouseEnter={onMouseEnter(geo, current)}\n                  onMouseLeave={onMouseLeave}\n                />\n              );\n            })\n          }\n        </Geographies>\n      </ComposableMap>\n    </div>\n  );\n};\n\nexport default IndiaMap;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport ReactTable from \"react-table-6\";\nimport SimpleLineChart from \"./SimpleLineChart/SimpleLineChart\";\nimport \"react-table-6/react-table.css\";\nimport Github from \"./assets/github1.png\";\nimport TinyChart from \"./TinyChart\";\nimport IndiaIcon from \"./assets/india.png\";\nimport World from \"./assets/world.png\";\nimport { withRouter } from \"react-router-dom\";\nimport Virus from \"./assets/virus.gif\";\nimport Popover from \"react-popover\";\nimport ErrorBoundary from \"./ErrorBoundry\";\nimport Select from \"react-select\";\nimport ReactGA from \"react-ga\";\nimport CustomChart from \"./PieChart/CustomChart\";\nimport IndiaMap from \"./IndiaMap/IndiaMap\";\n\nclass India extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchString: \"\",\n      currentPage: 0,\n      width: 0,\n      height: 0,\n      selectedCity: \"\",\n      confirmedOpen: false,\n      activeOpen: false,\n      filterByCases: \"confirmed\",\n      changeChart: \"cumulative\",\n      displayBySort: \"All\",\n      deathsOpen: false,\n      totalPages: 0,\n      activePage: 0,\n      selectedCountry: false,\n      locationLoader: false,\n      data: [],\n      stateWiseCity: [],\n      india: [],\n      timelines: [],\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\"],\n      isTable: 0,\n      datasets: [\n        {\n          label: \"Rainfall\",\n          backgroundColor: \"rgba(75,192,192,1)\",\n          borderColor: \"rgba(0,0,0,1)\",\n          borderWidth: 2,\n          data: [65, 59, 80, 81, 56],\n          data1: [65, 59, 80, 81, 56],\n          data2: [65, 59, 80, 81, 56],\n          data3: [65, 59, 80, 81, 56],\n        },\n      ],\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n\n    window.addEventListener(\"focus\", () => {\n      fetch(`https://api.covid19india.org/data.json`, {\n        method: \"GET\",\n      })\n        .then((res) => res.json())\n        .then((response) => {\n          this.setState({\n            india: response,\n            locationLoader: false,\n          });\n        })\n        .catch((error) => {\n          this.setState({\n            locationLoader: false,\n          });\n        });\n      fetch(\"https://api.covid19india.org/state_district_wise.json\", {\n        method: \"GET\",\n      })\n        .then((res) => res.json())\n        .then((response) => {\n          this.setState({\n            stateWiseCity: response,\n          });\n        })\n        .catch((error) => {});\n    });\n\n    this.setState({\n      locationLoader: true,\n    });\n    fetch(`https://api.covid19india.org/data.json`, {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        this.setState({\n          india: response,\n          locationLoader: false,\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          locationLoader: false,\n        });\n      });\n\n    fetch(\"https://api.covid19india.org/state_district_wise.json\", {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        this.setState({\n          stateWiseCity: response,\n        });\n      })\n      .catch((error) => {});\n  }\n\n  chunkArray = (array, size) => {\n    let result = [];\n    let arrayCopy = [...array];\n    while (arrayCopy.length > 0) {\n      result.push(arrayCopy.splice(0, size));\n    }\n    return result;\n  };\n\n  updateDimensions = () => {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  render() {\n    let confirmedTinyChartData =\n      this.state.india.length !== 0\n        ? this.state.india.cases_time_series.map((cases) => {\n            return cases.totalconfirmed !== \"\"\n              ? {\n                  name: cases.date,\n                  confirmed: Number(cases.totalconfirmed),\n                }\n              : null;\n          })\n        : null;\n\n    let activeTinyChartData =\n      this.state.india.length !== 0\n        ? this.state.india.cases_time_series.map((cases) => {\n            return cases.totalconfirmed !== \"\"\n              ? {\n                  name: cases.date,\n                  confirmed:\n                    Number(cases.totalconfirmed) -\n                    Number(cases.totaldeceased) -\n                    Number(cases.totalrecovered),\n                }\n              : null;\n          })\n        : null;\n    let deathTinyChartData =\n      this.state.india.length !== 0\n        ? this.state.india.cases_time_series.map((cases) => {\n            return cases.totaldeceased !== \"\"\n              ? {\n                  name: cases.date,\n                  confirmed: Number(cases.totaldeceased),\n                }\n              : null;\n          })\n        : null;\n    let recoveredTinyChartData =\n      this.state.india.length !== 0\n        ? this.state.india.cases_time_series.map((cases) => {\n            return cases.totalrecovered !== \"\"\n              ? {\n                  name: cases.date,\n                  confirmed: Number(cases.totalrecovered),\n                }\n              : null;\n          })\n        : null;\n\n    let totalDataDaily =\n      this.state.india.length !== 0\n        ? this.state.india.cases_time_series.map((cases) => {\n            return cases.dailyrecovered !== \"\"\n              ? {\n                  name: cases.date,\n                  Confirmed: Number(cases.dailyconfirmed),\n                  Active:\n                    Number(cases.dailyconfirmed) -\n                    Number(cases.dailyrecovered) -\n                    Number(cases.dailydeceased),\n                  Recovered: Number(cases.dailyrecovered),\n                  Deaths: Number(cases.dailydeceased),\n                }\n              : null;\n          })\n        : null;\n\n    let totalData =\n      this.state.india.length !== 0\n        ? this.state.india.cases_time_series.map((cases) => {\n            return cases.totalrecovered !== \"\"\n              ? {\n                  name: cases.date,\n                  Confirmed: Number(cases.totalconfirmed),\n                  Active:\n                    Number(cases.totalconfirmed) -\n                    Number(cases.totalrecovered) -\n                    Number(cases.totaldeceased),\n                  Recovered: Number(cases.totalrecovered),\n                  Deaths: Number(cases.totaldeceased),\n                  dailyConfirmed: Number(cases.dailyconfirmed),\n                  dailyActive:\n                    Number(cases.dailyconfirmed) -\n                    Number(cases.dailyrecovered) -\n                    Number(cases.dailydeceased),\n                  dailyRecovered: Number(cases.dailyrecovered),\n                  dailyDeaths: Number(cases.dailydeceased),\n                }\n              : null;\n          })\n        : null;\n\n    const data =\n      this.state.india.length !== 0\n        ? this.state.india.statewise\n            .filter((state) => state.state !== \"Total\")\n            .map((state) => {\n              return {\n                state: state.state,\n                confirmed: Number(state.confirmed),\n                active: Number(state.active),\n                recovered: Number(state.recovered),\n                deaths: Number(state.deaths),\n                deltaConfirmed: Number(state.deltaconfirmed),\n                deltaActive: Number(\n                  state.deltaconfirmed -\n                    state.deltarecovered -\n                    state.deltadeaths\n                ),\n                deltaRecovered: Number(state.deltarecovered),\n                deltaDeaths: Number(state.deltadeaths),\n              };\n            })\n        : [];\n\n    const columns =\n      this.state.india.length !== 0\n        ? [\n            {\n              Header: \"State/UT\",\n              accessor: \"state\", // String-based value accessors!\n            },\n            {\n              Header: \"Confirmed\",\n              accessor: \"confirmed\",\n              Cell: (props) => {\n                return (\n                  <>\n                    {props.original.deltaConfirmed === 0 ? null : (\n                      <span\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"bold\",\n                          color: \"#e43339\",\n                        }}\n                      >\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\n                          &#9650;\n                        </span>\n                        {props.original.deltaConfirmed}\n                      </span>\n                    )}{\" \"}\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n            {\n              Header: \"Active\",\n              accessor: \"active\",\n              Cell: (props) => {\n                return (\n                  <>\n                    {props.original.deltaActive === 0 ? null : (\n                      <span\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"bold\",\n                          color: \"#192a56\",\n                        }}\n                      >\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\n                          &#9650;\n                        </span>\n                        {props.original.deltaActive}\n                      </span>\n                    )}{\" \"}\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n            {\n              Header: \"Recovered\",\n              accessor: \"recovered\",\n              Cell: (props) => {\n                return (\n                  <>\n                    {props.original.deltaRecovered === 0 ? null : (\n                      <span\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"bold\",\n                          color: \"#006266\",\n                        }}\n                      >\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\n                          &#9650;\n                        </span>\n                        {props.original.deltaRecovered}\n                      </span>\n                    )}{\" \"}\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n            {\n              Header: \"Deaths\",\n              accessor: \"deaths\",\n              Cell: (props) => {\n                return (\n                  <>\n                    {props.original.deltaDeaths === 0 ? null : (\n                      <span\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"bold\",\n                          color: \"#535c68\",\n                        }}\n                      >\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\n                          &#9650;\n                        </span>\n                        {props.original.deltaDeaths}\n                      </span>\n                    )}{\" \"}\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n          ]\n        : [];\n\n    const cityData =\n      this.state.stateWiseCity.length !== 0\n        ? Object.keys(this.state.stateWiseCity).map((city) => {\n            return {\n              [city]: Object.keys(\n                this.state.stateWiseCity[city].districtData\n              ).map((key) => {\n                return {\n                  city: key,\n                  confirmed: this.state.stateWiseCity[city].districtData[key]\n                    .confirmed,\n                  active: this.state.stateWiseCity[city].districtData[key]\n                    .active,\n                  recovered: this.state.stateWiseCity[city].districtData[key]\n                    .recovered,\n                  deaths: this.state.stateWiseCity[city].districtData[key]\n                    .deaths,\n                };\n              }),\n            };\n          })\n        : [];\n\n    const cityColumns =\n      this.state.india.length !== 0\n        ? [\n            {\n              Header: \"District\",\n              accessor: \"city\", // String-based value accessors!\n            },\n            {\n              Header: \"Confirmed\",\n              accessor: \"confirmed\",\n            },\n            {\n              Header: \"Active\",\n              accessor: \"active\",\n            },\n            {\n              Header: \"Recovered\",\n              accessor: \"recovered\",\n            },\n            {\n              Header: \"Deaths\",\n              accessor: \"deaths\",\n            },\n          ]\n        : [];\n\n    const totalConformedToday =\n      this.state.india.length !== 0\n        ? this.state.india.statewise.filter(\n            (record) => record.state === \"Total\"\n          )[0].deltaconfirmed\n        : 0;\n\n    const totalRecoveredToday =\n      this.state.india.length !== 0\n        ? this.state.india.statewise.filter(\n            (record) => record.state === \"Total\"\n          )[0].deltarecovered\n        : 0;\n\n    const totalDeathsToday =\n      this.state.india.length !== 0\n        ? this.state.india.statewise.filter(\n            (record) => record.state === \"Total\"\n          )[0].deltadeaths\n        : 0;\n\n    const confirmedPopover =\n      this.state.india.length !== 0\n        ? this.state.india.statewise\n            .filter((record) => record.state !== \"Total\")\n            .filter((state) => Number(state.deltaconfirmed) !== 0)\n            .map((state) => {\n              return { [state.state]: state.deltaconfirmed };\n            })\n        : [];\n\n    const recoveredPopover =\n      this.state.india.length !== 0\n        ? this.state.india.statewise\n            .filter((record) => record.state !== \"Total\")\n            .filter((state) => Number(state.deltarecovered) !== 0)\n            .map((state) => {\n              return { [state.state]: Number(state.deltarecovered) };\n            })\n        : [];\n    const deathsPopover =\n      this.state.india.length !== 0\n        ? this.state.india.statewise\n            .filter((record) => record.state !== \"Total\")\n            .filter((state) => Number(state.deltadeaths) !== 0)\n            .map((state) => {\n              return { [state.state]: Number(state.deltadeaths) };\n            })\n        : [];\n\n    var sortable =\n      this.state.india.length !== 0 ? this.state.india.statewise : [];\n\n    const Comparator = (a, b) => {\n      if (Number(a[1]) > Number(b[1])) return -1;\n      if (Number(a[1]) < Number(b[1])) return 1;\n      return 0;\n    };\n\n    var pieChartData =\n      this.state.india.length !== 0\n        ? sortable\n            .filter((record) => record.state !== \"Total\")\n            .map((state) => {\n              return [state.state, Number(state[this.state.filterByCases])];\n            })\n        : [];\n\n    if (this.state.displayBySort !== \"All\") {\n      pieChartData = pieChartData.sort(Comparator).slice(0, 10);\n    }\n\n    let Columns = [\n      { type: \"string\", label: \"name\" },\n      { type: \"number\", label: \"value\" },\n    ];\n\n    const colourStyles = {\n      control: (styles) => ({\n        ...styles,\n        backgroundColor: \"white\",\n        marginRight: 15,\n        marginBottom: 15,\n      }),\n      option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n        return {\n          ...styles,\n          backgroundColor: isDisabled\n            ? null\n            : isSelected\n            ? \"#404b69\"\n            : isFocused\n            ? \"#ffffff\"\n            : null,\n          color: isDisabled ? \"#ccc\" : isSelected ? \"white\" : \"#404b69\",\n          cursor: isDisabled ? \"not-allowed\" : \"default\",\n\n          \":active\": {\n            ...styles[\":active\"],\n            backgroundColor: !isDisabled && (isSelected ? \"#404b69\" : \"white\"),\n          },\n        };\n      },\n    };\n\n    return (\n      <ErrorBoundary>\n        <div\n          className=\"App\"\n          style={{\n            background: \"#172852\",\n            color: \"white\",\n            height: \"100vh\",\n            overflowY: \"scroll\",\n          }}\n        >\n          <div className=\"container\">\n            <div>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  fontSize: \"2.1em\",\n                  fontWeight: \"bold\",\n                  marginTop: 30,\n                  paddingBottom: 30,\n                  borderBottom: \"2px solid white\",\n                }}\n              >\n                Covid-19 India {this.state.width < 1024 ? \"\" : \"Dashboard\"}\n                <img\n                  onClick={() =>\n                    window.open(\n                      \"https://github.com/miteshtagadiya/Covid-19-Global-Dashboard\",\n                      \"_blank\"\n                    )\n                  }\n                  src={Github}\n                  alt=\"github\"\n                  style={{ height: 50, width: 50, cursor: \"pointer\" }}\n                />\n              </div>\n              <div style={{ padding: 15 }}>\n                <img\n                  onClick={() => {\n                    this.props.history.push(\"/india\");\n                  }}\n                  src={IndiaIcon}\n                  alt=\"India\"\n                  style={{ height: 50, width: 70, cursor: \"pointer\" }}\n                />\n                <span style={{ fontWeight: \"bold\" }}>Switch</span>\n                <img\n                  onClick={() => this.props.history.push(\"/\")}\n                  src={World}\n                  alt=\"World\"\n                  style={{\n                    marginLeft: 15,\n                    height: 50,\n                    width: 50,\n                    cursor: \"pointer\",\n                  }}\n                />\n              </div>\n            </div>\n            <div style={{ minHeight: \"90vh\" }}>\n              <div className=\"row\" style={{ padding: \"10px 0px 30px 0px\" }}>\n                <div className=\"col-sm-3 col-6\" style={{ padding: 15 }}>\n                  <div\n                    style={{\n                      padding: 20,\n                      fontWeight: \"bold\",\n                      background: \"#448AFF\",\n                      color: \"white\",\n                      borderRadius: 10,\n                    }}\n                  >\n                    <div style={{ fontSize: 30 }}>\n                      {this.state.india.length !== 0\n                        ? this.state.india.statewise.filter(\n                            (record) => record.state === \"Total\"\n                          )[0].confirmed\n                        : 0}\n                    </div>\n                    <div\n                      style={{\n                        fontSize: 15,\n                        marginBottom: 10,\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      <span style={{ fontSize: 17, fontWeight: \"bold\" }}>\n                        &#9650;\n                      </span>\n                      {this.state.india.length !== 0\n                        ? typeof this.state.india.statewise.filter(\n                            (record) => record.state === \"Total\"\n                          )[0].deltaconfirmed !== \"undefined\" &&\n                          this.state.india.statewise.filter(\n                            (record) => record.state === \"Total\"\n                          )[0].deltaconfirmed !== null\n                          ? this.state.india.statewise.filter(\n                              (record) => record.state === \"Total\"\n                            )[0].deltaconfirmed\n                          : 0\n                        : 0}\n                      {Number(totalConformedToday) !== 0 ? (\n                        <Popover\n                          body={\n                            <div\n                              style={{\n                                background: \"white\",\n                                borderRadius: 10,\n                                padding: 15,\n                                color: \"#192a56\",\n                                fontWeight: \"bold\",\n                              }}\n                            >\n                              {confirmedPopover.map((state, index) => {\n                                return (\n                                  <div key={index}>\n                                    {Object.keys(state)[0]}:{\" \"}\n                                    {Object.values(state)[0]}\n                                  </div>\n                                );\n                              })}\n                            </div>\n                          }\n                          preferPlace={\"below\"}\n                          isOpen={this.state.confirmedOpen}\n                          onOuterAction={() =>\n                            this.setState({\n                              confirmedOpen: !this.state.confirmedOpen,\n                            })\n                          }\n                        >\n                          <div\n                            onClick={() => {\n                              ReactGA.event({\n                                category: \"India Info\",\n                                action: \"Confirmed Info Clicked\",\n                                label: \"Confirm Info\",\n                              });\n                              this.setState({\n                                confirmedOpen: !this.state.confirmedOpen,\n                              });\n                            }}\n                            className=\"report-tile\"\n                            style={{ marginLeft: 5, cursor: \"pointer\" }}\n                          >\n                            ?\n                          </div>\n                        </Popover>\n                      ) : null}\n                    </div>\n                    <div style={{ fontSize: 18 }}>Confirmed</div>\n                    {this.state.india.length !== 0 ? (\n                      <div\n                        style={{ display: \"flex\", justifyContent: \"center\" }}\n                      >\n                        <TinyChart\n                          data={confirmedTinyChartData}\n                          label=\"confirmed\"\n                          color=\"#ffffff\"\n                        />\n                      </div>\n                    ) : null}\n                  </div>\n                </div>\n                <div className=\"col-sm-3 col-6\" style={{ padding: 15 }}>\n                  <div\n                    style={{\n                      padding: 20,\n                      fontWeight: \"bold\",\n                      background: \"#F9A825\",\n                      color: \"#ffffff\",\n                      borderRadius: 10,\n                    }}\n                  >\n                    <div style={{ fontSize: 30, marginBottom: 35 }}>\n                      {this.state.india.length !== 0\n                        ? this.state.india.statewise.filter(\n                            (record) => record.state === \"Total\"\n                          )[0].active\n                        : 0}\n                    </div>\n\n                    <div style={{ fontSize: 18 }}>Active</div>\n                    {this.state.india.length !== 0 ? (\n                      <div\n                        style={{ display: \"flex\", justifyContent: \"center\" }}\n                      >\n                        <TinyChart\n                          data={activeTinyChartData}\n                          label=\"confirmed\"\n                          color=\"#ffffff\"\n                        />\n                      </div>\n                    ) : null}\n                  </div>\n                </div>\n                <div className=\"col-sm-3 col-6\" style={{ padding: 15 }}>\n                  <div\n                    style={{\n                      padding: 20,\n                      fontWeight: \"bold\",\n                      background: \"#4CAF50\",\n                      color: \"#ffffff\",\n                      borderRadius: 10,\n                    }}\n                  >\n                    <div style={{ fontSize: 30 }}>\n                      {this.state.india.length !== 0\n                        ? this.state.india.statewise.filter(\n                            (record) => record.state === \"Total\"\n                          )[0].recovered\n                        : 0}\n                    </div>\n                    <div\n                      style={{\n                        fontSize: 15,\n                        marginBottom: 10,\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      <span style={{ fontSize: 17, fontWeight: \"bold\" }}>\n                        &#9650;\n                      </span>\n                      {this.state.india.length !== 0\n                        ? typeof this.state.india.statewise.filter(\n                            (record) => record.state === \"Total\"\n                          )[0].deltarecovered !== \"undefined\" &&\n                          this.state.india.statewise.filter(\n                            (record) => record.state === \"Total\"\n                          )[0].deltarecovered !== null\n                          ? this.state.india.statewise.filter(\n                              (record) => record.state === \"Total\"\n                            )[0].deltarecovered\n                          : 0\n                        : 0}\n                      {Number(totalRecoveredToday) !== 0 ? (\n                        <Popover\n                          body={\n                            <div\n                              style={{\n                                background: \"white\",\n                                borderRadius: 10,\n                                padding: 15,\n                                color: \"#192a56\",\n                                fontWeight: \"bold\",\n                              }}\n                            >\n                              {recoveredPopover.map((state, index) => {\n                                return (\n                                  <div key={index}>\n                                    {Object.keys(state)[0]}:{\" \"}\n                                    {Object.values(state)[0]}\n                                  </div>\n                                );\n                              })}\n                            </div>\n                          }\n                          preferPlace={\"below\"}\n                          isOpen={this.state.activeOpen}\n                          onOuterAction={() =>\n                            this.setState({\n                              activeOpen: !this.state.activeOpen,\n                            })\n                          }\n                        >\n                          <div\n                            onClick={() => {\n                              ReactGA.event({\n                                category: \"India Info\",\n                                action: \"Active Info Clicked\",\n                                label: \"Active Info\",\n                              });\n                              this.setState({\n                                activeOpen: !this.state.activeOpen,\n                              });\n                            }}\n                            className=\"report-tile\"\n                            style={{ marginLeft: 5, cursor: \"pointer\" }}\n                          >\n                            ?\n                          </div>\n                        </Popover>\n                      ) : null}\n                    </div>\n                    <div style={{ fontSize: 18 }}>Recovered</div>\n                    {this.state.india.length !== 0 ? (\n                      <div\n                        style={{ display: \"flex\", justifyContent: \"center\" }}\n                      >\n                        <TinyChart\n                          data={recoveredTinyChartData}\n                          label=\"confirmed\"\n                          color=\"#ffffff\"\n                        />\n                      </div>\n                    ) : null}\n                  </div>\n                </div>\n                <div className=\"col-sm-3 col-6\" style={{ padding: 15 }}>\n                  <div\n                    style={{\n                      padding: 20,\n                      fontWeight: \"bold\",\n                      background: \"#FF5252\",\n                      color: \"#ffffff\",\n                      borderRadius: 10,\n                    }}\n                  >\n                    <div style={{ fontSize: 30 }}>\n                      {this.state.india.length !== 0\n                        ? this.state.india.statewise.filter(\n                            (record) => record.state === \"Total\"\n                          )[0].deaths\n                        : 0}\n                    </div>\n                    <div\n                      style={{\n                        fontSize: 15,\n                        marginBottom: 10,\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      <span style={{ fontSize: 17, fontWeight: \"bold\" }}>\n                        &#9650;\n                      </span>\n                      {this.state.india.length !== 0\n                        ? typeof this.state.india.statewise.filter(\n                            (record) => record.state === \"Total\"\n                          )[0].deltadeaths !== \"undefined\" &&\n                          this.state.india.statewise.filter(\n                            (record) => record.state === \"Total\"\n                          )[0].deltadeaths !== null\n                          ? this.state.india.statewise.filter(\n                              (record) => record.state === \"Total\"\n                            )[0].deltadeaths\n                          : 0\n                        : 0}\n                      {Number(totalDeathsToday) !== 0 ? (\n                        <Popover\n                          body={\n                            <div\n                              style={{\n                                background: \"white\",\n                                borderRadius: 10,\n                                padding: 15,\n                                color: \"#192a56\",\n                                fontWeight: \"bold\",\n                              }}\n                            >\n                              {deathsPopover.map((state, index) => {\n                                return (\n                                  <div key={index}>\n                                    {Object.keys(state)[0]}:{\" \"}\n                                    {Object.values(state)[0]}\n                                  </div>\n                                );\n                              })}\n                            </div>\n                          }\n                          preferPlace={\"below\"}\n                          isOpen={this.state.deathsOpen}\n                          onOuterAction={() =>\n                            this.setState({\n                              deathsOpen: !this.state.deathsOpen,\n                            })\n                          }\n                        >\n                          <div\n                            onClick={() => {\n                              ReactGA.event({\n                                category: \"India Info\",\n                                action: \"Deaths Info Clicked\",\n                                label: \"Deaths Info\",\n                              });\n                              this.setState({\n                                deathsOpen: !this.state.deathsOpen,\n                              });\n                            }}\n                            className=\"report-tile\"\n                            style={{ marginLeft: 5, cursor: \"pointer\" }}\n                          >\n                            ?\n                          </div>\n                        </Popover>\n                      ) : null}\n                    </div>\n                    <div style={{ fontSize: 18 }}>Deaths</div>\n                    {this.state.india.length !== 0 ? (\n                      <div\n                        style={{ display: \"flex\", justifyContent: \"center\" }}\n                      >\n                        <TinyChart\n                          data={deathTinyChartData}\n                          label=\"confirmed\"\n                          color=\"#ffffff\"\n                        />\n                      </div>\n                    ) : null}\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-sm-6 col-12\">\n                  <div\n                    style={{\n                      background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\n                      paddingBottom: 15,\n                      minHeight: 368,\n                      paddingLeft: 15,\n                      paddingTop: 30,\n                      borderRadius: 15,\n                      marginBottom: 15,\n                    }}\n                  >\n                    <div className=\"row\" style={{ justifyContent: \"center\" }}>\n                      <div\n                        onClick={() => {\n                          ReactGA.event({\n                            category: \"India Line Chart\",\n                            action: \"Cumulative Button Clicked\",\n                            label: \"Cumulative\",\n                          });\n                          this.setState({\n                            changeChart: \"cumulative\",\n                          });\n                        }}\n                        style={\n                          this.state.changeChart === \"cumulative\"\n                            ? {\n                                padding: \"5px 15px 5px 15px\",\n                                color: \"white\",\n                                background: \"#404b69\",\n                                border: \"2px solid #404b69\",\n                                borderRadius: 5,\n                                cursor: \"pointer\",\n                              }\n                            : {\n                                padding: \"5px 15px 5px 15px\",\n                                color: \"#404b69\",\n                                background: \"white\",\n                                border: \"2px solid #404b69\",\n                                borderRadius: 5,\n                                cursor: \"pointer\",\n                              }\n                        }\n                      >\n                        <label\n                          style={{\n                            marginBottom: 0,\n                            cursor: \"pointer\",\n                            fontWeight: \"bold\",\n                          }}\n                        >\n                          Cumulative\n                        </label>\n                      </div>\n                      <div\n                        onClick={() => {\n                          ReactGA.event({\n                            category: \"India Line Chart\",\n                            action: \"Daily Button Clicked\",\n                            label: \"Daily\",\n                          });\n                          this.setState({\n                            changeChart: \"daily\",\n                          });\n                        }}\n                        style={\n                          this.state.changeChart === \"daily\"\n                            ? {\n                                padding: \"5px 15px 5px 15px\",\n                                color: \"white\",\n                                background: \"#404b69\",\n                                border: \"2px solid #404b69\",\n                                borderRadius: 5,\n                                marginLeft: 15,\n                                cursor: \"pointer\",\n                              }\n                            : {\n                                padding: \"5px 15px 5px 15px\",\n                                color: \"#404b69\",\n                                background: \"white\",\n                                border: \"2px solid #404b69\",\n                                borderRadius: 5,\n                                marginLeft: 15,\n                                cursor: \"pointer\",\n                              }\n                        }\n                      >\n                        <label\n                          style={{\n                            marginBottom: 0,\n                            cursor: \"pointer\",\n                            fontWeight: \"bold\",\n                          }}\n                        >\n                          Daily\n                        </label>\n                      </div>\n                    </div>\n                    <SimpleLineChart\n                      customTooltip={true}\n                      grid={false}\n                      data={\n                        this.state.changeChart === \"daily\"\n                          ? totalDataDaily\n                          : totalData\n                      }\n                      labels={[\"Confirmed\", \"Active\", \"Recovered\", \"Deaths\"]}\n                      colors={[\"#e43339\", \"#192a56\", \"#006266\", \"#535c68\"]}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-sm-6 col-12\">\n                  <div\n                    style={{\n                      minHeight: 368,\n                      background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\n                      paddingBottom: 15,\n                      paddingLeft: 15,\n                      paddingTop: 30,\n                      borderRadius: 15,\n                      marginBottom: 15,\n                    }}\n                  >\n                    <div className=\"row\" style={{ justifyContent: \"center\" }}>\n                      <div className=\"col-sm-4\">\n                        <Select\n                          isClearable={false}\n                          isSearchable={false}\n                          onChange={(selectedOption) => {\n                            this.setState({\n                              filterByCases:\n                                selectedOption === null\n                                  ? \"confirmed\"\n                                  : selectedOption.value,\n                            });\n                          }}\n                          styles={colourStyles}\n                          placeholder=\"Confirmed\"\n                          options={[\n                            { value: \"confirmed\", label: \"Confirmed\" },\n                            { value: \"active\", label: \"Active\" },\n                            { value: \"deaths\", label: \"Deaths\" },\n                            { value: \"recovered\", label: \"Recovered\" },\n                          ]}\n                        />\n                      </div>\n                      <div className=\"col-sm-4\">\n                        <Select\n                          isClearable={false}\n                          onChange={(selectedOption) => {\n                            this.setState({\n                              displayBySort:\n                                selectedOption === null\n                                  ? \"All\"\n                                  : selectedOption.value,\n                            });\n                          }}\n                          isSearchable={false}\n                          styles={colourStyles}\n                          placeholder=\"All\"\n                          options={[\n                            { value: \"All\", label: \"All\" },\n                            {\n                              value: \"Top 10\",\n                              label: \"Top 10\",\n                            },\n                          ]}\n                        />\n                      </div>\n                    </div>\n                    <CustomChart\n                      placeholder={false}\n                      emptyClassName={\"m-t-40\"}\n                      chartArea={{ left: 10, top: 15, right: 10, bottom: 15 }}\n                      rows={pieChartData}\n                      columns={Columns}\n                      chartType={\"PieChart\"}\n                      height={\"270px\"}\n                    />\n                  </div>\n                </div>\n              </div>\n              {this.state.isTable === 1 ? null : this.state.locationLoader ===\n                true ? (\n                <div>\n                  <img src={Virus} alt=\"Loader\" />\n                </div>\n              ) : (\n                <div style={{ paddingTop: 5 }}>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search\"\n                    onChange={(e) =>\n                      this.setState({\n                        searchString: e.target.value,\n                      })\n                    }\n                  />\n                </div>\n              )}\n              <div\n                style={{\n                  textAlign: \"right\",\n                  padding: \"15px 0px\",\n                  marginTop: 15,\n                }}\n              >\n                <span\n                  onClick={() => {\n                    ReactGA.event({\n                      category: \"India View\",\n                      action: \"Table View Clicked\",\n                      label: \"Table View\",\n                    });\n                    this.setState({\n                      isTable: 1,\n                    });\n                  }}\n                  style={\n                    this.state.isTable === 1\n                      ? {\n                          background: \"#404b69\",\n                          fontWeight: \"bold\",\n                          cursor: \"pointer\",\n                          color: \"white\",\n                          padding: \"10px 20px\",\n                          borderRadius: \"20px 0px 0px 20px\",\n                        }\n                      : {\n                          background: \"white\",\n                          fontWeight: \"bold\",\n                          cursor: \"pointer\",\n                          color: \"#404b69\",\n                          padding: \"10px 20px\",\n                          borderRadius: \"20px 0px 0px 20px\",\n                        }\n                  }\n                >\n                  Table\n                </span>\n                <span\n                  onClick={() => {\n                    ReactGA.event({\n                      category: \"India View\",\n                      action: \"Map View Clicked\",\n                      label: \"Map View\",\n                    });\n                    this.setState({ isTable: 2, selectedCountry: false });\n                  }}\n                  style={\n                    this.state.isTable === 2\n                      ? {\n                          background: \"#404b69\",\n                          fontWeight: \"bold\",\n                          cursor: \"pointer\",\n                          color: \"white\",\n                          padding: \"10px 20px\",\n                        }\n                      : {\n                          background: \"white\",\n                          fontWeight: \"bold\",\n                          cursor: \"pointer\",\n                          color: \"#404b69\",\n                          padding: \"10px 20px\",\n                        }\n                  }\n                >\n                  Map\n                </span>\n                <span\n                  onClick={() => {\n                    ReactGA.event({\n                      category: \"India View\",\n                      action: \"Card View Clicked\",\n                      label: \"Card View\",\n                    });\n                    this.setState({ isTable: 0, selectedCountry: false });\n                  }}\n                  style={\n                    this.state.isTable === 0\n                      ? {\n                          background: \"#404b69\",\n                          fontWeight: \"bold\",\n                          cursor: \"pointer\",\n                          color: \"white\",\n                          padding: \"10px 20px\",\n                          borderRadius: \"0px 20px 20px 0px\",\n                        }\n                      : {\n                          background: \"white\",\n                          fontWeight: \"bold\",\n                          cursor: \"pointer\",\n                          color: \"#404b69\",\n                          padding: \"10px 20px\",\n                          borderRadius: \"0px 20px 20px 0px\",\n                        }\n                  }\n                >\n                  Card\n                </span>\n              </div>\n              {this.state.isTable === 2 ? (\n                <div\n                  className=\"row\"\n                  style={{\n                    border: \"2px solid rgb(255, 252, 220)\",\n                    marginRight: 0,\n                    marginTop: 15,\n                    marginLeft: 0,\n                    borderRadius: 10,\n                  }}\n                >\n                  <div\n                    className=\"col-sm-12\"\n                    style={{ marginTop: 60, marginBottom: 80 }}\n                  >\n                    <IndiaMap\n                      data={\n                        this.state.india.length !== 0\n                          ? this.state.india.statewise.filter(\n                              (state) => state.state !== \"Total\"\n                            )\n                          : []\n                      }\n                    />\n                  </div>\n                </div>\n              ) : null}\n              {this.state.isTable === 0 ? (\n                <div className=\"row\">\n                  {this.state.locationLoader === true ? (\n                    <div>\n                      <img src={Virus} alt=\"Loader\" />\n                    </div>\n                  ) : this.state.india.length !== 0 ? (\n                    this.state.india.statewise\n                      .filter((location) =>\n                        location.state\n                          .toLowerCase()\n                          .includes(this.state.searchString.toLowerCase())\n                      )\n                      .map((location, index) => {\n                        return location.state !== \"Total\" ? (\n                          <div\n                            key={index}\n                            className=\"col-sm-4\"\n                            style={{ padding: 15 }}\n                          >\n                            <div\n                              style={{\n                                textAlign: \"center\",\n                                borderRadius: 10,\n                                background: \"white\",\n                                color: \"#404b69\",\n                              }}\n                            >\n                              <label\n                                style={{\n                                  borderTopLeftRadius: 10,\n                                  borderTopRightRadius: 10,\n                                  color: \"white\",\n                                  width: \"100%\",\n                                  fontSize: 18,\n                                  fontWeight: \"bold\",\n                                  padding: 10,\n                                  background: \"#404b69\",\n                                }}\n                              >\n                                {location.state}\n                              </label>\n                              <br />\n                              <div\n                                className=\"row justify-content-center\"\n                                style={{ paddingTop: 15, paddingBottom: 15 }}\n                              >\n                                <div\n                                  style={{ padding: 10, fontWeight: \"bold\" }}\n                                >\n                                  <div>{location.confirmed}</div>\n                                  <div>Confirmed</div>\n                                </div>\n                                <div\n                                  style={{ padding: 10, fontWeight: \"bold\" }}\n                                >\n                                  <div>{location.active}</div>\n                                  <div>Active</div>\n                                </div>\n                                <div\n                                  style={{ padding: 10, fontWeight: \"bold\" }}\n                                >\n                                  <div>{location.recovered}</div>\n                                  <div>Recovered</div>\n                                </div>\n                                <div\n                                  style={{ padding: 10, fontWeight: \"bold\" }}\n                                >\n                                  <div>{location.deaths}</div>\n                                  <div>Deaths</div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        ) : null;\n                      })\n                  ) : null}\n                </div>\n              ) : null}{\" \"}\n              {this.state.isTable === 1 ? (\n                <div className=\"row\" style={{ marginTop: 15 }}>\n                  <div className=\"col-sm-12\">\n                    <div\n                      style={{\n                        background: \"white\",\n                        color: \"#404b69\",\n                        borderRadius: 10,\n                      }}\n                    >\n                      <ReactTable\n                        data={data}\n                        columns={columns}\n                        defaultPageSize={10}\n                        className=\"-striped -highlight\"\n                        noDataText={<b>No data found</b>}\n                        getTheadProps={(state, rowInfo, column) => {\n                          return {\n                            style: {\n                              fontWeight: \"bold\",\n                            },\n                          };\n                        }}\n                        getTdProps={(state, rowInfo, column, instance) => {\n                          return {\n                            onClick: (e, handleOriginal) => {\n                              if (handleOriginal) {\n                                handleOriginal();\n                              }\n                            },\n                          };\n                        }}\n                        filterable\n                        SubComponent={(row) => {\n                          return row.original.confirmed === 0 ? null : (\n                            <div style={{ padding: \"20px\" }}>\n                              <div style={{ borderRadius: 10 }}>\n                                <ReactTable\n                                  data={\n                                    Object.values(\n                                      cityData.filter(\n                                        (state) =>\n                                          Object.keys(state)[0] ===\n                                          row.original.state\n                                      )[0]\n                                    )[0]\n                                  }\n                                  columns={cityColumns}\n                                  defaultPageSize={5}\n                                  showPagination={true}\n                                />\n                              </div>\n                            </div>\n                          );\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              ) : null}\n            </div>\n            <div style={{ padding: 15 }}>\n              Designed and Developed by{\"  \"}\n              <a\n                style={{\n                  color: \"#f6565b\",\n                  fontWeight: \"bold\",\n                  textDecoration: \"none\",\n                }}\n                href=\"https://miteshtagadiya.js.org\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                Mitesh Tagadiya\n              </a>\n            </div>\n          </div>\n        </div>\n      </ErrorBoundary>\n    );\n  }\n}\n\nexport default withRouter(India);\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport \"./index.css\"\n\nconst LEFT_PAGE = 'LEFT';\nconst RIGHT_PAGE = 'RIGHT';\n\n/**\n * Helper method for creating a range of numbers\n * range(1, 5) => [1, 2, 3, 4, 5]\n */\nconst range = (from, to, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n}\n\nclass Pagination extends Component {\n\n  constructor(props) {\n    super(props);\n    const { totalRecords = null, pageLimit = 30, pageNeighbours = 0 } = props;\n\n    this.pageLimit = typeof pageLimit === 'number' ? pageLimit : 30;\n    this.totalRecords = typeof totalRecords === 'number' ? totalRecords : 0;\n\n    // pageNeighbours can be: 0, 1 or 2\n    this.pageNeighbours = typeof pageNeighbours === 'number'\n      ? Math.max(0, Math.min(pageNeighbours, 2))\n      : 0;\n\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\n\n    this.state = { currentPage: 1 };\n  }\n\n  componentDidMount() {\n    this.gotoPage(1);\n  }\n\n  gotoPage = page => {\n    const { onPageChanged = f => f } = this.props;\n\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\n\n    const paginationData = {\n      currentPage,\n      totalPages: this.totalPages,\n      pageLimit: this.pageLimit,\n      totalRecords: this.totalRecords\n    };\n\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\n  }\n\n  handleClick = page => evt => {\n    evt.preventDefault();\n    this.gotoPage(page);\n  }\n\n  handleMoveLeft = evt => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage - (this.pageNeighbours * 2) - 1);\n  }\n\n  handleMoveRight = evt => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage + (this.pageNeighbours * 2) + 1);\n  }\n\n  /**\n   * Let's say we have 10 pages and we set pageNeighbours to 2\n   * Given that the current page is 6\n   * The pagination control will look like the following:\n   *\n   * (1) < {4 5} [6] {7 8} > (10)\n   *\n   * (x) => terminal pages: first and last page(always visible)\n   * [x] => represents current page\n   * {...x} => represents page neighbours\n   */\n  fetchPageNumbers = () => {\n\n    const totalPages = this.totalPages;\n    const currentPage = this.state.currentPage;\n    const pageNeighbours = this.pageNeighbours;\n\n    /**\n     * totalNumbers: the total page numbers to show on the control\n     * totalBlocks: totalNumbers + 2 to cover for the left(<) and right(>) controls\n     */\n    const totalNumbers = (this.pageNeighbours * 2) + 3;\n    const totalBlocks = totalNumbers + 2;\n\n    if (totalPages > totalBlocks) {\n\n      const startPage = Math.max(2, currentPage - pageNeighbours);\n      const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\n\n      let pages = range(startPage, endPage);\n\n      /**\n       * hasLeftSpill: has hidden pages to the left\n       * hasRightSpill: has hidden pages to the right\n       * spillOffset: number of hidden pages either to the left or to the right\n       */\n      const hasLeftSpill = startPage > 2;\n      const hasRightSpill = (totalPages - endPage) > 1;\n      const spillOffset = totalNumbers - (pages.length + 1);\n\n      switch (true) {\n        // handle: (1) < {5 6} [7] {8 9} (10)\n        case (hasLeftSpill && !hasRightSpill): {\n          const extraPages = range(startPage - spillOffset, startPage - 1);\n          pages = [LEFT_PAGE, ...extraPages, ...pages];\n          break;\n        }\n\n        // handle: (1) {2 3} [4] {5 6} > (10)\n        case (!hasLeftSpill && hasRightSpill): {\n          const extraPages = range(endPage + 1, endPage + spillOffset);\n          pages = [...pages, ...extraPages, RIGHT_PAGE];\n          break;\n        }\n\n        // handle: (1) < {4 5} [6] {7 8} > (10)\n        case (hasLeftSpill && hasRightSpill):\n        default: {\n          pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\n          break;\n        }\n      }\n\n      return [1, ...pages, totalPages];\n\n    }\n\n    return range(1, totalPages);\n\n  }\n\n  render() {\n\n    if (!this.totalRecords || this.totalPages === 1) return null;\n\n    const { currentPage } = this.state;\n    const pages = this.fetchPageNumbers();\n\n    return (\n      <Fragment>\n        <nav aria-label=\"Countries Pagination\">\n          <ul className=\"pagination\">\n            { pages.map((page, index) => {\n\n              if (page === LEFT_PAGE) return (\n                <li key={index} className=\"page-item\">\n                  <a className=\"page-link\" href=\"#\" aria-label=\"Previous\" onClick={this.handleMoveLeft}>\n                    <span aria-hidden=\"true\">&laquo;</span>\n                    <span className=\"sr-only\">Previous</span>\n                  </a>\n                </li>\n              );\n\n              if (page === RIGHT_PAGE) return (\n                <li key={index} className=\"page-item\">\n                  <a className=\"page-link\" href=\"#\" aria-label=\"Next\" onClick={this.handleMoveRight}>\n                    <span aria-hidden=\"true\">&raquo;</span>\n                    <span className=\"sr-only\">Next</span>\n                  </a>\n                </li>\n              );\n\n              return (\n                <li key={index} className={`page-item${ currentPage === page ? ' active' : ''}`}>\n                  <a className=\"page-link\" href=\"#\" onClick={ this.handleClick(page) }>{ page }</a>\n                </li>\n              );\n\n            }) }\n\n          </ul>\n        </nav>\n      </Fragment>\n    );\n\n  }\n}\n\nPagination.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  pageLimit: PropTypes.number,\n  pageNeighbours: PropTypes.number,\n  onPageChanged: PropTypes.func\n};\n\nexport default Pagination;","import React from \"react\";\nimport { scaleLog } from \"d3-scale\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport Countrys from \"./ISO2.json\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst colorScale = scaleLog()\n  .domain([1, 10])\n  .range([\n    \"#ffedea\",\n    \"#ffcec5\",\n    \"#ffad9f\",\n    \"#ff8a75\",\n    \"#ff5533\",\n    \"#e2492d\",\n    \"#be3d26\",\n    \"#9a311f\",\n    \"#782618\",\n  ]);\n\nconst MapChart = ({ setTooltipContent, data, mapFilter }) => {\n  return (\n    <ComposableMap\n      height={550}\n      width={700}\n      data-tip=\"\"\n      projectionConfig={{\n        rotate: [-10, 0, 0],\n        scale: 147,\n      }}\n    >\n      {data.length > 0 && (\n        <Geographies geography={geoUrl}>\n          {({ geographies }) =>\n            geographies.map((geo) => {\n              const d = data.find(\n                (s) => Countrys[s.title] === geo.properties.ISO_A2\n              );\n              //VirusTracker\n              // const d = data.find((s) => s.code === geo.properties.ISO_A2);\n              //Covid19Info\n              // const d = data.find(\n              //   (s) => Object.keys(s)[0] === geo.properties.ISO_A3\n              // );\n              return (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  onMouseEnter={() => {\n                    if (typeof d !== \"undefined\") {\n                      setTooltipContent([\n                        { title: geo.properties.NAME_LONG },\n                        { Confirmed: d.confirmed === \"\" ? 0 : d.confirmed },\n                        { Deaths: d.deaths === \"\" ? 0 : d.deaths },\n                        { Recovered: d.recovered === \"\" ? 0 : d.recovered },\n                        {\n                          DeathsToday:\n                            d.deaths_today === \"\" ? 0 : d.deaths_today,\n                        },\n                        {\n                          ConfirmedToday:\n                            d.confirmed_today === \"\" ? 0 : d.confirmed_today,\n                        },\n                      ]);\n                      // VirusTracker\n                      // setTooltipContent([\n                      //   { title: d.title },\n                      //   { Confirmed: d.total_cases },\n                      //   { Deaths: d.total_deaths },\n                      //   { Recovered: d.total_recovered },\n                      // ]);\n                      // //Covid19Info\n                      // setTooltipContent([\n                      //   { title: Object.keys(d)[0] },\n                      //   { Confirmed: Object.values(d)[0].confirmed },\n                      //   { Deaths: Object.values(d)[0].deaths },\n                      //   { Recovered: Object.values(d)[0].recovered },\n                      // ]);\n                    } else {\n                      setTooltipContent([\n                        { title: geo.properties.NAME },\n                        { Confirmed: 0 },\n                        { Deaths: 0 },\n                        { Recovered: 0 },\n                        { DeathsToday: 0 },\n                        { ConfirmedToday: 0 },\n                      ]);\n                    }\n                  }}\n                  onMouseLeave={() => {\n                    setTooltipContent(\"\");\n                  }}\n                  style={{\n                    hover: {\n                      fill: \"#F53\",\n                      outline: \"none\",\n                    },\n                    pressed: {\n                      fill: \"#E42\",\n                      outline: \"none\",\n                    },\n                  }}\n                  fill={\n                    d\n                      ? colorScale(Number(d[mapFilter]))\n                      : // ? colorScale(Number(Object.values(d)[0][mapFilter])) // covid19Info\n                        \"#F5F4F6\"\n                  }\n                />\n              );\n            })\n          }\n        </Geographies>\n      )}\n    </ComposableMap>\n  );\n};\n\nexport default MapChart;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Select from \"react-select\";\nimport ReactTable from \"react-table-6\";\nimport SimpleLineChart from \"./SimpleLineChart/SimpleLineChart\";\nimport \"react-table-6/react-table.css\";\nimport Pagination from \"./Pagination\";\nimport IndiaIcon from \"./assets/india.png\";\nimport World from \"./assets/world.png\";\nimport Github from \"./assets/github1.png\";\nimport Virus from \"./assets/virus.gif\";\nimport ErrorBoundary from \"./ErrorBoundry\";\nimport Countrys from \"./CountryList.json\";\nimport ReactGA from \"react-ga\";\nimport CustomChart from \"./PieChart/CustomChart\";\nimport DataMap from \"./DataMap/DataMap\";\nimport ReactTooltip from \"react-tooltip\";\nimport _ from \"lodash\";\nimport Popover from \"react-popover\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showGlobalChartType: \"LineChart\",\n      searchString: \"\",\n      cards: [],\n      width: 0,\n      height: 0,\n      globalTimelines: [],\n      setTooltipContent: \"\",\n      mapFilter: \"confirmed\",\n      filterByCases: \"confirmed\",\n      displayBySort: \"All\",\n      currentPage: 0,\n      currentCardPage: 0,\n      totalCardPages: 0,\n      totalPages: 0,\n      globalData: [],\n      locationLoader: false,\n      selectedCountry: false,\n      loadDefaultCards: true,\n      data: [],\n      timelines: [],\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\"],\n      isChart: 0,\n      datasets: [\n        {\n          label: \"Rainfall\",\n          backgroundColor: \"rgba(75,192,192,1)\",\n          borderColor: \"rgba(0,0,0,1)\",\n          borderWidth: 2,\n          data: [65, 59, 80, 81, 56],\n          data1: [65, 59, 80, 81, 56],\n          data2: [65, 59, 80, 81, 56],\n          data3: [65, 59, 80, 81, 56],\n        },\n      ],\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n\n    this.setState({\n      locationLoader: true,\n    });\n    window.addEventListener(\"focus\", () => {\n      fetch(`https://covid19-global-api.herokuapp.com/global.json`, {\n        header: { \"Access-Control-Allow-Origin\": \"*\" },\n        method: \"GET\",\n      })\n        .then((res) => res.json())\n        .then((response) => {\n          this.setState({\n            globalData: response,\n          });\n        })\n        .catch((error) => {\n          this.setState({\n            locationLoader: false,\n          });\n        });\n\n      fetch(`https://covid19.mathdro.id/api/daily`, {\n        method: \"GET\",\n      })\n        .then((res) => res.json())\n        .then((response) => {\n          this.setState({\n            globalTimelines: response,\n          });\n        })\n        .catch((error) => {\n          this.setState({\n            locationLoader: false,\n          });\n        });\n\n      this.renderCards([1]);\n    });\n    fetch(`https://covid19-global-api.herokuapp.com/global.json`, {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        this.setState({\n          globalData: response,\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          locationLoader: false,\n        });\n      });\n\n    fetch(`https://covid19.mathdro.id/api/daily`, {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        this.setState({\n          globalTimelines: response,\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          locationLoader: false,\n        });\n      });\n\n    this.renderCards([1]);\n  }\n\n  renderCards(cardId) {\n    let cards = [];\n    this.setState({\n      cards: [],\n      locationLoader: true,\n    });\n    cardId.map((location) => {\n      fetch(\n        `https://cors-proxy-pass.herokuapp.com/https://thevirustracker.com/free-api?countryTotals=ALL`,\n        {\n          method: \"GET\",\n        }\n      )\n        .then((res) => res.json())\n        .then((response) => {\n          this.setState({\n            locationLoader: false,\n            cards: cards.concat(response),\n          });\n        })\n        .catch((error) => {\n          this.setState({\n            locationLoader: false,\n          });\n        });\n    });\n  }\n\n  renderCharts(data) {\n    data.map((location) => {\n      fetch(\n        `https://cors-proxy-pass.herokuapp.com/https://thevirustracker.com/free-api?countryTimeline=${location}`,\n        {\n          method: \"GET\",\n        }\n      )\n        .then((res) => res.json())\n        .then((response) => {\n          this.setState((state) => {\n            const timelines = state.timelines.concat(response);\n            const locationLoader = false;\n            return {\n              timelines,\n              locationLoader,\n            };\n          });\n        })\n        .catch((error) => {\n          this.setState({\n            locationLoader: false,\n          });\n        });\n    });\n  }\n\n  chunkArray = (array, size) => {\n    let result = [];\n    let arrayCopy = [...array];\n    while (arrayCopy.length > 0) {\n      result.push(arrayCopy.splice(0, size));\n    }\n    return result;\n  };\n\n  onPageChanged = (data1) => {\n    const { currentPage, totalPages } = data1;\n\n    this.setState({\n      timelines: [],\n      locationLoader: true,\n    });\n    if (!this.state.selectedCountry) {\n      this.renderCharts(_.chunk(Object.keys(Countrys), 9)[currentPage - 1]);\n    }\n\n    this.setState({\n      currentPage: currentPage - 1,\n      totalPages: totalPages,\n    });\n  };\n\n  changeState = () => {\n    this.setState({\n      locationLoader: true,\n    });\n  };\n\n  updateDimensions = () => {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  renderTooltipLabelColor(caseType) {\n    switch (caseType[0]) {\n      case \"Confirmed\":\n        return \"rgb(64, 75, 105)\";\n\n      case \"Deaths\":\n        return \"rgb(255, 82, 82)\";\n\n      case \"Recovered\":\n        return \"rgb(76, 175, 80)\";\n\n      default:\n        return \"rgb(64, 75, 105)\";\n    }\n  }\n\n  render() {\n    const colourStyles = {\n      control: (styles) => ({\n        ...styles,\n        backgroundColor: \"white\",\n        marginRight: 15,\n        marginBottom: 15,\n      }),\n      option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n        return {\n          ...styles,\n          backgroundColor: isDisabled\n            ? null\n            : isSelected\n            ? \"#404b69\"\n            : isFocused\n            ? \"white\"\n            : null,\n          color: isDisabled ? \"#ccc\" : isSelected ? \"white\" : \"#404b69\",\n          cursor: isDisabled ? \"not-allowed\" : \"default\",\n\n          \":active\": {\n            ...styles[\":active\"],\n            backgroundColor: !isDisabled && (isSelected ? \"#404b69\" : \"white\"),\n          },\n        };\n      },\n    };\n\n    const options = Object.keys(Countrys).map((location) => {\n      return {\n        value: location,\n        label: Countrys[location],\n      };\n    });\n\n    let totalData =\n      this.state.globalTimelines.length !== 0\n        ? this.state.globalTimelines.map((cases, index) => {\n            return {\n              name: cases.reportDate,\n              Confirmed: Number(cases.totalConfirmed),\n              Active:\n                Number(cases.totalConfirmed) -\n                Number(cases.totalRecovered) -\n                Number(cases.deaths.total),\n              Recovered: Number(cases.totalRecovered),\n              Deaths: Number(cases.deaths.total),\n              dailyConfirmed: Number(cases.deltaConfirmed),\n              dailyActive:\n                index === 0\n                  ? Number(cases.totalConfirmed) -\n                    Number(cases.totalRecovered) -\n                    Number(cases.deaths.total)\n                  : Number(cases.totalConfirmed) -\n                    Number(cases.totalRecovered) -\n                    Number(cases.deaths.total) -\n                    (Number(\n                      this.state.globalTimelines[index - 1].totalConfirmed\n                    ) -\n                      Number(\n                        this.state.globalTimelines[index - 1].totalRecovered\n                      ) -\n                      Number(\n                        this.state.globalTimelines[index - 1].deaths.total\n                      )),\n              dailyRecovered: Number(cases.deltaRecovered),\n              dailyDeaths:\n                index === 0\n                  ? Number(cases.deaths.total)\n                  : Number(cases.deaths.total) -\n                    Number(this.state.globalTimelines[index - 1].deaths.total),\n            };\n          })\n        : null;\n\n    let date = new Date();\n    let todayDate =\n      date.getMonth() + 1 + \"/\" + date.getDate() + \"/\" + date.getFullYear();\n\n    const data =\n      this.state.globalData.length !== 0\n        ? this.state.globalData\n            .filter((country) => country.title !== \"World\")\n            .map((country) => {\n              return {\n                country: country.title,\n                confirmed: Number(country.confirmed),\n                active: Number(country.active),\n                recovered: Number(country.recovered),\n                deaths: Number(country.deaths),\n                deltaConfirmed: Number(country.confirmed_today),\n                deltaDeaths: Number(country.deaths_today),\n                tests: Number(country.totaltests),\n              };\n            })\n        : [];\n\n    const columns =\n      this.state.globalData.length !== 0\n        ? [\n            {\n              Header: \"Country\",\n              accessor: \"country\", // String-based value accessors!\n            },\n            {\n              Header: \"Confirmed\",\n              accessor: \"confirmed\",\n              Cell: (props) => {\n                return (\n                  <>\n                    {props.original.deltaConfirmed === 0 ? null : (\n                      <span\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"bold\",\n                          color: \"#e43339\",\n                        }}\n                      >\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\n                          &#9650;\n                        </span>\n                        {props.original.deltaConfirmed}\n                      </span>\n                    )}{\" \"}\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n            {\n              Header: \"Active\",\n              accessor: \"active\",\n              Cell: (props) => {\n                return (\n                  <>\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n            {\n              Header: \"Recovered\",\n              accessor: \"recovered\",\n              Cell: (props) => {\n                return (\n                  <>\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n            {\n              Header: \"Deaths\",\n              accessor: \"deaths\",\n              Cell: (props) => {\n                return (\n                  <>\n                    {props.original.deltaDeaths === 0 ? null : (\n                      <span\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"bold\",\n                          color: \"#535c68\",\n                        }}\n                      >\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\n                          &#9650;\n                        </span>\n                        {props.original.deltaDeaths}\n                      </span>\n                    )}{\" \"}\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n            {\n              Header: \"Tests\",\n              accessor: \"tests\",\n              Cell: (props) => {\n                return (\n                  <>\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n          ]\n        : [];\n\n    const Comparator = (a, b) => {\n      if (Number(a[1]) > Number(b[1])) return -1;\n      if (Number(a[1]) < Number(b[1])) return 1;\n      return 0;\n    };\n\n    var pieChartData =\n      this.state.globalData.length !== 0\n        ? this.state.globalData\n            .filter((country) => country.title !== \"World\")\n            .map((state) => {\n              return [state.title, Number(state[this.state.filterByCases])];\n            })\n        : [];\n\n    pieChartData = pieChartData.sort(Comparator).slice(0, 10);\n\n    let Columns = [\n      { type: \"string\", label: \"name\" },\n      { type: \"number\", label: \"value\" },\n    ];\n\n    return (\n      <ErrorBoundary>\n        <div\n          className=\"App\"\n          style={{\n            background: \"#172852\",\n            color: \"white\",\n            height: \"100vh\",\n            overflowY: \"scroll\",\n          }}\n        >\n          <div className=\"container\">\n            <div>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  fontSize: \"2.1em\",\n                  fontWeight: \"bold\",\n                  marginTop: 30,\n                  paddingBottom: 30,\n                  borderBottom: \"2px solid white\",\n                }}\n              >\n                Covid-19 Global {this.state.width < 1024 ? \"\" : \"Dashboard\"}\n                <img\n                  onClick={() =>\n                    window.open(\n                      \"https://github.com/miteshtagadiya/Covid-19-Global-Dashboard\",\n                      \"_blank\"\n                    )\n                  }\n                  src={Github}\n                  alt=\"github\"\n                  style={{ height: 50, width: 50, cursor: \"pointer\" }}\n                />\n              </div>\n            </div>\n            <div style={{ paddingTop: 15 }}>\n              <img\n                onClick={() => this.props.history.push(\"/india\")}\n                src={IndiaIcon}\n                alt=\"India\"\n                style={{ height: 50, width: 70, cursor: \"pointer\" }}\n              />\n              <span style={{ fontWeight: \"bold\" }}>Switch</span>\n              <img\n                onClick={() => this.props.history.push(\"/\")}\n                src={World}\n                alt=\"World\"\n                style={{\n                  marginLeft: 15,\n                  height: 50,\n                  width: 50,\n                  cursor: \"pointer\",\n                }}\n              />\n            </div>\n            <div style={{ minHeight: \"90vh\" }}>\n              <div className=\"row\" style={{ padding: \"30px 0px\" }}>\n                <div className=\"col-sm-3 col-6\" style={{ padding: 15 }}>\n                  <div\n                    style={{\n                      padding: 20,\n                      fontWeight: \"bold\",\n                      minHeight: 156,\n                      background: \"#448AFF\",\n                      color: \"white\",\n                      borderRadius: 10,\n                    }}\n                  >\n                    <div style={{ fontSize: 30 }}>\n                      {this.state.globalData.length !== 0\n                        ? this.state.globalData.filter(\n                            (state) => state.title === \"World\"\n                          )[0].confirmed\n                        : 0}\n                    </div>\n                    <div\n                      style={{\n                        fontSize: 18,\n                        marginBottom: 10,\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      <span style={{ fontSize: 20, fontWeight: \"bold\" }}>\n                        &#9650;\n                      </span>{\" \"}\n                      {this.state.globalData.length !== 0\n                        ? this.state.globalData.filter(\n                            (state) => state.title === \"World\"\n                          )[0].confirmed_today\n                        : 0}\n                      {this.state.globalData.length !== 0 &&\n                      Number(\n                        this.state.globalData.filter(\n                          (state) => state.title === \"World\"\n                        )[0].confirmed_today\n                      ) !== 0 ? (\n                        <Popover\n                          body={\n                            <div\n                              style={{\n                                maxHeight: 400,\n                                overflowY: \"scroll\",\n                                borderRight: 10,\n                                background: \"white\",\n                                borderRadius: 10,\n                                padding: 15,\n                                color: \"#192a56\",\n                                fontWeight: \"bold\",\n                              }}\n                            >\n                              {this.state.globalData\n                                .filter(\n                                  (state) =>\n                                    state.title !== \"World\" &&\n                                    state.confirmed_today !== \"\"\n                                )\n                                .map((state, index) => {\n                                  return (\n                                    <div key={index}>\n                                      {state.title}: {state.confirmed_today}\n                                    </div>\n                                  );\n                                })}\n                            </div>\n                          }\n                          preferPlace={\"below\"}\n                          isOpen={this.state.confirmedOpen}\n                          onOuterAction={() =>\n                            this.setState({\n                              confirmedOpen: !this.state.confirmedOpen,\n                            })\n                          }\n                        >\n                          <div\n                            onClick={() => {\n                              ReactGA.event({\n                                category: \"Global Info\",\n                                action: \"Global Confirmed Info Clicked\",\n                                label: \"Global Confirm Info\",\n                              });\n                              this.setState({\n                                confirmedOpen: !this.state.confirmedOpen,\n                              });\n                            }}\n                            className=\"report-tile\"\n                            style={{ marginLeft: 5, cursor: \"pointer\" }}\n                          >\n                            ?\n                          </div>\n                        </Popover>\n                      ) : null}\n                    </div>\n                    <div style={{ fontSize: 18 }}>Confirmed</div>\n                  </div>\n                </div>\n                <div className=\"col-sm-3 col-6\" style={{ padding: 15 }}>\n                  <div\n                    style={{\n                      padding: 20,\n                      minHeight: 156,\n                      fontWeight: \"bold\",\n                      background: \"#F9A825\",\n                      color: \"white\",\n                      borderRadius: 10,\n                    }}\n                  >\n                    <div style={{ fontSize: 30, marginBottom: 42 }}>\n                      {this.state.globalData.length !== 0\n                        ? this.state.globalData.filter(\n                            (state) => state.title === \"World\"\n                          )[0].active\n                        : 0}\n                    </div>\n                    <div style={{ fontSize: 18 }}>Active</div>\n                  </div>\n                </div>\n                <div className=\"col-sm-3 col-6\" style={{ padding: 15 }}>\n                  <div\n                    style={{\n                      padding: 20,\n                      minHeight: 156,\n                      fontWeight: \"bold\",\n                      background: \"#4CAF50\",\n                      color: \"#ffffff\",\n                      borderRadius: 10,\n                    }}\n                  >\n                    <div style={{ fontSize: 30, marginBottom: 42 }}>\n                      {this.state.globalData.length !== 0\n                        ? this.state.globalData.filter(\n                            (state) => state.title === \"World\"\n                          )[0].recovered\n                        : 0}\n                    </div>\n                    <div style={{ fontSize: 18 }}>Recovered</div>\n                  </div>\n                </div>\n                <div className=\"col-sm-3 col-6\" style={{ padding: 15 }}>\n                  <div\n                    style={{\n                      padding: 20,\n                      fontWeight: \"bold\",\n                      minHeight: 156,\n                      background: \"#FF5252\",\n                      color: \"#ffffff\",\n                      borderRadius: 10,\n                    }}\n                  >\n                    <div style={{ fontSize: 30 }}>\n                      {this.state.globalData.length !== 0\n                        ? this.state.globalData.filter(\n                            (state) => state.title === \"World\"\n                          )[0].deaths\n                        : 0}\n                    </div>\n                    <div\n                      style={{\n                        fontSize: 18,\n                        marginBottom: 10,\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      <span style={{ fontSize: 20, fontWeight: \"bold\" }}>\n                        &#9650;\n                      </span>{\" \"}\n                      {this.state.globalData.length !== 0\n                        ? this.state.globalData.filter(\n                            (state) => state.title === \"World\"\n                          )[0].deaths_today\n                        : 0}\n                      {this.state.globalData.length !== 0 &&\n                      Number(\n                        this.state.globalData.filter(\n                          (state) => state.title === \"World\"\n                        )[0].deaths_today\n                      ) !== 0 ? (\n                        <Popover\n                          body={\n                            <div\n                              style={{\n                                maxHeight: 400,\n                                overflowY: \"scroll\",\n                                borderRight: 10,\n                                background: \"white\",\n                                borderRadius: 10,\n                                padding: 15,\n                                color: \"#192a56\",\n                                fontWeight: \"bold\",\n                              }}\n                            >\n                              {this.state.globalData\n                                .filter(\n                                  (state) =>\n                                    state.title !== \"World\" &&\n                                    state.deaths_today !== \"\"\n                                )\n                                .map((state, index) => {\n                                  return (\n                                    <div key={index}>\n                                      {state.title}: {state.deaths_today}\n                                    </div>\n                                  );\n                                })}\n                            </div>\n                          }\n                          preferPlace={\"below\"}\n                          isOpen={this.state.deathsOpen}\n                          onOuterAction={() =>\n                            this.setState({\n                              deathsOpen: !this.state.deathsOpen,\n                            })\n                          }\n                        >\n                          <div\n                            onClick={() => {\n                              ReactGA.event({\n                                category: \"Global Info\",\n                                action: \"Global Deaths Info Clicked\",\n                                label: \"Global Deaths Info\",\n                              });\n                              this.setState({\n                                deathsOpen: !this.state.deathsOpen,\n                              });\n                            }}\n                            className=\"report-tile\"\n                            style={{ marginLeft: 5, cursor: \"pointer\" }}\n                          >\n                            ?\n                          </div>\n                        </Popover>\n                      ) : null}\n                    </div>\n                    <div style={{ fontSize: 18 }}>Deaths</div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-sm-6 col-12\">\n                  <div\n                    style={{\n                      minHeight: 368,\n                      background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\n                      paddingBottom: 15,\n                      paddingLeft: 15,\n                      borderRadius: 15,\n                      marginBottom: 15,\n                      paddingTop: 30,\n                    }}\n                  >\n                    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                      <div\n                        style={\n                          this.state.showGlobalChartType === \"LineChart\"\n                            ? {\n                                background: \"rgb(64, 75, 105)\",\n                                padding: \"5px 15px\",\n                                cursor: \"pointer\",\n                                borderTopLeftRadius: 10,\n                                display: \"flex\",\n                                flexDirection: \"column\",\n                                justifyContent: \"center\",\n                                borderBottomLeftRadius: 10,\n                                fontWeight: \"bold\",\n                                color: \"white\",\n                              }\n                            : {\n                                color: \"rgb(64, 75, 105)\",\n                                cursor: \"pointer\",\n                                border: \"3px solid rgb(64, 75, 105)\",\n                                padding: \"5px 15px\",\n                                borderTopLeftRadius: 10,\n                                borderBottomLeftRadius: 10,\n                                fontWeight: \"bold\",\n                              }\n                        }\n                        onClick={() =>\n                          this.setState({\n                            showGlobalChartType: \"LineChart\",\n                          })\n                        }\n                      >\n                        Line\n                      </div>\n                      <div\n                        style={\n                          this.state.showGlobalChartType === \"BarChart\"\n                            ? {\n                                background: \"rgb(64, 75, 105)\",\n                                cursor: \"pointer\",\n                                padding: \"5px 15px\",\n                                borderTopRightRadius: 10,\n                                display: \"flex\",\n                                flexDirection: \"column\",\n                                justifyContent: \"center\",\n                                borderBottomRightRadius: 10,\n                                fontWeight: \"bold\",\n                                color: \"white\",\n                              }\n                            : {\n                                color: \"rgb(64, 75, 105)\",\n                                cursor: \"pointer\",\n                                border: \"3px solid rgb(64, 75, 105)\",\n                                padding: \"5px 15px\",\n                                borderTopRightRadius: 10,\n                                borderBottomRightRadius: 10,\n                                fontWeight: \"bold\",\n                              }\n                        }\n                        onClick={() =>\n                          this.setState({\n                            showGlobalChartType: \"BarChart\",\n                          })\n                        }\n                      >\n                        Bar\n                      </div>\n                    </div>\n                    <SimpleLineChart\n                      chart={this.state.showGlobalChartType}\n                      customTooltip={true}\n                      grid={false}\n                      data={totalData}\n                      labels={[\"Confirmed\", \"Active\", \"Deaths\"]}\n                      colors={[\"#e43339\", \"#192a56\", \"#535c68\"]}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-sm-6 col-12\">\n                  <div\n                    style={{\n                      minHeight: 368,\n                      background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\n                      paddingBottom: 15,\n                      paddingLeft: 15,\n                      paddingTop: 30,\n                      borderRadius: 15,\n                      marginBottom: 15,\n                    }}\n                  >\n                    <div className=\"row\" style={{ justifyContent: \"center\" }}>\n                      <div className=\"col-sm-6\">\n                        <Select\n                          isClearable={false}\n                          isSearchable={false}\n                          onChange={(selectedOption) => {\n                            this.setState({\n                              filterByCases:\n                                selectedOption === null\n                                  ? \"confirmed\"\n                                  : selectedOption.value,\n                            });\n                          }}\n                          styles={colourStyles}\n                          placeholder=\"Top 10 Confirmed\"\n                          options={[\n                            { value: \"confirmed\", label: \"Top 10 Confirmed\" },\n                            { value: \"active\", label: \"Top 10 Active\" },\n                            { value: \"deaths\", label: \"Top 10 Deaths\" },\n                            { value: \"recovered\", label: \"Top 10 Recovered\" },\n                          ]}\n                        />\n                      </div>\n                    </div>\n                    <CustomChart\n                      placeholder={false}\n                      emptyClassName={\"m-t-40\"}\n                      chartArea={{ left: 10, top: 15, right: 10, bottom: 15 }}\n                      rows={pieChartData}\n                      columns={Columns}\n                      chartType={\"PieChart\"}\n                      height={\"270px\"}\n                    />\n                  </div>\n                </div>\n              </div>\n              {this.state.isChart === 1 ? (\n                <div>\n                  <Select\n                    isClearable={true}\n                    onChange={(selectedOption) => {\n                      this.setState({\n                        timelines: [],\n                        selectedCountry: true,\n                      });\n                      this.state.isChart === 0\n                        ? this.renderCards(\n                            selectedOption === null\n                              ? _.chunk(Object.keys(Countrys), 9)[0]\n                              : [selectedOption.value.toUpperCase()]\n                          )\n                        : this.renderCharts(\n                            selectedOption === null\n                              ? _.chunk(Object.keys(Countrys), 9)[0]\n                              : [selectedOption.value.toUpperCase()]\n                          );\n                    }}\n                    styles={colourStyles}\n                    options={options}\n                  />\n                </div>\n              ) : null}\n              {this.state.isChart === 0 ? (\n                <div style={{ marginTop: 20 }}>\n                  <input\n                    defaultValue={this.state.searchString}\n                    type=\"text\"\n                    placeholder=\"Search\"\n                    onChange={(e) =>\n                      this.setState({\n                        searchString: e.target.value.toLowerCase(),\n                        selectedCountry: false,\n                      })\n                    }\n                  />\n                </div>\n              ) : null}\n              <div\n                style={{\n                  textAlign: \"right\",\n                  padding: \"15px 0px\",\n                  marginTop: 15,\n                }}\n              >\n                <span\n                  onClick={() => {\n                    ReactGA.event({\n                      category: \"Global\",\n                      action: \"Chart selected\",\n                      label: \"Chart\",\n                    });\n                    this.setState({\n                      isChart: 1,\n                      selectedCountry: false,\n                      locationLoader: true,\n                    });\n                  }}\n                  style={\n                    this.state.isChart === 1\n                      ? {\n                          background: \"#404b69\",\n                          fontWeight: \"bold\",\n                          cursor: \"pointer\",\n                          color: \"white\",\n                          padding: \"10px 20px\",\n                          borderRadius: \"20px 0px 0px 20px\",\n                        }\n                      : {\n                          background: \"white\",\n                          fontWeight: \"bold\",\n                          cursor: \"pointer\",\n                          color: \"#404b69\",\n                          padding: \"10px 20px\",\n                          borderRadius: \"20px 0px 0px 20px\",\n                        }\n                  }\n                >\n                  Chart\n                </span>\n                <span\n                  onClick={() => {\n                    ReactGA.event({\n                      category: \"Global\",\n                      action: \"Map selected\",\n                      label: \"Map\",\n                    });\n                    this.setState({\n                      isChart: 3,\n                      selectedCountry: false,\n                    });\n                  }}\n                  style={\n                    this.state.isChart === 3\n                      ? {\n                          background: \"#404b69\",\n                          fontWeight: \"bold\",\n                          cursor: \"pointer\",\n                          color: \"white\",\n                          padding: \"10px 20px\",\n                        }\n                      : {\n                          background: \"white\",\n                          fontWeight: \"bold\",\n                          cursor: \"pointer\",\n                          color: \"#404b69\",\n                          padding: \"10px 20px\",\n                        }\n                  }\n                >\n                  Map\n                </span>\n                <span\n                  onClick={() => {\n                    ReactGA.event({\n                      category: \"Global\",\n                      action: \"Table selected\",\n                      label: \"Table\",\n                    });\n                    this.setState({\n                      isChart: 2,\n                      selectedCountry: false,\n                    });\n                  }}\n                  style={\n                    this.state.isChart === 2\n                      ? {\n                          background: \"#404b69\",\n                          fontWeight: \"bold\",\n                          cursor: \"pointer\",\n                          color: \"white\",\n                          padding: \"10px 20px\",\n                        }\n                      : {\n                          background: \"white\",\n                          fontWeight: \"bold\",\n                          cursor: \"pointer\",\n                          color: \"#404b69\",\n                          padding: \"10px 20px\",\n                        }\n                  }\n                >\n                  Table\n                </span>\n                <span\n                  onClick={() => {\n                    ReactGA.event({\n                      category: \"Global\",\n                      action: \"Card selected\",\n                      label: \"Card\",\n                    });\n                    this.setState({\n                      isChart: 0,\n                      selectedCountry: false,\n                    });\n                  }}\n                  style={\n                    this.state.isChart === 0\n                      ? {\n                          background: \"#404b69\",\n                          fontWeight: \"bold\",\n                          cursor: \"pointer\",\n                          color: \"white\",\n                          padding: \"10px 20px\",\n                          borderRadius: \"0px 20px 20px 0px\",\n                        }\n                      : {\n                          background: \"white\",\n                          fontWeight: \"bold\",\n                          cursor: \"pointer\",\n                          color: \"#404b69\",\n                          padding: \"10px 20px\",\n                          borderRadius: \"0px 20px 20px 0px\",\n                        }\n                  }\n                >\n                  Card\n                </span>\n              </div>\n              {this.state.isChart === 3 ? (\n                <div className=\"row\" style={{ marginTop: 20 }}>\n                  <div\n                    className=\"col-sm-12 col-12\"\n                    style={{ minHeight: \"368px\" }}\n                  >\n                    <div\n                      style={{\n                        minHeight: 368,\n                        border: \"2px solid rgb(255, 252, 220)\",\n                        paddingBottom: 15,\n                        paddingTop: 30,\n                        borderRadius: 15,\n                        marginBottom: 15,\n                      }}\n                    >\n                      <div\n                        style={{ display: \"flex\", justifyContent: \"center\" }}\n                      >\n                        <div\n                          style={\n                            this.state.mapFilter === \"confirmed\"\n                              ? {\n                                  background: \"rgb(68, 138, 255)\",\n                                  color: \"white\",\n                                  borderRadius: 5,\n                                  padding: \"5px 10px\",\n                                  fontWeight: \"bold\",\n                                  margin: \"0px 5px\",\n                                  cursor: \"pointer\",\n                                }\n                              : {\n                                  border: \"2px solid rgb(68, 138, 255)\",\n                                  color: \"rgb(68, 138, 255)\",\n                                  borderRadius: 5,\n                                  padding: \"5px 10px\",\n                                  fontWeight: \"bold\",\n                                  margin: \"0px 5px\",\n                                  cursor: \"pointer\",\n                                }\n                          }\n                          onClick={() =>\n                            this.setState({\n                              mapFilter: \"confirmed\",\n                            })\n                          }\n                        >\n                          Confirmed\n                        </div>\n                        <div\n                          style={\n                            this.state.mapFilter === \"recovered\"\n                              ? {\n                                  background: \"rgb(76, 175, 80)\",\n                                  color: \"white\",\n                                  borderRadius: 5,\n                                  padding: \"5px 10px\",\n                                  fontWeight: \"bold\",\n                                  margin: \"0px 5px\",\n                                  cursor: \"pointer\",\n                                }\n                              : {\n                                  border: \"2px solid rgb(76, 175, 80)\",\n                                  color: \"rgb(76, 175, 80)\",\n                                  borderRadius: 5,\n                                  padding: \"5px 10px\",\n                                  fontWeight: \"bold\",\n                                  margin: \"0px 5px\",\n                                  cursor: \"pointer\",\n                                }\n                          }\n                          onClick={() =>\n                            this.setState({\n                              mapFilter: \"recovered\",\n                            })\n                          }\n                        >\n                          Recovered\n                        </div>\n                        <div\n                          style={\n                            this.state.mapFilter === \"deaths\"\n                              ? {\n                                  background: \"rgb(255, 82, 82)\",\n                                  color: \"white\",\n                                  borderRadius: 5,\n                                  padding: \"5px 10px\",\n                                  fontWeight: \"bold\",\n                                  margin: \"0px 5px\",\n                                  cursor: \"pointer\",\n                                }\n                              : {\n                                  border: \"2px solid rgb(255, 82, 82)\",\n                                  color: \"rgb(255, 82, 82)\",\n                                  borderRadius: 5,\n                                  padding: \"5px 10px\",\n                                  fontWeight: \"bold\",\n                                  margin: \"0px 5px\",\n                                  cursor: \"pointer\",\n                                }\n                          }\n                          onClick={() =>\n                            this.setState({\n                              mapFilter: \"deaths\",\n                            })\n                          }\n                        >\n                          Deaths\n                        </div>\n                      </div>\n                      <DataMap\n                        mapFilter={this.state.mapFilter}\n                        data={\n                          this.state.globalData.length !== 0\n                            ? this.state.globalData.filter(\n                                (location) => location.title !== \"World\"\n                              )\n                            : []\n                        }\n                        setTooltipContent={(content) =>\n                          this.setState({ setTooltipContent: content })\n                        }\n                      />\n                      <ReactTooltip>\n                        {this.state.setTooltipContent.length !== 0 ? (\n                          <div>\n                            <span\n                              style={{\n                                color: this.renderTooltipLabelColor(\n                                  Object.keys(this.state.setTooltipContent[0])\n                                ),\n                                fontWeight: \"bold\",\n                                fontSize: 16,\n                              }}\n                            >\n                              {Object.values(this.state.setTooltipContent[0])}\n                            </span>\n                            <br />\n                            <span\n                              style={{\n                                color: this.renderTooltipLabelColor(\n                                  Object.keys(this.state.setTooltipContent[0])\n                                ),\n                                fontWeight: \"bold\",\n                                fontSize: 16,\n                              }}\n                            >\n                              {Object.keys(this.state.setTooltipContent[1])}{\" \"}\n                              {\": \"}\n                              {Object.values(\n                                this.state.setTooltipContent[1]\n                              )}{\" \"}\n                              <span\n                                style={{ fontSize: 20, fontWeight: \"bold\" }}\n                              >\n                                &#9650;\n                              </span>\n                              {Object.values(this.state.setTooltipContent[5])}\n                            </span>\n                            <br />\n                            <span\n                              style={{\n                                color: this.renderTooltipLabelColor(\n                                  Object.keys(this.state.setTooltipContent[2])\n                                ),\n                                fontWeight: \"bold\",\n                                fontSize: 16,\n                              }}\n                            >\n                              {Object.keys(this.state.setTooltipContent[2])}{\" \"}\n                              {\": \"}\n                              {Object.values(\n                                this.state.setTooltipContent[2]\n                              )}{\" \"}\n                              <span\n                                style={{ fontSize: 20, fontWeight: \"bold\" }}\n                              >\n                                &#9650;\n                              </span>\n                              {Object.values(this.state.setTooltipContent[4])}\n                            </span>\n                            <br />\n                            <span\n                              style={{\n                                color: this.renderTooltipLabelColor(\n                                  Object.keys(this.state.setTooltipContent[3])\n                                ),\n                                fontWeight: \"bold\",\n                                fontSize: 16,\n                              }}\n                            >\n                              {Object.keys(this.state.setTooltipContent[3])}{\" \"}\n                              {\": \"}\n                              {Object.values(this.state.setTooltipContent[3])}\n                            </span>\n                            <br />\n                          </div>\n                        ) : (\n                          \"\"\n                        )}\n                      </ReactTooltip>\n                    </div>\n                  </div>\n                </div>\n              ) : null}\n              {this.state.isChart === 2 ? (\n                <div\n                  className=\"row\"\n                  style={{ marginTop: 20, marginBottom: 15 }}\n                >\n                  <div className=\"col-sm-12\">\n                    <div\n                      style={{\n                        background: \"white\",\n                        color: \"#404b69\",\n                        borderRadius: 10,\n                      }}\n                    >\n                      <ReactTable\n                        style={{ minHeight: 500 }}\n                        data={data}\n                        columns={columns}\n                        defaultPageSize={10}\n                        className=\"-striped -highlight\"\n                        noDataText={<b>No data found</b>}\n                        getTheadProps={(state, rowInfo, column) => {\n                          return {\n                            style: {\n                              fontWeight: \"bold\",\n                            },\n                          };\n                        }}\n                        filterable\n                      />\n                    </div>\n                  </div>\n                </div>\n              ) : null}\n              {this.state.isChart === 0 ? (\n                this.state.locationLoader === true ? (\n                  <div>\n                    <img src={Virus} alt=\"Loader\" />\n                  </div>\n                ) : (\n                  <div className=\"row\">\n                    {this.state.globalData.length !== 0\n                      ? this.state.globalData\n                          .filter(\n                            (location) =>\n                              location.title !== \"World\" &&\n                              location.title\n                                .toLowerCase()\n                                .includes(this.state.searchString)\n                          )\n                          .map((location, index) => {\n                            return (\n                              <div\n                                key={index}\n                                className=\"col-sm-4\"\n                                style={{ padding: 15 }}\n                              >\n                                <div\n                                  style={{\n                                    textAlign: \"center\",\n                                    borderRadius: 10,\n                                    background: \"white\",\n                                    color: \"#404b69\",\n                                  }}\n                                >\n                                  <label\n                                    style={{\n                                      borderTopLeftRadius: 10,\n                                      borderTopRightRadius: 10,\n                                      color: \"white\",\n                                      width: \"100%\",\n                                      fontSize: 18,\n                                      fontWeight: \"bold\",\n                                      padding: 10,\n                                      background: \"#404b69\",\n                                    }}\n                                  >\n                                    {location.title}\n                                  </label>\n                                  <br />\n                                  <div className=\"row justify-content-center\">\n                                    <div\n                                      style={{\n                                        padding: 20,\n                                        fontWeight: \"bold\",\n                                      }}\n                                    >\n                                      <div>\n                                        {location.confirmed}\n                                        {location.confirmed_today ===\n                                        \"\" ? null : (\n                                          <span\n                                            style={{\n                                              fontSize: 12,\n                                              color: \"#e43339\",\n                                            }}\n                                          >\n                                            {\"  \"}\n                                            <span\n                                              style={{\n                                                fontSize: 17,\n                                                fontWeight: \"bold\",\n                                              }}\n                                            >\n                                              &#9650;\n                                            </span>\n                                            {location.confirmed_today}\n                                          </span>\n                                        )}\n                                      </div>\n                                      <div>Confirmed</div>\n                                    </div>\n                                    <div\n                                      style={{\n                                        padding: 20,\n                                        fontWeight: \"bold\",\n                                      }}\n                                    >\n                                      <div>{location.active}</div>\n                                      <div>Active</div>\n                                    </div>\n                                    <div\n                                      style={{\n                                        padding: 20,\n                                        fontWeight: \"bold\",\n                                      }}\n                                    >\n                                      <div>\n                                        {location.deaths}\n                                        {location.deaths_today === \"\" ? null : (\n                                          <span\n                                            style={{\n                                              fontSize: 12,\n                                              color: \"#535c68\",\n                                            }}\n                                          >\n                                            {\"  \"}\n                                            <span\n                                              style={{\n                                                fontSize: 17,\n                                                fontWeight: \"bold\",\n                                              }}\n                                            >\n                                              &#9650;\n                                            </span>\n                                            {location.deaths_today}\n                                          </span>\n                                        )}\n                                      </div>\n                                      <div>Deaths</div>\n                                    </div>\n                                    <div\n                                      style={{\n                                        padding: 20,\n                                        fontWeight: \"bold\",\n                                      }}\n                                    >\n                                      <div>{location.recovered}</div>\n                                      <div>Recovered</div>\n                                    </div>\n                                    <div\n                                      style={{\n                                        padding: 20,\n                                        fontWeight: \"bold\",\n                                      }}\n                                    >\n                                      <div>{location.critical}</div>\n                                      <div>Serious</div>\n                                    </div>\n                                    <div\n                                      style={{\n                                        padding: 20,\n                                        fontWeight: \"bold\",\n                                      }}\n                                    >\n                                      <div>{location.totaltests}</div>\n                                      <div>Tests</div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            );\n                          })\n                      : null}\n                  </div>\n                )\n              ) : null}{\" \"}\n              {this.state.isChart === 1 ? (\n                <div className=\"row\">\n                  {this.state.locationLoader === true ? (\n                    <div style={{ width: \"100%\" }}>\n                      <img src={Virus} alt=\"Loader\" />\n                    </div>\n                  ) : this.state.timelines.length !== 0 ? (\n                    this.state.timelines.map((timeline, index1) => {\n                      let data = Object.keys(timeline.timelineitems[0])\n                        .filter((data) => data !== \"stat\" && data !== todayDate)\n                        .map((dataKey, index) => {\n                          return {\n                            name: dataKey,\n                            Confirmed:\n                              timeline.timelineitems[0][dataKey].total_cases,\n                            Deaths:\n                              timeline.timelineitems[0][dataKey].total_deaths,\n                            Recovered:\n                              timeline.timelineitems[0][dataKey]\n                                .total_recoveries,\n                            [\"New Conf.\"]:\n                              timeline.timelineitems[0][dataKey]\n                                .new_daily_cases,\n                            [\"New Deaths\"]:\n                              timeline.timelineitems[0][dataKey]\n                                .new_daily_deaths,\n                          };\n                        });\n                      let confirmed =\n                        this.state.cards.length !== 0 &&\n                        typeof Object.values(\n                          this.state.cards[0].countryitems[0]\n                        ).filter(\n                          (country) =>\n                            country !== \"ok\" &&\n                            country.title ===\n                              timeline.countrytimelinedata[0].info.title\n                        )[0] !== \"undefined\"\n                          ? Object.values(\n                              this.state.cards[0].countryitems[0]\n                            ).filter(\n                              (country) =>\n                                country !== \"ok\" &&\n                                country.title ===\n                                  timeline.countrytimelinedata[0].info.title\n                            )[0].total_cases\n                          : Object.values(timeline.timelineitems[0])[\n                              Object.values(timeline.timelineitems[0]).length -\n                                2\n                            ].total_cases;\n                      let deaths =\n                        this.state.cards.length !== 0 &&\n                        typeof Object.values(\n                          this.state.cards[0].countryitems[0]\n                        ).filter(\n                          (country) =>\n                            country !== \"ok\" &&\n                            country.title ===\n                              timeline.countrytimelinedata[0].info.title\n                        )[0] !== \"undefined\"\n                          ? Object.values(\n                              this.state.cards[0].countryitems[0]\n                            ).filter(\n                              (country) =>\n                                country !== \"ok\" &&\n                                country.title ===\n                                  timeline.countrytimelinedata[0].info.title\n                            )[0].total_deaths\n                          : Object.values(timeline.timelineitems[0])[\n                              Object.values(timeline.timelineitems[0]).length -\n                                2\n                            ].total_deaths;\n                      let recovered =\n                        this.state.cards.length !== 0 &&\n                        typeof Object.values(\n                          this.state.cards[0].countryitems[0]\n                        ).filter(\n                          (country) =>\n                            country !== \"ok\" &&\n                            country.title ===\n                              timeline.countrytimelinedata[0].info.title\n                        )[0] !== \"undefined\"\n                          ? Object.values(\n                              this.state.cards[0].countryitems[0]\n                            ).filter(\n                              (country) =>\n                                country !== \"ok\" &&\n                                country.title ===\n                                  timeline.countrytimelinedata[0].info.title\n                            )[0].total_recovered\n                          : Object.values(timeline.timelineitems[0])[\n                              Object.values(timeline.timelineitems[0]).length -\n                                2\n                            ].total_recoveries;\n                      let NewConfirmed =\n                        this.state.cards.length !== 0 &&\n                        typeof Object.values(\n                          this.state.cards[0].countryitems[0]\n                        ).filter(\n                          (country) =>\n                            country !== \"ok\" &&\n                            country.title ===\n                              timeline.countrytimelinedata[0].info.title\n                        )[0] !== \"undefined\"\n                          ? Object.values(\n                              this.state.cards[0].countryitems[0]\n                            ).filter(\n                              (country) =>\n                                country !== \"ok\" &&\n                                country.title ===\n                                  timeline.countrytimelinedata[0].info.title\n                            )[0].total_new_cases_today\n                          : Object.values(timeline.timelineitems[0])[\n                              Object.values(timeline.timelineitems[0]).length -\n                                2\n                            ].new_daily_cases;\n                      let NewDeaths =\n                        this.state.cards.length !== 0 &&\n                        typeof Object.values(\n                          this.state.cards[0].countryitems[0]\n                        ).filter(\n                          (country) =>\n                            country !== \"ok\" &&\n                            country.title ===\n                              timeline.countrytimelinedata[0].info.title\n                        )[0] !== \"undefined\"\n                          ? Object.values(\n                              this.state.cards[0].countryitems[0]\n                            ).filter(\n                              (country) =>\n                                country !== \"ok\" &&\n                                country.title ===\n                                  timeline.countrytimelinedata[0].info.title\n                            )[0].total_new_deaths_today\n                          : Object.values(timeline.timelineitems[0])[\n                              Object.values(timeline.timelineitems[0]).length -\n                                2\n                            ].new_daily_deaths;\n                      if (\n                        this.state.cards.length !== 0 &&\n                        typeof Object.values(\n                          this.state.cards[0].countryitems[0]\n                        ).filter(\n                          (country) =>\n                            country !== \"ok\" &&\n                            country.title ===\n                              timeline.countrytimelinedata[0].info.title\n                        )[0] !== \"undefined\"\n                      ) {\n                        data.push({\n                          name: todayDate,\n                          Confirmed: Object.values(\n                            this.state.cards[0].countryitems[0]\n                          ).filter(\n                            (country) =>\n                              country.title ===\n                              timeline.countrytimelinedata[0].info.title\n                          )[0].total_cases,\n                          Deaths: Object.values(\n                            this.state.cards[0].countryitems[0]\n                          ).filter(\n                            (country) =>\n                              country.title ===\n                              timeline.countrytimelinedata[0].info.title\n                          )[0].total_deaths,\n                          Recovered: Object.values(\n                            this.state.cards[0].countryitems[0]\n                          ).filter(\n                            (country) =>\n                              country.title ===\n                              timeline.countrytimelinedata[0].info.title\n                          )[0].total_recovered,\n                          [\"New Conf.\"]: Object.values(\n                            this.state.cards[0].countryitems[0]\n                          ).filter(\n                            (country) =>\n                              country.title ===\n                              timeline.countrytimelinedata[0].info.title\n                          )[0].total_new_cases_today,\n                          [\"New Deaths\"]: Object.values(\n                            this.state.cards[0].countryitems[0]\n                          ).filter(\n                            (country) =>\n                              country.title ===\n                              timeline.countrytimelinedata[0].info.title\n                          )[0].total_new_deaths_today,\n                        });\n                      }\n                      return (\n                        <div\n                          key={index1}\n                          className=\"col-sm-4\"\n                          style={{ padding: 15 }}\n                        >\n                          <div\n                            style={{\n                              background: \"white\",\n                              borderRadius: 10,\n                            }}\n                          >\n                            <label\n                              style={{\n                                borderTopLeftRadius: 10,\n                                borderTopRightRadius: 10,\n                                color: \"white\",\n                                width: \"100%\",\n                                fontSize: 18,\n                                fontWeight: \"bold\",\n                                padding: 10,\n                                background: \"#404b69\",\n                              }}\n                            >\n                              {timeline.countrytimelinedata[0].info.title}\n                            </label>\n                            <br />\n                            <div className=\"row justify-content-center\">\n                              <div\n                                style={{\n                                  padding: 20,\n                                  fontWeight: \"bold\",\n                                  color: \"#92063e\",\n                                }}\n                              >\n                                <div>\n                                  {confirmed}\n                                  {NewConfirmed === 0 ? null : (\n                                    <span style={{ fontSize: 13 }}>\n                                      {\"  \"}\n                                      <span\n                                        style={{\n                                          fontSize: 17,\n                                          fontWeight: \"bold\",\n                                        }}\n                                      >\n                                        &#9650;\n                                      </span>\n                                      {NewConfirmed}\n                                    </span>\n                                  )}\n                                </div>\n                                <div>Confirmed</div>\n                              </div>\n                              <div\n                                style={{\n                                  padding: 20,\n                                  fontWeight: \"bold\",\n                                  color: \"#404b69\",\n                                }}\n                              >\n                                <div>\n                                  {deaths}\n                                  {NewDeaths === 0 ? null : (\n                                    <span style={{ fontSize: 13 }}>\n                                      {\"  \"}\n                                      <span\n                                        style={{\n                                          fontSize: 17,\n                                          fontWeight: \"bold\",\n                                        }}\n                                      >\n                                        &#9650;\n                                      </span>\n                                      {NewDeaths}\n                                    </span>\n                                  )}\n                                </div>\n                                <div>Deaths</div>\n                              </div>\n                              <div\n                                style={{\n                                  padding: 20,\n                                  fontWeight: \"bold\",\n                                  color: \"#2F847C\",\n                                }}\n                              >\n                                <div>{recovered}</div>\n                                <div>Recovered</div>\n                              </div>\n                            </div>\n                            <SimpleLineChart\n                              labels={[\n                                \"Confirmed\",\n                                \"Recovered\",\n                                \"Deaths\",\n                                \"New Conf.\",\n                                \"New Deaths\",\n                              ]}\n                              colors={[\n                                \"#e43339\",\n                                \"#006266\",\n                                \"#535c68\",\n                                \"#192a56\",\n                                \"#192a56\",\n                              ]}\n                              data={data}\n                            />\n                          </div>\n                        </div>\n                      );\n                    })\n                  ) : null}\n                  <br />\n                  {!this.state.selectedCountry ? (\n                    <div className=\"row\" style={{ width: \"100%\", padding: 30 }}>\n                      <Pagination\n                        totalRecords={Object.keys(Countrys).length}\n                        pageLimit={9}\n                        pageNeighbours={1}\n                        onPageChanged={this.onPageChanged}\n                      />\n                    </div>\n                  ) : null}\n                </div>\n              ) : null}\n            </div>\n            <div style={{ padding: 15 }}>\n              Designed and Developed by{\"  \"}\n              <a\n                style={{\n                  color: \"#f6565b\",\n                  fontWeight: \"bold\",\n                  textDecoration: \"none\",\n                }}\n                href=\"https://miteshtagadiya.js.org\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                Mitesh Tagadiya\n              </a>\n            </div>\n          </div>\n        </div>\n      </ErrorBoundary>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport India from \"./India\";\nimport ReactGA from \"react-ga\";\nimport { createBrowserHistory } from \"history\";\nimport App from \"./App\";\n\nconst history = createBrowserHistory();\n\nReactGA.initialize(\"UA-162840601-1\", { debug: true });\nReactGA.set({ page: window.location.pathname + window.location.hash }); // Update the user's current page\nReactGA.pageview(window.location.pathname + window.location.hash);\n\nhistory.listen((location) => {\n  ReactGA.set({ page: location.pathname + location.hash }); // Update the user's current page\n  ReactGA.pageview(location.pathname + location.hash); // Record a pageview for the given page\n});\n\nexport class Index extends Component {\n  render() {\n    return (\n      <div>\n        <React.Fragment>\n          <Switch>\n            <Route path=\"/india\" component={India} />\n            <Route path=\"/\" component={App} />\n          </Switch>\n        </React.Fragment>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Index);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ErrorBoundary from \"./ErrorBoundry\";\nimport { Index } from \"./Routes\";\n\nconst routing = (\n  <HashRouter>\n    <ErrorBoundary>\n      <Index />\n    </ErrorBoundary>\n  </HashRouter>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/virus.2d7d3b99.gif\";"],"sourceRoot":""}