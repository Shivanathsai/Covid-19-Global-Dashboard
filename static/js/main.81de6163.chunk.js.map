{"version":3,"sources":["assets/github1.png","SimpleLineChart/SimpleLineChart.jsx","Pagination.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","SimpleLineChart","props","data","undefined","name","uv","pv","amt","className","style","height","width","grid","strokeDasharray","hide","dataKey","axis","layout","legendLayout","margin","top","left","right","bottom","verticalAlign","type","label1","stroke","activeDot","r","fill","dot","label2","LEFT_PAGE","range","from","to","step","i","push","Pagination","gotoPage","page","onPageChanged","f","currentPage","Math","max","min","totalPages","paginationData","pageLimit","totalRecords","setState","handleClick","evt","preventDefault","handleMoveLeft","state","pageNeighbours","handleMoveRight","fetchPageNumbers","totalNumbers","startPage","endPage","pages","hasLeftSpill","hasRightSpill","spillOffset","length","extraPages","ceil","this","aria-label","map","index","key","href","onClick","aria-hidden","Component","App","chunkArray","array","size","result","arrayCopy","splice","data1","offset","currentLocations","locations","slice","timelines","selectedCountry","renderCharts","searchString","activePage","labels","isChart","datasets","label","backgroundColor","borderColor","borderWidth","data2","data3","fetch","method","then","res","json","response","catch","error","location","id","concat","colourStyles","control","styles","option","isDisabled","isFocused","isSelected","color","cursor","options","value","province","country","background","overflowY","display","justifyContent","fontSize","fontWeight","marginTop","paddingBottom","borderBottom","window","open","src","Github","alt","minHeight","padding","borderRadius","marginBottom","latest","confirmed","deaths","onChange","selectedOption","filter","toLowerCase","includes","placeholder","e","target","textAlign","borderTopLeftRadius","borderTopRightRadius","recovered","timeline","index1","Object","keys","Date","toDateString","Confirmed","Deaths","textDecoration","rel","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.81de6163.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github1.0ba2aa20.png\";","import React from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  CartesianGrid\n} from \"recharts\";\nimport \"./SimpleLineChart.css\";\n\nconst SimpleLineChart = props => {\n  const data =\n    props.data === undefined\n      ? [\n          { name: \"Jan\", uv: 4000, pv: 2400, amt: 2400 },\n          { name: \"Feb\", uv: 3000, pv: 1398, amt: 2210 },\n          { name: \"March\", uv: 2000, pv: 9800, amt: 2290 },\n          { name: \"April\", uv: 2780, pv: 3908, amt: 2000 },\n          { name: \"May\", uv: 1890, pv: 4800, amt: 2181 },\n          { name: \"June\", uv: 2390, pv: 3800, amt: 2500 },\n          { name: \"July\", uv: 3490, pv: 4300, amt: 2100 }\n        ]\n      : props.data;\n  return (\n    <div\n      className=\"container-Linechart\"\n      style={props.height ? { height: props.height } : { height: 270 }}\n    >\n      <ResponsiveContainer>\n        <LineChart\n          width={500}\n          height={100}\n          data={data}\n\n          //   data={data}\n          //   margin={{\n          //     top: 5,\n          //     right: 30,\n          //     left: 20,\n          //     bottom: 5\n          //   }}\n        >\n          {props.grid === false ? null : (\n            <CartesianGrid strokeDasharray=\"3 3\" />\n          )}\n\n          <XAxis hide={false} dataKey={props.axis ? props.axis : \"name\"} />\n\n          <YAxis />\n          <Tooltip />\n          <Legend\n            layout={props.legendLayout ? props.legendLayout : \"horizontal\"}\n            margin={{ top: 0, left: 0, right: 0, bottom: 10 }}\n            verticalAlign={props.verticalAlign ? props.verticalAlign : \"bottom\"}\n          />\n          <Line\n            type=\"monotone\"\n            dataKey={props.label1 ? props.label1 : \"pv\"}\n            stroke=\"#561845\"\n            activeDot={{ r: 8 }}\n            fill=\"#561845\"\n            dot={false}\n          />\n          <Line type=\"monotone\" dataKey={props.label2} stroke=\"#c23616\" />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default SimpleLineChart;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport \"./index.css\"\n\nconst LEFT_PAGE = 'LEFT';\nconst RIGHT_PAGE = 'RIGHT';\n\n/**\n * Helper method for creating a range of numbers\n * range(1, 5) => [1, 2, 3, 4, 5]\n */\nconst range = (from, to, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n}\n\nclass Pagination extends Component {\n\n  constructor(props) {\n    super(props);\n    const { totalRecords = null, pageLimit = 30, pageNeighbours = 0 } = props;\n\n    this.pageLimit = typeof pageLimit === 'number' ? pageLimit : 30;\n    this.totalRecords = typeof totalRecords === 'number' ? totalRecords : 0;\n\n    // pageNeighbours can be: 0, 1 or 2\n    this.pageNeighbours = typeof pageNeighbours === 'number'\n      ? Math.max(0, Math.min(pageNeighbours, 2))\n      : 0;\n\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\n\n    this.state = { currentPage: 1 };\n  }\n\n  componentDidMount() {\n    this.gotoPage(1);\n  }\n\n  gotoPage = page => {\n    const { onPageChanged = f => f } = this.props;\n\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\n\n    const paginationData = {\n      currentPage,\n      totalPages: this.totalPages,\n      pageLimit: this.pageLimit,\n      totalRecords: this.totalRecords\n    };\n\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\n  }\n\n  handleClick = page => evt => {\n    evt.preventDefault();\n    this.gotoPage(page);\n  }\n\n  handleMoveLeft = evt => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage - (this.pageNeighbours * 2) - 1);\n  }\n\n  handleMoveRight = evt => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage + (this.pageNeighbours * 2) + 1);\n  }\n\n  /**\n   * Let's say we have 10 pages and we set pageNeighbours to 2\n   * Given that the current page is 6\n   * The pagination control will look like the following:\n   *\n   * (1) < {4 5} [6] {7 8} > (10)\n   *\n   * (x) => terminal pages: first and last page(always visible)\n   * [x] => represents current page\n   * {...x} => represents page neighbours\n   */\n  fetchPageNumbers = () => {\n\n    const totalPages = this.totalPages;\n    const currentPage = this.state.currentPage;\n    const pageNeighbours = this.pageNeighbours;\n\n    /**\n     * totalNumbers: the total page numbers to show on the control\n     * totalBlocks: totalNumbers + 2 to cover for the left(<) and right(>) controls\n     */\n    const totalNumbers = (this.pageNeighbours * 2) + 3;\n    const totalBlocks = totalNumbers + 2;\n\n    if (totalPages > totalBlocks) {\n\n      const startPage = Math.max(2, currentPage - pageNeighbours);\n      const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\n\n      let pages = range(startPage, endPage);\n\n      /**\n       * hasLeftSpill: has hidden pages to the left\n       * hasRightSpill: has hidden pages to the right\n       * spillOffset: number of hidden pages either to the left or to the right\n       */\n      const hasLeftSpill = startPage > 2;\n      const hasRightSpill = (totalPages - endPage) > 1;\n      const spillOffset = totalNumbers - (pages.length + 1);\n\n      switch (true) {\n        // handle: (1) < {5 6} [7] {8 9} (10)\n        case (hasLeftSpill && !hasRightSpill): {\n          const extraPages = range(startPage - spillOffset, startPage - 1);\n          pages = [LEFT_PAGE, ...extraPages, ...pages];\n          break;\n        }\n\n        // handle: (1) {2 3} [4] {5 6} > (10)\n        case (!hasLeftSpill && hasRightSpill): {\n          const extraPages = range(endPage + 1, endPage + spillOffset);\n          pages = [...pages, ...extraPages, RIGHT_PAGE];\n          break;\n        }\n\n        // handle: (1) < {4 5} [6] {7 8} > (10)\n        case (hasLeftSpill && hasRightSpill):\n        default: {\n          pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\n          break;\n        }\n      }\n\n      return [1, ...pages, totalPages];\n\n    }\n\n    return range(1, totalPages);\n\n  }\n\n  render() {\n\n    if (!this.totalRecords || this.totalPages === 1) return null;\n\n    const { currentPage } = this.state;\n    const pages = this.fetchPageNumbers();\n\n    return (\n      <Fragment>\n        <nav aria-label=\"Countries Pagination\">\n          <ul className=\"pagination\">\n            { pages.map((page, index) => {\n\n              if (page === LEFT_PAGE) return (\n                <li key={index} className=\"page-item\">\n                  <a className=\"page-link\" href=\"#\" aria-label=\"Previous\" onClick={this.handleMoveLeft}>\n                    <span aria-hidden=\"true\">&laquo;</span>\n                    <span className=\"sr-only\">Previous</span>\n                  </a>\n                </li>\n              );\n\n              if (page === RIGHT_PAGE) return (\n                <li key={index} className=\"page-item\">\n                  <a className=\"page-link\" href=\"#\" aria-label=\"Next\" onClick={this.handleMoveRight}>\n                    <span aria-hidden=\"true\">&raquo;</span>\n                    <span className=\"sr-only\">Next</span>\n                  </a>\n                </li>\n              );\n\n              return (\n                <li key={index} className={`page-item${ currentPage === page ? ' active' : ''}`}>\n                  <a className=\"page-link\" href=\"#\" onClick={ this.handleClick(page) }>{ page }</a>\n                </li>\n              );\n\n            }) }\n\n          </ul>\n        </nav>\n      </Fragment>\n    );\n\n  }\n}\n\nPagination.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  pageLimit: PropTypes.number,\n  pageNeighbours: PropTypes.number,\n  onPageChanged: PropTypes.func\n};\n\nexport default Pagination;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Select from \"react-select\";\nimport SimpleLineChart from \"./SimpleLineChart/SimpleLineChart\";\nimport Pagination from \"./Pagination\";\nimport Github from \"./assets/github1.png\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchString: \"\",\n      currentPage: 0,\n      totalPages: 0,\n      activePage: 0,\n      selectedCountry: false,\n      data: [],\n      timelines: [],\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\"],\n      isChart: 0,\n      datasets: [\n        {\n          label: \"Rainfall\",\n          backgroundColor: \"rgba(75,192,192,1)\",\n          borderColor: \"rgba(0,0,0,1)\",\n          borderWidth: 2,\n          data: [65, 59, 80, 81, 56],\n          data1: [65, 59, 80, 81, 56],\n          data2: [65, 59, 80, 81, 56],\n          data3: [65, 59, 80, 81, 56]\n        }\n      ]\n    };\n  }\n\n  componentDidMount() {\n    fetch(`https://coronavirus-tracker-api.herokuapp.com/v2/locations`, {\n      method: \"GET\"\n    })\n      .then(res => res.json())\n      .then(response => {\n        this.setState({\n          data: response,\n          totalPages: this.chunkArray(response.locations, 9).length\n        });\n      })\n      .catch(error => {});\n  }\n\n  renderCharts(data) {\n    this.setState({\n      isChart: 1\n    });\n    data.map(location => {\n      fetch(\n        `https://coronavirus-tracker-api.herokuapp.com/v2/locations/${location.id}`,\n        {\n          method: \"GET\"\n        }\n      )\n        .then(res => res.json())\n        .then(response => {\n          this.setState(state => {\n            const timelines = state.timelines.concat(response);\n            return {\n              timelines\n            };\n          });\n        })\n        .catch(error => {});\n    });\n  }\n\n  chunkArray = (array, size) => {\n    let result = [];\n    let arrayCopy = [...array];\n    while (arrayCopy.length > 0) {\n      result.push(arrayCopy.splice(0, size));\n    }\n    return result;\n  };\n\n  onPageChanged = data1 => {\n    const { data } = this.state;\n    const { currentPage, totalPages, pageLimit } = data1;\n\n    const offset = (currentPage - 1) * pageLimit;\n    const currentLocations = data.locations.slice(offset, offset + pageLimit);\n    this.setState({\n      timelines: []\n    });\n    if (!this.state.selectedCountry) {\n      this.renderCharts(\n        this.chunkArray(this.state.data.locations, 9)[currentPage - 1]\n      );\n    }\n\n    this.setState({\n      currentPage: currentPage - 1,\n      currentLocations: currentLocations,\n      totalPages: totalPages\n    });\n  };\n\n  render() {\n    const colourStyles = {\n      control: styles => ({ ...styles, backgroundColor: \"white\" }),\n      option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n        return {\n          ...styles,\n          backgroundColor: isDisabled\n            ? null\n            : isSelected\n            ? \"#f6565b\"\n            : isFocused\n            ? \"#f6565b\"\n            : null,\n          color: isDisabled ? \"#ccc\" : isSelected ? \"white\" : \"black\",\n          cursor: isDisabled ? \"not-allowed\" : \"default\",\n\n          \":active\": {\n            ...styles[\":active\"],\n            backgroundColor: !isDisabled && (isSelected ? \"#f6565b\" : \"white\")\n          }\n        };\n      }\n    };\n\n    const options =\n      this.state.data !== [] && this.state.data.locations\n        ? this.state.data.locations.map(location => {\n            return {\n              value:\n                location.province === \"\" ? location.country : location.province,\n              label:\n                location.province === \"\" ? location.country : location.province\n            };\n          })\n        : [];\n\n    return (\n      <div\n        className=\"App\"\n        style={{\n          background: \"#172852\",\n          color: \"white\",\n          height: \"100vh\",\n          overflowY: \"scroll\"\n        }}\n      >\n        <div className=\"container\">\n          <div>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                fontSize: 40,\n                fontWeight: \"bold\",\n                marginTop: 30,\n                paddingBottom: 30,\n                borderBottom: \"2px solid white\"\n              }}\n            >\n              Covid-19 Global Dashboard\n              <img\n                onClick={() =>\n                  window.open(\n                    \"https://github.com/miteshtagadiya/Covid-19-Global-Dashboard\",\n                    \"_blank\"\n                  )\n                }\n                src={Github}\n                alt=\"github\"\n                style={{ height: 50, width: 50, cursor: \"pointer\" }}\n              />\n            </div>\n          </div>\n          <div style={{ minHeight: \"90vh\" }}>\n            <div className=\"row\" style={{ padding: \"30px 0px\" }}>\n              <div className=\"col-sm-4\" style={{ padding: 15 }}>\n                <div\n                  style={{\n                    padding: 20,\n                    fontWeight: \"bold\",\n                    background: \"linear-gradient(to right, #ee9ca7, #ffdde1)\",\n                    color: \"#530803\",\n                    borderRadius: 10\n                  }}\n                >\n                  <div style={{ fontSize: 35, marginBottom: 10 }}>\n                    {this.state.data.length !== 0\n                      ? this.state.data.latest.confirmed\n                      : 0}\n                  </div>\n                  <div style={{ fontSize: 18 }}>Confirmed</div>\n                </div>\n              </div>\n              <div className=\"col-sm-4\" style={{ padding: 15 }}>\n                <div\n                  style={{\n                    padding: 20,\n                    fontWeight: \"bold\",\n                    background: \"linear-gradient(to right, #ee9ca7, #ffdde1)\",\n                    color: \"#530803\",\n                    borderRadius: 10\n                  }}\n                >\n                  <div style={{ fontSize: 35, marginBottom: 10 }}>\n                    {this.state.data.length !== 0\n                      ? this.state.data.latest.deaths\n                      : 0}\n                  </div>\n                  <div style={{ fontSize: 18 }}>Deaths</div>\n                </div>\n              </div>\n              <div className=\"col-sm-4\" style={{ padding: 15 }}>\n                <div\n                  style={{\n                    padding: 20,\n                    fontWeight: \"bold\",\n                    background: \"linear-gradient(to right, #ee9ca7, #ffdde1)\",\n                    color: \"#530803\",\n                    borderRadius: 10\n                  }}\n                >\n                  <div style={{ fontSize: 35, marginBottom: 10 }}>\n                    {/* {this.state.data.length !== 0\n                    ? this.state.data.latest.recovered\n                    : 0} */}\n                    N/A\n                  </div>\n                  <div style={{ fontSize: 18 }}>Recovered</div>\n                </div>\n              </div>\n            </div>\n            {this.state.isChart === 1 ? (\n              <div>\n                <Select\n                  onChange={selectedOption => {\n                    this.setState({\n                      timelines: [],\n                      selectedCountry: true\n                    });\n                    this.renderCharts(\n                      this.state.data.locations.filter(location =>\n                        location.province === \"\"\n                          ? location.country\n                              .toLowerCase()\n                              .includes(selectedOption.value.toLowerCase())\n                          : location.province\n                              .toLowerCase()\n                              .includes(selectedOption.value.toLowerCase())\n                      )\n                    );\n                  }}\n                  styles={colourStyles}\n                  options={options}\n                />\n              </div>\n            ) : (\n              <div>\n                <input\n                  type=\"text\"\n                  placeholder=\"Search\"\n                  onChange={e =>\n                    this.setState({\n                      searchString: e.target.value\n                    })\n                  }\n                />\n              </div>\n            )}\n            <div\n              style={{ textAlign: \"right\", padding: \"15px 0px\", marginTop: 15 }}\n            >\n              <span\n                onClick={() =>\n                  this.setState({\n                    isChart: 1\n                  })\n                }\n                style={\n                  this.state.isChart === 1\n                    ? {\n                        background: \"#f6565b\",\n                        fontWeight: \"bold\",\n                        cursor: \"pointer\",\n                        color: \"white\",\n                        padding: \"10px 30px\",\n                        borderRadius: \"20px 0px 0px 20px\"\n                      }\n                    : {\n                        background: \"white\",\n                        fontWeight: \"bold\",\n                        cursor: \"pointer\",\n                        color: \"black\",\n                        padding: \"10px 30px\",\n                        borderRadius: \"20px 0px 0px 20px\"\n                      }\n                }\n              >\n                Chart\n              </span>\n              <span\n                onClick={() =>\n                  this.setState({ isChart: 0, selectedCountry: false })\n                }\n                style={\n                  this.state.isChart === 0\n                    ? {\n                        background: \"#f6565b\",\n                        fontWeight: \"bold\",\n                        cursor: \"pointer\",\n                        color: \"white\",\n                        padding: \"10px 30px\",\n                        borderRadius: \"0px 20px 20px 0px\"\n                      }\n                    : {\n                        background: \"white\",\n                        fontWeight: \"bold\",\n                        cursor: \"pointer\",\n                        color: \"black\",\n                        padding: \"10px 30px\",\n                        borderRadius: \"0px 20px 20px 0px\"\n                      }\n                }\n              >\n                Card\n              </span>\n            </div>\n            {this.state.isChart === 0 ? (\n              <div className=\"row\">\n                {this.state.data.length !== 0\n                  ? this.state.data.locations\n                      .filter(location =>\n                        location.province === \"\"\n                          ? location.country\n                              .toLowerCase()\n                              .includes(this.state.searchString.toLowerCase())\n                          : location.province\n                              .toLowerCase()\n                              .includes(this.state.searchString.toLowerCase())\n                      )\n                      .map((location, index) => {\n                        return (\n                          <div\n                            key={index}\n                            className=\"col-sm-4\"\n                            style={{ padding: 15 }}\n                          >\n                            <div\n                              style={{\n                                textAlign: \"center\",\n                                borderRadius: 10,\n                                background: \"white\",\n                                color: \"black\"\n                              }}\n                            >\n                              <label\n                                style={{\n                                  borderTopLeftRadius: 10,\n                                  borderTopRightRadius: 10,\n                                  color: \"white\",\n                                  width: \"100%\",\n                                  fontSize: 18,\n                                  fontWeight: \"bold\",\n                                  padding: 10,\n                                  background: \"#f6565b\"\n                                }}\n                              >\n                                {location.province === \"\"\n                                  ? location.country\n                                  : location.province}\n                              </label>\n                              <br />\n                              <div className=\"row justify-content-center\">\n                                <div\n                                  style={{ padding: 20, fontWeight: \"bold\" }}\n                                >\n                                  <div>{location.latest.confirmed}</div>\n                                  <div>Confirmed</div>\n                                </div>\n                                <div\n                                  style={{ padding: 20, fontWeight: \"bold\" }}\n                                >\n                                  <div>{location.latest.deaths}</div>\n                                  <div>Deaths</div>\n                                </div>\n                                <div\n                                  style={{ padding: 20, fontWeight: \"bold\" }}\n                                >\n                                  <div>{location.latest.recovered}</div>\n                                  <div>Recovered</div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        );\n                      })\n                  : null}\n              </div>\n            ) : (\n              <div className=\"row\">\n                {this.state.timelines.length !== 0\n                  ? this.state.timelines\n                      .filter(locations =>\n                        locations.location.country\n                          .toLowerCase()\n                          .includes(this.state.searchString.toLowerCase())\n                      )\n                      .map((timeline, index1) => {\n                        let data = Object.keys(\n                          timeline.location.timelines.confirmed.timeline\n                        ).map((dataKey, index) => {\n                          return {\n                            name: new Date(dataKey).toDateString(),\n                            Confirmed:\n                              timeline.location.timelines.confirmed.timeline[\n                                dataKey\n                              ],\n                            Deaths:\n                              timeline.location.timelines.deaths.timeline[\n                                dataKey\n                              ]\n                          };\n                        });\n                        return (\n                          <div\n                            key={index1}\n                            className=\"col-sm-4\"\n                            style={{ padding: 15 }}\n                          >\n                            <div\n                              style={{ background: \"white\", borderRadius: 10 }}\n                            >\n                              <label\n                                style={{\n                                  borderTopLeftRadius: 10,\n                                  borderTopRightRadius: 10,\n                                  color: \"white\",\n                                  width: \"100%\",\n                                  fontSize: 18,\n                                  fontWeight: \"bold\",\n                                  padding: 10,\n                                  background: \"#f6565b\"\n                                }}\n                              >\n                                {timeline.location.province === \"\"\n                                  ? timeline.location.country\n                                  : timeline.location.province}\n                              </label>\n                              <br />\n                              <div className=\"row justify-content-center\">\n                                <div\n                                  style={{\n                                    padding: 20,\n                                    fontWeight: \"bold\",\n                                    color: \"#92063e\"\n                                  }}\n                                >\n                                  <div>\n                                    {timeline.location.latest.confirmed}\n                                  </div>\n                                  <div>Confirmed</div>\n                                </div>\n                                <div\n                                  style={{\n                                    padding: 20,\n                                    fontWeight: \"bold\",\n                                    color: \"black\"\n                                  }}\n                                >\n                                  <div>{timeline.location.latest.deaths}</div>\n                                  <div>Deaths</div>\n                                </div>\n                                <div\n                                  style={{\n                                    padding: 20,\n                                    fontWeight: \"bold\",\n                                    color: \"#2F847C\"\n                                  }}\n                                >\n                                  <div>\n                                    {timeline.location.latest.recovered}\n                                  </div>\n                                  <div>Recovered</div>\n                                </div>\n                              </div>\n                              <SimpleLineChart\n                                data={data}\n                                label2=\"Deaths\"\n                                label1=\"Confirmed\"\n                              />\n                            </div>\n                          </div>\n                        );\n                      })\n                  : null}\n                <br />\n                {!this.state.selectedCountry ? (\n                  <div className=\"row\" style={{ width: \"100%\", padding: 30 }}>\n                    <Pagination\n                      totalRecords={this.state.data.locations.length}\n                      pageLimit={9}\n                      pageNeighbours={2}\n                      onPageChanged={this.onPageChanged}\n                    />\n                  </div>\n                ) : null}\n              </div>\n            )}\n          </div>\n          <div style={{ padding: 15 }}>\n            Designed and Developed by{\"  \"}\n            <a\n              style={{\n                color: \"#f6565b\",\n                fontWeight: \"bold\",\n                textDecoration: \"none\"\n              }}\n              href=\"https://miteshtagadiya.js.org\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              Mitesh Tagadiya\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}