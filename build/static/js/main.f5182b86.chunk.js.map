{"version":3,"sources":["serviceWorker.js","ErrorBoundry.jsx","SimpleLineChart/SimpleLineChart.jsx","TinyChart.jsx","India.js","Pagination.jsx","App.js","Routes.jsx","index.js","assets/virus.gif","assets/github1.png","assets/india.png","assets/world.png"],"names":["Boolean","window","location","hostname","match","ErrorBoundary","props","state","hasError","error","errorInfo","console","this","children","React","Component","SimpleLineChart","data","undefined","name","uv","pv","amt","CustomTooltip","active","payload","label","className","style","background","padding","borderRadius","textAlign","fontWeight","color","map","item","index","key","value","filter","height","width","grid","strokeDasharray","hide","dataKey","axis","customTooltip","content","layout","legendLayout","margin","top","left","right","bottom","verticalAlign","labels","type","stroke","colors","activeDot","r","fill","dot","TinyChart","strokeWidth","PureComponent","jsfiddleUrl","India","chunkArray","array","size","result","arrayCopy","length","push","splice","searchString","currentPage","selectedCity","confirmedOpen","activeOpen","deathsOpen","totalPages","activePage","selectedCountry","locationLoader","stateWiseCity","india","timelines","isTable","datasets","backgroundColor","borderColor","borderWidth","data1","data2","data3","addEventListener","fetch","method","then","res","json","response","setState","catch","confirmedTinyChartData","cases_time_series","cases","totalconfirmed","date","confirmed","Number","activeTinyChartData","totaldeceased","totalrecovered","deathTinyChartData","recoveredTinyChartData","totalData","dailyrecovered","Confirmed","dailyconfirmed","Active","dailydeceased","Recovered","Deaths","dailyConfirmed","dailyActive","dailyRecovered","dailyDeaths","statewise","recovered","deaths","deltaConfirmed","delta","deltaActive","deltaRecovered","deltaDeaths","columns","Header","accessor","Cell","original","fontSize","cityData","Object","keys","city","districtData","cityColumns","totalConformedToday","record","totalActiveToday","totalDeathsToday","confirmedPopover","activePopover","deathsPopover","overflowY","display","justifyContent","marginTop","paddingBottom","borderBottom","onClick","open","src","Github","alt","cursor","history","IndiaIcon","World","marginLeft","minHeight","marginBottom","body","values","preferPlace","isOpen","onOuterAction","paddingLeft","paddingTop","Virus","placeholder","onChange","e","target","toLowerCase","includes","borderTopLeftRadius","borderTopRightRadius","defaultPageSize","noDataText","getTheadProps","rowInfo","column","getTdProps","instance","handleOriginal","filterable","SubComponent","row","showPagination","textDecoration","href","rel","withRouter","LEFT_PAGE","range","from","to","step","i","Pagination","gotoPage","page","onPageChanged","f","Math","max","min","paginationData","pageLimit","totalRecords","handleClick","evt","preventDefault","handleMoveLeft","pageNeighbours","handleMoveRight","fetchPageNumbers","totalNumbers","startPage","endPage","pages","hasLeftSpill","hasRightSpill","spillOffset","extraPages","ceil","aria-label","aria-hidden","App","renderCharts","_","chunk","Countrys","changeState","cards","globalTimelines","currentCardPage","totalCardPages","globalData","loadDefaultCards","isChart","header","results","renderCards","cardId","concat","colourStyles","control","styles","option","isDisabled","isFocused","isSelected","options","reportDate","totalConfirmed","totalRecovered","total","Date","todayDate","getMonth","getDate","getFullYear","countryitems","country","title","total_cases","total_active_cases","total_recovered","total_deaths","total_new_cases_today","total_new_deaths_today","isClearable","selectedOption","toUpperCase","defaultValue","total_serious_cases","timeline","index1","timelineitems","total_recoveries","new_daily_cases","new_daily_deaths","countrytimelinedata","info","NewConfirmed","NewDeaths","Index","Fragment","path","component","routing","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.f5182b86.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    console.error(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  CartesianGrid\n} from \"recharts\";\nimport \"./SimpleLineChart.css\";\n\nconst SimpleLineChart = props => {\n  const data =\n    props.data === undefined\n      ? [\n          { name: \"Jan\", uv: 4000, pv: 2400, amt: 2400 },\n          { name: \"Feb\", uv: 3000, pv: 1398, amt: 2210 },\n          { name: \"March\", uv: 2000, pv: 9800, amt: 2290 },\n          { name: \"April\", uv: 2780, pv: 3908, amt: 2000 },\n          { name: \"May\", uv: 1890, pv: 4800, amt: 2181 },\n          { name: \"June\", uv: 2390, pv: 3800, amt: 2500 },\n          { name: \"July\", uv: 3490, pv: 4300, amt: 2100 }\n        ]\n      : props.data;\n\n  const getIntroOfPage = label => {\n    if (label === \"Page A\") {\n      return \"Page A is about men's clothing\";\n    }\n    if (label === \"Page B\") {\n      return \"Page B is about women's dress\";\n    }\n    if (label === \"Page C\") {\n      return \"Page C is about women's bag\";\n    }\n    if (label === \"Page D\") {\n      return \"Page D is about household goods\";\n    }\n    if (label === \"Page E\") {\n      return \"Page E is about food\";\n    }\n    if (label === \"Page F\") {\n      return \"Page F is about baby food\";\n    }\n  };\n\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active) {\n      return (\n        <div\n          className=\"custom-tooltip\"\n          style={{ background: \"white\", padding: 15, borderRadius: 10 }}\n        >\n          <p\n            style={{ textAlign: \"center\", fontWeight: \"bold\", color: \"black\" }}\n          >\n            {label}\n          </p>\n          {payload.map((item, index) => {\n            return (\n              <div key={index}>\n                <span style={{ color: item.color, fontWeight: \"bold\" }}>\n                  {item.name}:{\" \"}\n                </span>\n                <span style={{ color: item.color, fontWeight: \"bold\" }}>\n                  {item.value}\n                  {\" [+\"}\n                  {\n                    props.data.filter(\n                      data => data?.name === item.payload.name\n                    )[0][`daily${item.name}`]\n                  }\n                  {/* {props.data[payload.payload.name][`daily${payload.name}`]} */}\n                  {\"]\"}\n                </span>\n                <br />\n              </div>\n            );\n          })}\n        </div>\n      );\n    }\n\n    return null;\n  };\n  return (\n    <div\n      className=\"container-Linechart\"\n      style={props.height ? { height: props.height } : { height: 270 }}\n    >\n      <ResponsiveContainer>\n        <LineChart\n          width={500}\n          height={100}\n          data={data}\n\n          //   data={data}\n          //   margin={{\n          //     top: 5,\n          //     right: 30,\n          //     left: 20,\n          //     bottom: 5\n          //   }}\n        >\n          {props.grid === false ? null : (\n            <CartesianGrid strokeDasharray=\"3 3\" />\n          )}\n\n          <XAxis hide={false} dataKey={props.axis ? props.axis : \"name\"} />\n\n          <YAxis />\n          {props.customTooltip ? (\n            <Tooltip content={<CustomTooltip />} />\n          ) : (\n            <Tooltip />\n          )}\n          <Legend\n            layout={props.legendLayout ? props.legendLayout : \"horizontal\"}\n            margin={{ top: 0, left: 0, right: 0, bottom: 10 }}\n            verticalAlign={props.verticalAlign ? props.verticalAlign : \"bottom\"}\n          />\n          {props.labels.map((label, index) => (\n            <Line\n              key={index}\n              type=\"monotone\"\n              dataKey={label}\n              stroke={props.colors[index]}\n              activeDot={{ r: 8 }}\n              fill={props.colors[index]}\n              dot={false}\n            />\n          ))}\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default SimpleLineChart;\n","import React, { PureComponent } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from \"recharts\";\n\nconst data = [\n  {\n    name: \"Page A\",\n    uv: 4000,\n    pv: 2400,\n    amt: 2400\n  },\n  {\n    name: \"Page B\",\n    uv: 3000,\n    pv: 1398,\n    amt: 2210\n  },\n  {\n    name: \"Page C\",\n    uv: 2000,\n    pv: 9800,\n    amt: 2290\n  },\n  {\n    name: \"Page D\",\n    uv: 2780,\n    pv: 3908,\n    amt: 2000\n  },\n  {\n    name: \"Page E\",\n    uv: 1890,\n    pv: 4800,\n    amt: 2181\n  },\n  {\n    name: \"Page F\",\n    uv: 2390,\n    pv: 3800,\n    amt: 2500\n  },\n  {\n    name: \"Page G\",\n    uv: 3490,\n    pv: 4300,\n    amt: 2100\n  }\n];\n\nexport default class TinyChart extends PureComponent {\n  static jsfiddleUrl = \"https://jsfiddle.net/alidingling/exh283uh/\";\n\n  \n\n  render() {\n    return (\n      <LineChart width={250} height={50} data={this.props.data}>\n        <Line\n          type=\"monotone\"\n          dataKey={this.props.label}\n          stroke={this.props.color}\n          strokeWidth={2}\n          dot={false}\n        />\n      </LineChart>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport ReactTable from \"react-table-6\";\nimport SimpleLineChart from \"./SimpleLineChart/SimpleLineChart\";\nimport \"react-table-6/react-table.css\";\nimport Github from \"./assets/github1.png\";\nimport TinyChart from \"./TinyChart\";\nimport IndiaIcon from \"./assets/india.png\";\nimport World from \"./assets/world.png\";\nimport { withRouter } from \"react-router-dom\";\nimport Virus from \"./assets/virus.gif\";\nimport Popover from \"react-popover\";\nimport ErrorBoundary from \"./ErrorBoundry\";\n\nclass India extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchString: \"\",\n      currentPage: 0,\n      selectedCity: \"\",\n      confirmedOpen: false,\n      activeOpen: false,\n      deathsOpen: false,\n      totalPages: 0,\n      activePage: 0,\n      selectedCountry: false,\n      locationLoader: false,\n      data: [],\n      stateWiseCity: [],\n      india: [],\n      timelines: [],\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\"],\n      isTable: 0,\n      datasets: [\n        {\n          label: \"Rainfall\",\n          backgroundColor: \"rgba(75,192,192,1)\",\n          borderColor: \"rgba(0,0,0,1)\",\n          borderWidth: 2,\n          data: [65, 59, 80, 81, 56],\n          data1: [65, 59, 80, 81, 56],\n          data2: [65, 59, 80, 81, 56],\n          data3: [65, 59, 80, 81, 56]\n        }\n      ]\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"focus\", () => {\n      fetch(`https://api.covid19india.org/data.json`, {\n        method: \"GET\"\n      })\n        .then(res => res.json())\n        .then(response => {\n          this.setState({\n            india: response,\n            locationLoader: false\n          });\n        })\n        .catch(error => {\n          this.setState({\n            locationLoader: false\n          });\n        });\n      fetch(\"https://api.covid19india.org/state_district_wise.json\", {\n        method: \"GET\"\n      })\n        .then(res => res.json())\n        .then(response => {\n          this.setState({\n            stateWiseCity: response\n          });\n        })\n        .catch(error => {});\n    });\n\n    this.setState({\n      locationLoader: true\n    });\n    fetch(`https://api.covid19india.org/data.json`, {\n      method: \"GET\"\n    })\n      .then(res => res.json())\n      .then(response => {\n        this.setState({\n          india: response,\n          locationLoader: false\n        });\n      })\n      .catch(error => {\n        this.setState({\n          locationLoader: false\n        });\n      });\n\n    fetch(\"https://api.covid19india.org/state_district_wise.json\", {\n      method: \"GET\"\n    })\n      .then(res => res.json())\n      .then(response => {\n        this.setState({\n          stateWiseCity: response\n        });\n      })\n      .catch(error => {});\n  }\n\n  chunkArray = (array, size) => {\n    let result = [];\n    let arrayCopy = [...array];\n    while (arrayCopy.length > 0) {\n      result.push(arrayCopy.splice(0, size));\n    }\n    return result;\n  };\n\n  render() {\n    let confirmedTinyChartData =\n      this.state.india.length !== 0\n        ? this.state.india.cases_time_series.map(cases => {\n            return cases.totalconfirmed !== \"\"\n              ? {\n                  name: cases.date,\n                  confirmed: Number(cases.totalconfirmed)\n                }\n              : null;\n          })\n        : null;\n\n    let activeTinyChartData =\n      this.state.india.length !== 0\n        ? this.state.india.cases_time_series.map(cases => {\n            return cases.totalconfirmed !== \"\"\n              ? {\n                  name: cases.date,\n                  confirmed:\n                    Number(cases.totalconfirmed) -\n                    Number(cases.totaldeceased) -\n                    Number(cases.totalrecovered)\n                }\n              : null;\n          })\n        : null;\n    let deathTinyChartData =\n      this.state.india.length !== 0\n        ? this.state.india.cases_time_series.map(cases => {\n            return cases.totaldeceased !== \"\"\n              ? {\n                  name: cases.date,\n                  confirmed: Number(cases.totaldeceased)\n                }\n              : null;\n          })\n        : null;\n    let recoveredTinyChartData =\n      this.state.india.length !== 0\n        ? this.state.india.cases_time_series.map(cases => {\n            return cases.totalrecovered !== \"\"\n              ? {\n                  name: cases.date,\n                  confirmed: Number(cases.totalrecovered)\n                }\n              : null;\n          })\n        : null;\n\n    let totalDataDaily =\n      this.state.india.length !== 0\n        ? this.state.india.cases_time_series.map(cases => {\n            return cases.dailyrecovered !== \"\"\n              ? {\n                  name: cases.date,\n                  Confirmed: Number(cases.dailyconfirmed),\n                  Active:\n                    Number(cases.dailyconfirmed) -\n                    Number(cases.dailyrecovered) -\n                    Number(cases.dailydeceased),\n                  Recovered: Number(cases.dailyrecovered),\n                  Deaths: Number(cases.dailydeceased)\n                }\n              : null;\n          })\n        : null;\n\n    let totalData =\n      this.state.india.length !== 0\n        ? this.state.india.cases_time_series.map(cases => {\n            return cases.totalrecovered !== \"\"\n              ? {\n                  name: cases.date,\n                  Confirmed: Number(cases.totalconfirmed),\n                  Active:\n                    Number(cases.totalconfirmed) -\n                    Number(cases.totalrecovered) -\n                    Number(cases.totaldeceased),\n                  Recovered: Number(cases.totalrecovered),\n                  Deaths: Number(cases.totaldeceased),\n                  dailyConfirmed: Number(cases.dailyconfirmed),\n                  dailyActive:\n                    Number(cases.dailyconfirmed) -\n                    Number(cases.dailyrecovered) -\n                    Number(cases.dailydeceased),\n                  dailyRecovered: Number(cases.dailyrecovered),\n                  dailyDeaths: Number(cases.dailydeceased)\n                }\n              : null;\n          })\n        : null;\n\n    const data =\n      this.state.india.length !== 0\n        ? this.state.india.statewise\n            .filter(state => state.state !== \"Total\")\n            .map(state => {\n              return {\n                state: state.state,\n                confirmed: Number(state.confirmed),\n                active: Number(state.active),\n                recovered: Number(state.recovered),\n                deaths: Number(state.deaths),\n                deltaConfirmed: Number(state.delta.confirmed),\n                deltaActive: Number(state.delta.active),\n                deltaRecovered: Number(state.delta.recovered),\n                deltaDeaths: Number(state.delta.deaths)\n              };\n            })\n        : [];\n\n    const columns =\n      this.state.india.length !== 0\n        ? [\n            {\n              Header: \"State/UT\",\n              accessor: \"state\" // String-based value accessors!\n            },\n            {\n              Header: \"Confirmed\",\n              accessor: \"confirmed\",\n              Cell: props => {\n                return (\n                  <>\n                    {props.original.deltaConfirmed === 0 ? null : (\n                      <span\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"bold\",\n                          color: \"#e43339\"\n                        }}\n                      >\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\n                          &#9650;\n                        </span>\n                        {props.original.deltaConfirmed}\n                      </span>\n                    )}{\" \"}\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              }\n            },\n            {\n              Header: \"Active\",\n              accessor: \"active\",\n              Cell: props => {\n                return (\n                  <>\n                    {props.original.deltaActive === 0 ? null : (\n                      <span\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"bold\",\n                          color: \"#192a56\"\n                        }}\n                      >\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\n                          &#9650;\n                        </span>\n                        {props.original.deltaActive}\n                      </span>\n                    )}{\" \"}\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              }\n            },\n            {\n              Header: \"Recovered\",\n              accessor: \"recovered\",\n              Cell: props => {\n                return (\n                  <>\n                    {props.original.deltaRecovered === 0 ? null : (\n                      <span\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"bold\",\n                          color: \"#006266\"\n                        }}\n                      >\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\n                          &#9650;\n                        </span>\n                        {props.original.deltaRecovered}\n                      </span>\n                    )}{\" \"}\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              }\n            },\n            {\n              Header: \"Deaths\",\n              accessor: \"deaths\",\n              Cell: props => {\n                return (\n                  <>\n                    {props.original.deltaDeaths === 0 ? null : (\n                      <span\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"bold\",\n                          color: \"#535c68\"\n                        }}\n                      >\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\n                          &#9650;\n                        </span>\n                        {props.original.deltaDeaths}\n                      </span>\n                    )}{\" \"}\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              }\n            }\n          ]\n        : [];\n\n    const cityData =\n      this.state.stateWiseCity.length !== 0\n        ? Object.keys(this.state.stateWiseCity).map(city => {\n            return {\n              [city]: Object.keys(\n                this.state.stateWiseCity[city].districtData\n              ).map(key => {\n                return {\n                  city: key,\n                  confirmed: this.state.stateWiseCity[city].districtData[key]\n                    .confirmed,\n                  active: this.state.stateWiseCity[city].districtData[key]\n                    .active,\n                  recovered: this.state.stateWiseCity[city].districtData[key]\n                    .recovered,\n                  deaths: this.state.stateWiseCity[city].districtData[key]\n                    .deaths\n                };\n              })\n            };\n          })\n        : [];\n\n    const cityColumns =\n      this.state.india.length !== 0\n        ? [\n            {\n              Header: \"District\",\n              accessor: \"city\" // String-based value accessors!\n            },\n            {\n              Header: \"Confirmed\",\n              accessor: \"confirmed\"\n            },\n            {\n              Header: \"Active\",\n              accessor: \"active\"\n            },\n            {\n              Header: \"Recovered\",\n              accessor: \"recovered\"\n            },\n            {\n              Header: \"Deaths\",\n              accessor: \"deaths\"\n            }\n          ]\n        : [];\n\n    const totalConformedToday =\n      this.state.india.length !== 0\n        ? this.state.india.statewise.filter(\n            record => record.state === \"Total\"\n          )[0].delta.confirmed\n        : 0;\n\n    const totalActiveToday =\n      this.state.india.length !== 0\n        ? this.state.india.statewise.filter(\n            record => record.state === \"Total\"\n          )[0].delta.active\n        : 0;\n\n    const totalDeathsToday =\n      this.state.india.length !== 0\n        ? this.state.india.statewise.filter(\n            record => record.state === \"Total\"\n          )[0].delta.deaths\n        : 0;\n\n    const confirmedPopover =\n      this.state.india.length !== 0\n        ? this.state.india.statewise\n            .filter(record => record.state !== \"Total\")\n            .filter(state => state.delta.confirmed !== 0)\n            .map(state => {\n              return { [state.state]: state.delta.confirmed };\n            })\n        : [];\n    const activePopover =\n      this.state.india.length !== 0\n        ? this.state.india.statewise\n            .filter(record => record.state !== \"Total\")\n            .filter(state => state.delta.active !== 0)\n            .map(state => {\n              return { [state.state]: state.delta.active };\n            })\n        : [];\n    const deathsPopover =\n      this.state.india.length !== 0\n        ? this.state.india.statewise\n            .filter(record => record.state !== \"Total\")\n            .filter(state => state.delta.deaths !== 0)\n            .map(state => {\n              return { [state.state]: state.delta.deaths };\n            })\n        : [];\n\n    return (\n      <ErrorBoundary>\n        <div\n          className=\"App\"\n          style={{\n            background: \"#172852\",\n            color: \"white\",\n            height: \"100vh\",\n            overflowY: \"scroll\"\n          }}\n        >\n          <div className=\"container\">\n            <div>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  fontSize: 40,\n                  fontWeight: \"bold\",\n                  marginTop: 30,\n                  paddingBottom: 30,\n                  borderBottom: \"2px solid white\"\n                }}\n              >\n                Covid-19 India Dashboard\n                <img\n                  onClick={() =>\n                    window.open(\n                      \"https://github.com/miteshtagadiya/Covid-19-Global-Dashboard\",\n                      \"_blank\"\n                    )\n                  }\n                  src={Github}\n                  alt=\"github\"\n                  style={{ height: 50, width: 50, cursor: \"pointer\" }}\n                />\n              </div>\n              <div style={{ padding: 15 }}>\n                <img\n                  onClick={() => this.props.history.push(\"/india\")}\n                  src={IndiaIcon}\n                  alt=\"India\"\n                  style={{ height: 50, width: 70, cursor: \"pointer\" }}\n                />\n                <span style={{ fontWeight: \"bold\" }}>Switch</span>\n                <img\n                  onClick={() => this.props.history.push(\"/\")}\n                  src={World}\n                  alt=\"World\"\n                  style={{\n                    marginLeft: 15,\n                    height: 50,\n                    width: 50,\n                    cursor: \"pointer\"\n                  }}\n                />\n              </div>\n            </div>\n            <div style={{ minHeight: \"90vh\" }}>\n              <div className=\"row\" style={{ padding: \"10px 0px 30px 0px\" }}>\n                <div className=\"col-sm-3\" style={{ padding: 15 }}>\n                  <div\n                    style={{\n                      padding: 20,\n                      fontWeight: \"bold\",\n                      background: \"linear-gradient(to right, #ee9ca7, #ffdde1)\",\n                      color: \"#e43339\",\n                      borderRadius: 10\n                    }}\n                  >\n                    <div style={{ fontSize: 35 }}>\n                      {this.state.india.length !== 0\n                        ? this.state.india.statewise.filter(\n                            record => record.state === \"Total\"\n                          )[0].confirmed\n                        : 0}\n                    </div>\n                    <div\n                      style={{\n                        fontSize: 15,\n                        marginBottom: 10,\n                        display: \"flex\",\n                        justifyContent: \"center\"\n                      }}\n                    >\n                      <span style={{ fontSize: 17, fontWeight: \"bold\" }}>\n                        &#9650;\n                      </span>\n                      {this.state.india.length !== 0\n                        ? typeof this.state.india.statewise.filter(\n                            record => record.state === \"Total\"\n                          )[0].delta.confirmed !== \"undefined\" &&\n                          this.state.india.statewise.filter(\n                            record => record.state === \"Total\"\n                          )[0].delta.confirmed !== null\n                          ? this.state.india.statewise.filter(\n                              record => record.state === \"Total\"\n                            )[0].delta.confirmed\n                          : 0\n                        : 0}\n                      {totalConformedToday !== 0 ? (\n                        <Popover\n                          body={\n                            <div\n                              style={{\n                                background: \"white\",\n                                borderRadius: 10,\n                                padding: 15,\n                                color: \"#192a56\",\n                                fontWeight: \"bold\"\n                              }}\n                            >\n                              {confirmedPopover.map((state, index) => {\n                                return (\n                                  <div key={index}>\n                                    {Object.keys(state)[0]}:{\" \"}\n                                    {Object.values(state)[0]}\n                                  </div>\n                                );\n                              })}\n                            </div>\n                          }\n                          preferPlace={\"below\"}\n                          isOpen={this.state.confirmedOpen}\n                          onOuterAction={() =>\n                            this.setState({\n                              confirmedOpen: !this.state.confirmedOpen\n                            })\n                          }\n                        >\n                          <div\n                            onClick={() =>\n                              this.setState({\n                                confirmedOpen: !this.state.confirmedOpen\n                              })\n                            }\n                            className=\"report-tile\"\n                            style={{ marginLeft: 5, cursor: \"pointer\" }}\n                          >\n                            ?\n                          </div>\n                        </Popover>\n                      ) : null}\n                    </div>\n                    <div style={{ fontSize: 18 }}>Confirmed</div>\n                    {this.state.india.length !== 0 ? (\n                      <TinyChart\n                        data={confirmedTinyChartData}\n                        label=\"confirmed\"\n                        color=\"#e43339\"\n                      />\n                    ) : null}\n                  </div>\n                </div>\n                <div className=\"col-sm-3\" style={{ padding: 15 }}>\n                  <div\n                    style={{\n                      padding: 20,\n                      fontWeight: \"bold\",\n                      background: \"linear-gradient(to right, #ee9ca7, #ffdde1)\",\n                      color: \"#192a56\",\n                      borderRadius: 10\n                    }}\n                  >\n                    <div style={{ fontSize: 35 }}>\n                      {this.state.india.length !== 0\n                        ? this.state.india.statewise.filter(\n                            record => record.state === \"Total\"\n                          )[0].active\n                        : 0}\n                    </div>\n                    <div\n                      style={{\n                        fontSize: 15,\n                        marginBottom: 10,\n                        display: \"flex\",\n                        justifyContent: \"center\"\n                      }}\n                    >\n                      <span style={{ fontSize: 17, fontWeight: \"bold\" }}>\n                        &#9650;\n                      </span>\n                      {this.state.india.length !== 0\n                        ? typeof this.state.india.statewise.filter(\n                            record => record.state === \"Total\"\n                          )[0].delta.active !== \"undefined\" &&\n                          this.state.india.statewise.filter(\n                            record => record.state === \"Total\"\n                          )[0].delta.active !== null\n                          ? this.state.india.statewise.filter(\n                              record => record.state === \"Total\"\n                            )[0].delta.active\n                          : 0\n                        : 0}\n                      {totalActiveToday !== 0 ? (\n                        <Popover\n                          body={\n                            <div\n                              style={{\n                                background: \"white\",\n                                borderRadius: 10,\n                                padding: 15,\n                                color: \"#192a56\",\n                                fontWeight: \"bold\"\n                              }}\n                            >\n                              {activePopover.map((state, index) => {\n                                return (\n                                  <div key={index}>\n                                    {Object.keys(state)[0]}:{\" \"}\n                                    {Object.values(state)[0]}\n                                  </div>\n                                );\n                              })}\n                            </div>\n                          }\n                          preferPlace={\"below\"}\n                          isOpen={this.state.activeOpen}\n                          onOuterAction={() =>\n                            this.setState({\n                              activeOpen: !this.state.activeOpen\n                            })\n                          }\n                        >\n                          <div\n                            onClick={() =>\n                              this.setState({\n                                activeOpen: !this.state.activeOpen\n                              })\n                            }\n                            className=\"report-tile\"\n                            style={{ marginLeft: 5, cursor: \"pointer\" }}\n                          >\n                            ?\n                          </div>\n                        </Popover>\n                      ) : null}\n                    </div>\n                    <div style={{ fontSize: 18 }}>Active</div>\n                    {this.state.india.length !== 0 ? (\n                      <TinyChart\n                        data={activeTinyChartData}\n                        label=\"confirmed\"\n                        color=\"#192a56\"\n                      />\n                    ) : null}\n                  </div>\n                </div>\n                <div className=\"col-sm-3\" style={{ padding: 15 }}>\n                  <div\n                    style={{\n                      padding: 20,\n                      fontWeight: \"bold\",\n                      background: \"linear-gradient(to right, #ee9ca7, #ffdde1)\",\n                      color: \"#006266\",\n                      borderRadius: 10\n                    }}\n                  >\n                    <div style={{ fontSize: 35 }}>\n                      {this.state.india.length !== 0\n                        ? this.state.india.statewise.filter(\n                            record => record.state === \"Total\"\n                          )[0].recovered\n                        : 0}\n                    </div>\n                    <div\n                      style={{\n                        fontSize: 15,\n                        marginBottom: 10,\n                        display: \"flex\",\n                        justifyContent: \"center\"\n                      }}\n                    >\n                      <span style={{ fontSize: 17, fontWeight: \"bold\" }}>\n                        &#9650;\n                      </span>\n                      {this.state.india.length !== 0\n                        ? typeof this.state.india.statewise.filter(\n                            record => record.state === \"Total\"\n                          )[0].delta.recovered !== \"undefined\" &&\n                          this.state.india.statewise.filter(\n                            record => record.state === \"Total\"\n                          )[0].delta.recovered !== null\n                          ? this.state.india.statewise.filter(\n                              record => record.state === \"Total\"\n                            )[0].delta.recovered\n                          : 0\n                        : 0}\n                    </div>\n                    <div style={{ fontSize: 18 }}>Recovered</div>\n                    {this.state.india.length !== 0 ? (\n                      <TinyChart\n                        data={recoveredTinyChartData}\n                        label=\"confirmed\"\n                        color=\"#006266\"\n                      />\n                    ) : null}\n                  </div>\n                </div>\n                <div className=\"col-sm-3\" style={{ padding: 15 }}>\n                  <div\n                    style={{\n                      padding: 20,\n                      fontWeight: \"bold\",\n                      background: \"linear-gradient(to right, #ee9ca7, #ffdde1)\",\n                      color: \"#535c68\",\n                      borderRadius: 10\n                    }}\n                  >\n                    <div style={{ fontSize: 35 }}>\n                      {this.state.india.length !== 0\n                        ? this.state.india.statewise.filter(\n                            record => record.state === \"Total\"\n                          )[0].deaths\n                        : 0}\n                    </div>\n                    <div\n                      style={{\n                        fontSize: 15,\n                        marginBottom: 10,\n                        display: \"flex\",\n                        justifyContent: \"center\"\n                      }}\n                    >\n                      <span style={{ fontSize: 17, fontWeight: \"bold\" }}>\n                        &#9650;\n                      </span>\n                      {this.state.india.length !== 0\n                        ? typeof this.state.india.statewise.filter(\n                            record => record.state === \"Total\"\n                          )[0].delta.deaths !== \"undefined\" &&\n                          this.state.india.statewise.filter(\n                            record => record.state === \"Total\"\n                          )[0].delta.deaths !== null\n                          ? this.state.india.statewise.filter(\n                              record => record.state === \"Total\"\n                            )[0].delta.deaths\n                          : 0\n                        : 0}\n                      {totalDeathsToday !== 0 ? (\n                        <Popover\n                          body={\n                            <div\n                              style={{\n                                background: \"white\",\n                                borderRadius: 10,\n                                padding: 15,\n                                color: \"#192a56\",\n                                fontWeight: \"bold\"\n                              }}\n                            >\n                              {deathsPopover.map((state, index) => {\n                                return (\n                                  <div key={index}>\n                                    {Object.keys(state)[0]}:{\" \"}\n                                    {Object.values(state)[0]}\n                                  </div>\n                                );\n                              })}\n                            </div>\n                          }\n                          preferPlace={\"below\"}\n                          isOpen={this.state.deathsOpen}\n                          onOuterAction={() =>\n                            this.setState({\n                              deathsOpen: !this.state.deathsOpen\n                            })\n                          }\n                        >\n                          <div\n                            onClick={() =>\n                              this.setState({\n                                deathsOpen: !this.state.deathsOpen\n                              })\n                            }\n                            className=\"report-tile\"\n                            style={{ marginLeft: 5, cursor: \"pointer\" }}\n                          >\n                            ?\n                          </div>\n                        </Popover>\n                      ) : null}\n                    </div>\n                    <div style={{ fontSize: 18 }}>Deaths</div>\n                    {this.state.india.length !== 0 ? (\n                      <TinyChart\n                        data={deathTinyChartData}\n                        label=\"confirmed\"\n                        color=\"#535c68\"\n                      />\n                    ) : null}\n                  </div>\n                </div>\n              </div>\n              <div\n                style={{\n                  background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\n                  paddingBottom: 15,\n                  paddingLeft: 15,\n                  paddingTop: 30,\n                  borderRadius: 15,\n                  marginBottom: 15\n                }}\n              >\n                <SimpleLineChart\n                  customTooltip={true}\n                  grid={false}\n                  data={totalData}\n                  labels={[\"Confirmed\", \"Active\", \"Recovered\", \"Deaths\"]}\n                  colors={[\"#e43339\", \"#192a56\", \"#006266\", \"#535c68\"]}\n                />\n              </div>\n              {this.state.isTable === 1 ? null : this.state.locationLoader ===\n                true ? (\n                <div>\n                  <img src={Virus} alt=\"Loader\" />\n                </div>\n              ) : (\n                <div style={{ paddingTop: 5 }}>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search\"\n                    onChange={e =>\n                      this.setState({\n                        searchString: e.target.value\n                      })\n                    }\n                  />\n                </div>\n              )}\n              <div\n                style={{\n                  textAlign: \"right\",\n                  padding: \"15px 0px\",\n                  marginTop: 15\n                }}\n              >\n                <span\n                  onClick={() =>\n                    this.setState({\n                      isTable: 1\n                    })\n                  }\n                  style={\n                    this.state.isTable === 1\n                      ? {\n                          background: \"#f6565b\",\n                          fontWeight: \"bold\",\n                          cursor: \"pointer\",\n                          color: \"white\",\n                          padding: \"10px 30px\",\n                          borderRadius: \"20px 0px 0px 20px\"\n                        }\n                      : {\n                          background: \"white\",\n                          fontWeight: \"bold\",\n                          cursor: \"pointer\",\n                          color: \"black\",\n                          padding: \"10px 30px\",\n                          borderRadius: \"20px 0px 0px 20px\"\n                        }\n                  }\n                >\n                  Table\n                </span>\n                <span\n                  onClick={() =>\n                    this.setState({ isTable: 0, selectedCountry: false })\n                  }\n                  style={\n                    this.state.isTable === 0\n                      ? {\n                          background: \"#f6565b\",\n                          fontWeight: \"bold\",\n                          cursor: \"pointer\",\n                          color: \"white\",\n                          padding: \"10px 30px\",\n                          borderRadius: \"0px 20px 20px 0px\"\n                        }\n                      : {\n                          background: \"white\",\n                          fontWeight: \"bold\",\n                          cursor: \"pointer\",\n                          color: \"black\",\n                          padding: \"10px 30px\",\n                          borderRadius: \"0px 20px 20px 0px\"\n                        }\n                  }\n                >\n                  Card\n                </span>\n              </div>\n              {this.state.isTable === 0 ? (\n                <div className=\"row\">\n                  {this.state.locationLoader === true ? (\n                    <div>\n                      <img src={Virus} alt=\"Loader\" />\n                    </div>\n                  ) : this.state.india.length !== 0 ? (\n                    this.state.india.statewise\n                      .filter(location =>\n                        location.state\n                          .toLowerCase()\n                          .includes(this.state.searchString.toLowerCase())\n                      )\n                      .map((location, index) => {\n                        return location.state !== \"Total\" ? (\n                          <div\n                            key={index}\n                            className=\"col-sm-4\"\n                            style={{ padding: 15 }}\n                          >\n                            <div\n                              style={{\n                                textAlign: \"center\",\n                                borderRadius: 10,\n                                background: \"white\",\n                                color: \"black\"\n                              }}\n                            >\n                              <label\n                                style={{\n                                  borderTopLeftRadius: 10,\n                                  borderTopRightRadius: 10,\n                                  color: \"white\",\n                                  width: \"100%\",\n                                  fontSize: 18,\n                                  fontWeight: \"bold\",\n                                  padding: 10,\n                                  background: \"#f6565b\"\n                                }}\n                              >\n                                {location.state}\n                              </label>\n                              <br />\n                              <div\n                                className=\"row justify-content-center\"\n                                style={{ paddingTop: 15, paddingBottom: 15 }}\n                              >\n                                <div\n                                  style={{ padding: 10, fontWeight: \"bold\" }}\n                                >\n                                  <div>{location.confirmed}</div>\n                                  <div>Confirmed</div>\n                                </div>\n                                <div\n                                  style={{ padding: 10, fontWeight: \"bold\" }}\n                                >\n                                  <div>{location.active}</div>\n                                  <div>Active</div>\n                                </div>\n                                <div\n                                  style={{ padding: 10, fontWeight: \"bold\" }}\n                                >\n                                  <div>{location.recovered}</div>\n                                  <div>Recovered</div>\n                                </div>\n                                <div\n                                  style={{ padding: 10, fontWeight: \"bold\" }}\n                                >\n                                  <div>{location.deaths}</div>\n                                  <div>Deaths</div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        ) : null;\n                      })\n                  ) : null}\n                </div>\n              ) : (\n                <div className=\"row\" style={{ marginTop: 15 }}>\n                  <div className=\"col-sm-12\">\n                    <div\n                      style={{\n                        background: \"white\",\n                        color: \"black\",\n                        borderRadius: 10\n                      }}\n                    >\n                      <ReactTable\n                        data={data}\n                        columns={columns}\n                        defaultPageSize={10}\n                        className=\"-striped -highlight\"\n                        noDataText={<b>No data found</b>}\n                        getTheadProps={(state, rowInfo, column) => {\n                          return {\n                            style: {\n                              fontWeight: \"bold\"\n                            }\n                          };\n                        }}\n                        getTdProps={(state, rowInfo, column, instance) => {\n                          return {\n                            onClick: (e, handleOriginal) => {\n                              if (handleOriginal) {\n                                handleOriginal();\n                              }\n                            }\n                          };\n                        }}\n                        filterable\n                        SubComponent={row => {\n                          return (\n                            <div style={{ padding: \"20px\" }}>\n                              <div style={{ borderRadius: 10 }}>\n                                <ReactTable\n                                  data={\n                                    Object.values(\n                                      cityData.filter(\n                                        state =>\n                                          Object.keys(state)[0] ===\n                                          row.original.state\n                                      )[0]\n                                    )[0]\n                                  }\n                                  columns={cityColumns}\n                                  defaultPageSize={5}\n                                  showPagination={true}\n                                />\n                              </div>\n                            </div>\n                          );\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n            <div style={{ padding: 15 }}>\n              Designed and Developed by{\"  \"}\n              <a\n                style={{\n                  color: \"#f6565b\",\n                  fontWeight: \"bold\",\n                  textDecoration: \"none\"\n                }}\n                href=\"https://miteshtagadiya.js.org\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                Mitesh Tagadiya\n              </a>\n            </div>\n          </div>\n        </div>\n      </ErrorBoundary>\n    );\n  }\n}\n\nexport default withRouter(India);\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport \"./index.css\"\n\nconst LEFT_PAGE = 'LEFT';\nconst RIGHT_PAGE = 'RIGHT';\n\n/**\n * Helper method for creating a range of numbers\n * range(1, 5) => [1, 2, 3, 4, 5]\n */\nconst range = (from, to, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n}\n\nclass Pagination extends Component {\n\n  constructor(props) {\n    super(props);\n    const { totalRecords = null, pageLimit = 30, pageNeighbours = 0 } = props;\n\n    this.pageLimit = typeof pageLimit === 'number' ? pageLimit : 30;\n    this.totalRecords = typeof totalRecords === 'number' ? totalRecords : 0;\n\n    // pageNeighbours can be: 0, 1 or 2\n    this.pageNeighbours = typeof pageNeighbours === 'number'\n      ? Math.max(0, Math.min(pageNeighbours, 2))\n      : 0;\n\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\n\n    this.state = { currentPage: 1 };\n  }\n\n  componentDidMount() {\n    this.gotoPage(1);\n  }\n\n  gotoPage = page => {\n    const { onPageChanged = f => f } = this.props;\n\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\n\n    const paginationData = {\n      currentPage,\n      totalPages: this.totalPages,\n      pageLimit: this.pageLimit,\n      totalRecords: this.totalRecords\n    };\n\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\n  }\n\n  handleClick = page => evt => {\n    evt.preventDefault();\n    this.gotoPage(page);\n  }\n\n  handleMoveLeft = evt => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage - (this.pageNeighbours * 2) - 1);\n  }\n\n  handleMoveRight = evt => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage + (this.pageNeighbours * 2) + 1);\n  }\n\n  /**\n   * Let's say we have 10 pages and we set pageNeighbours to 2\n   * Given that the current page is 6\n   * The pagination control will look like the following:\n   *\n   * (1) < {4 5} [6] {7 8} > (10)\n   *\n   * (x) => terminal pages: first and last page(always visible)\n   * [x] => represents current page\n   * {...x} => represents page neighbours\n   */\n  fetchPageNumbers = () => {\n\n    const totalPages = this.totalPages;\n    const currentPage = this.state.currentPage;\n    const pageNeighbours = this.pageNeighbours;\n\n    /**\n     * totalNumbers: the total page numbers to show on the control\n     * totalBlocks: totalNumbers + 2 to cover for the left(<) and right(>) controls\n     */\n    const totalNumbers = (this.pageNeighbours * 2) + 3;\n    const totalBlocks = totalNumbers + 2;\n\n    if (totalPages > totalBlocks) {\n\n      const startPage = Math.max(2, currentPage - pageNeighbours);\n      const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\n\n      let pages = range(startPage, endPage);\n\n      /**\n       * hasLeftSpill: has hidden pages to the left\n       * hasRightSpill: has hidden pages to the right\n       * spillOffset: number of hidden pages either to the left or to the right\n       */\n      const hasLeftSpill = startPage > 2;\n      const hasRightSpill = (totalPages - endPage) > 1;\n      const spillOffset = totalNumbers - (pages.length + 1);\n\n      switch (true) {\n        // handle: (1) < {5 6} [7] {8 9} (10)\n        case (hasLeftSpill && !hasRightSpill): {\n          const extraPages = range(startPage - spillOffset, startPage - 1);\n          pages = [LEFT_PAGE, ...extraPages, ...pages];\n          break;\n        }\n\n        // handle: (1) {2 3} [4] {5 6} > (10)\n        case (!hasLeftSpill && hasRightSpill): {\n          const extraPages = range(endPage + 1, endPage + spillOffset);\n          pages = [...pages, ...extraPages, RIGHT_PAGE];\n          break;\n        }\n\n        // handle: (1) < {4 5} [6] {7 8} > (10)\n        case (hasLeftSpill && hasRightSpill):\n        default: {\n          pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\n          break;\n        }\n      }\n\n      return [1, ...pages, totalPages];\n\n    }\n\n    return range(1, totalPages);\n\n  }\n\n  render() {\n\n    if (!this.totalRecords || this.totalPages === 1) return null;\n\n    const { currentPage } = this.state;\n    const pages = this.fetchPageNumbers();\n\n    return (\n      <Fragment>\n        <nav aria-label=\"Countries Pagination\">\n          <ul className=\"pagination\">\n            { pages.map((page, index) => {\n\n              if (page === LEFT_PAGE) return (\n                <li key={index} className=\"page-item\">\n                  <a className=\"page-link\" href=\"#\" aria-label=\"Previous\" onClick={this.handleMoveLeft}>\n                    <span aria-hidden=\"true\">&laquo;</span>\n                    <span className=\"sr-only\">Previous</span>\n                  </a>\n                </li>\n              );\n\n              if (page === RIGHT_PAGE) return (\n                <li key={index} className=\"page-item\">\n                  <a className=\"page-link\" href=\"#\" aria-label=\"Next\" onClick={this.handleMoveRight}>\n                    <span aria-hidden=\"true\">&raquo;</span>\n                    <span className=\"sr-only\">Next</span>\n                  </a>\n                </li>\n              );\n\n              return (\n                <li key={index} className={`page-item${ currentPage === page ? ' active' : ''}`}>\n                  <a className=\"page-link\" href=\"#\" onClick={ this.handleClick(page) }>{ page }</a>\n                </li>\n              );\n\n            }) }\n\n          </ul>\n        </nav>\n      </Fragment>\n    );\n\n  }\n}\n\nPagination.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  pageLimit: PropTypes.number,\n  pageNeighbours: PropTypes.number,\n  onPageChanged: PropTypes.func\n};\n\nexport default Pagination;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Select from \"react-select\";\nimport ReactTable from \"react-table-6\";\nimport SimpleLineChart from \"./SimpleLineChart/SimpleLineChart\";\nimport \"react-table-6/react-table.css\";\nimport Pagination from \"./Pagination\";\nimport IndiaIcon from \"./assets/india.png\";\nimport World from \"./assets/world.png\";\nimport Github from \"./assets/github1.png\";\nimport Virus from \"./assets/virus.gif\";\nimport ErrorBoundary from \"./ErrorBoundry\";\nimport Countrys from \"./CountryList.json\";\nimport _ from \"lodash\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchString: \"\",\n      cards: [],\n      globalTimelines: [],\n      currentPage: 0,\n      currentCardPage: 0,\n      totalCardPages: 0,\n      totalPages: 0,\n      globalData: 0,\n      locationLoader: false,\n      selectedCountry: false,\n      loadDefaultCards: true,\n      data: [],\n      timelines: [],\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\"],\n      isChart: 0,\n      datasets: [\n        {\n          label: \"Rainfall\",\n          backgroundColor: \"rgba(75,192,192,1)\",\n          borderColor: \"rgba(0,0,0,1)\",\n          borderWidth: 2,\n          data: [65, 59, 80, 81, 56],\n          data1: [65, 59, 80, 81, 56],\n          data2: [65, 59, 80, 81, 56],\n          data3: [65, 59, 80, 81, 56]\n        }\n      ]\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      locationLoader: true\n    });\n    window.addEventListener(\"focus\", () => {\n      fetch(\n        `https://cors-proxy-pass.herokuapp.com/https://thevirustracker.com/free-api?global=stats`,\n        {\n          header: { \"Access-Control-Allow-Origin\": \"*\" },\n          method: \"GET\"\n        }\n      )\n        .then(res => res.json())\n        .then(response => {\n          this.setState({\n            globalData: response.results[0],\n            locationLoader: false\n          });\n        })\n        .catch(error => {\n          this.setState({\n            locationLoader: false\n          });\n        });\n\n      fetch(`https://covid19.mathdro.id/api/daily`, {\n        method: \"GET\"\n      })\n        .then(res => res.json())\n        .then(response => {\n          this.setState({\n            globalTimelines: response,\n            locationLoader: false\n          });\n        })\n        .catch(error => {\n          this.setState({\n            locationLoader: false\n          });\n        });\n\n      this.renderCards([1]);\n    });\n    fetch(\n      `https://cors-proxy-pass.herokuapp.com/https://thevirustracker.com/free-api?global=stats`,\n      {\n        method: \"GET\"\n      }\n    )\n      .then(res => res.json())\n      .then(response => {\n        this.setState({\n          globalData: response.results[0],\n          locationLoader: false\n        });\n      })\n      .catch(error => {\n        this.setState({\n          locationLoader: false\n        });\n      });\n\n    fetch(`https://covid19.mathdro.id/api/daily`, {\n      method: \"GET\"\n    })\n      .then(res => res.json())\n      .then(response => {\n        this.setState({\n          globalTimelines: response,\n          locationLoader: false\n        });\n      })\n      .catch(error => {\n        this.setState({\n          locationLoader: false\n        });\n      });\n\n    this.renderCards([1]);\n  }\n\n  renderCards(cardId) {\n    let cards = [];\n    this.setState({\n      cards: [],\n      locationLoader: true\n    });\n    cardId.map(location => {\n      fetch(\n        `https://cors-proxy-pass.herokuapp.com/https://thevirustracker.com/free-api?countryTotals=ALL`,\n        {\n          method: \"GET\"\n        }\n      )\n        .then(res => res.json())\n        .then(response => {\n          this.setState({\n            locationLoader: false,\n            cards: cards.concat(response)\n          });\n        })\n        .catch(error => {\n          this.setState({\n            locationLoader: false\n          });\n        });\n    });\n  }\n\n  renderCharts(data) {\n    data.map(location => {\n      fetch(\n        `https://cors-proxy-pass.herokuapp.com/https://thevirustracker.com/free-api?countryTimeline=${location}`,\n        {\n          method: \"GET\"\n        }\n      )\n        .then(res => res.json())\n        .then(response => {\n          this.setState(state => {\n            const timelines = state.timelines.concat(response);\n            const locationLoader = false;\n            return {\n              timelines,\n              locationLoader\n            };\n          });\n        })\n        .catch(error => {\n          this.setState({\n            locationLoader: false\n          });\n        });\n    });\n  }\n\n  chunkArray = (array, size) => {\n    let result = [];\n    let arrayCopy = [...array];\n    while (arrayCopy.length > 0) {\n      result.push(arrayCopy.splice(0, size));\n    }\n    return result;\n  };\n\n  onPageChanged = data1 => {\n    const { currentPage, totalPages } = data1;\n\n    this.setState({\n      timelines: [],\n      locationLoader: true\n    });\n    if (!this.state.selectedCountry) {\n      this.renderCharts(_.chunk(Object.keys(Countrys), 9)[currentPage - 1]);\n    }\n\n    this.setState({\n      currentPage: currentPage - 1,\n      totalPages: totalPages\n    });\n  };\n\n  changeState = () => {\n    this.setState({\n      locationLoader: true\n    });\n  };\n\n  // onCardPageChanged = data1 => {\n  //   this.setState({\n  //     locationLoader: data1.locationLoader\n  //   });\n  //   const { currentPage } = data1;\n\n  //   this.setState({\n  //     cards: [],\n  //     locationLoader: true\n  //   });\n\n  //   if (this.state.loadDefaultCards === false && !this.state.selectedCountry) {\n  //     this.renderCards(_.chunk(Object.keys(Countrys), 9)[currentPage - 1]);\n  //   }\n  //   this.setState({\n  //     currentCardPage: currentPage - 1,\n  //     locationLoader: false,\n  //     loadDefaultCards: false,\n  //     selectedCountry: false\n  //   });\n  // };\n\n  render() {\n    const colourStyles = {\n      control: styles => ({ ...styles, backgroundColor: \"white\" }),\n      option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n        return {\n          ...styles,\n          backgroundColor: isDisabled\n            ? null\n            : isSelected\n            ? \"#f6565b\"\n            : isFocused\n            ? \"#f6565b\"\n            : null,\n          color: isDisabled ? \"#ccc\" : isSelected ? \"white\" : \"black\",\n          cursor: isDisabled ? \"not-allowed\" : \"default\",\n\n          \":active\": {\n            ...styles[\":active\"],\n            backgroundColor: !isDisabled && (isSelected ? \"#f6565b\" : \"white\")\n          }\n        };\n      }\n    };\n\n    const options = Object.keys(Countrys).map(location => {\n      return {\n        value: location,\n        label: Countrys[location]\n      };\n    });\n\n    let totalData =\n      this.state.globalTimelines.length !== 0\n        ? this.state.globalTimelines.map((cases, index) => {\n            return {\n              name: cases.reportDate,\n              Confirmed: Number(cases.totalConfirmed),\n              Active:\n                Number(cases.totalConfirmed) -\n                Number(cases.totalRecovered) -\n                Number(cases.deaths.total),\n              Recovered: Number(cases.totalRecovered),\n              Deaths: Number(cases.deaths.total),\n              dailyConfirmed: Number(cases.deltaConfirmed),\n              dailyActive:\n                index === 0\n                  ? Number(cases.totalConfirmed) -\n                    Number(cases.totalRecovered) -\n                    Number(cases.deaths.total)\n                  : Number(cases.totalConfirmed) -\n                    Number(cases.totalRecovered) -\n                    Number(cases.deaths.total) -\n                    (Number(\n                      this.state.globalTimelines[index - 1].totalConfirmed\n                    ) -\n                      Number(\n                        this.state.globalTimelines[index - 1].totalRecovered\n                      ) -\n                      Number(\n                        this.state.globalTimelines[index - 1].deaths.total\n                      )),\n              dailyRecovered: Number(cases.deltaRecovered),\n              dailyDeaths:\n                index === 0\n                  ? Number(cases.deaths.total)\n                  : Number(cases.deaths.total) -\n                    Number(this.state.globalTimelines[index - 1].deaths.total)\n            };\n          })\n        : null;\n\n    let date = new Date();\n    let todayDate =\n      date.getMonth() + 1 + \"/\" + date.getDate() + \"/\" + date.getFullYear();\n\n    const data =\n      this.state.cards.length !== 0\n        ? Object.values(this.state.cards[0].countryitems[0])\n            .filter(country => typeof country.title !== \"undefined\")\n            .map(country => {\n              return {\n                country: country.title,\n                confirmed: Number(country.total_cases),\n                active: Number(country.total_active_cases),\n                recovered: Number(country.total_recovered),\n                deaths: Number(country.total_deaths),\n                deltaConfirmed: Number(country.total_new_cases_today),\n                deltaDeaths: Number(country.total_new_deaths_today)\n              };\n            })\n        : [];\n\n    const columns =\n      this.state.cards.length !== 0\n        ? [\n            {\n              Header: \"Country\",\n              accessor: \"country\" // String-based value accessors!\n            },\n            {\n              Header: \"Confirmed\",\n              accessor: \"confirmed\",\n              Cell: props => {\n                return (\n                  <>\n                    {props.original.deltaConfirmed === 0 ? null : (\n                      <span\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"bold\",\n                          color: \"#e43339\"\n                        }}\n                      >\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\n                          &#9650;\n                        </span>\n                        {props.original.deltaConfirmed}\n                      </span>\n                    )}{\" \"}\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              }\n            },\n            {\n              Header: \"Active\",\n              accessor: \"active\",\n              Cell: props => {\n                return (\n                  <>\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              }\n            },\n            {\n              Header: \"Recovered\",\n              accessor: \"recovered\",\n              Cell: props => {\n                return (\n                  <>\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              }\n            },\n            {\n              Header: \"Deaths\",\n              accessor: \"deaths\",\n              Cell: props => {\n                return (\n                  <>\n                    {props.original.deltaDeaths === 0 ? null : (\n                      <span\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"bold\",\n                          color: \"#535c68\"\n                        }}\n                      >\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\n                          &#9650;\n                        </span>\n                        {props.original.deltaDeaths}\n                      </span>\n                    )}{\" \"}\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              }\n            }\n          ]\n        : [];\n\n    return (\n      <ErrorBoundary>\n        <div\n          className=\"App\"\n          style={{\n            background: \"#172852\",\n            color: \"white\",\n            height: \"100vh\",\n            overflowY: \"scroll\"\n          }}\n        >\n          <div className=\"container\">\n            <div>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  fontSize: 40,\n                  fontWeight: \"bold\",\n                  marginTop: 30,\n                  paddingBottom: 30,\n                  borderBottom: \"2px solid white\"\n                }}\n              >\n                Covid-19 Global Dashboard\n                <img\n                  onClick={() =>\n                    window.open(\n                      \"https://github.com/miteshtagadiya/Covid-19-Global-Dashboard\",\n                      \"_blank\"\n                    )\n                  }\n                  src={Github}\n                  alt=\"github\"\n                  style={{ height: 50, width: 50, cursor: \"pointer\" }}\n                />\n              </div>\n            </div>\n            <div style={{ paddingTop: 15 }}>\n              <img\n                onClick={() => this.props.history.push(\"/india\")}\n                src={IndiaIcon}\n                alt=\"India\"\n                style={{ height: 50, width: 70, cursor: \"pointer\" }}\n              />\n              <span style={{ fontWeight: \"bold\" }}>Switch</span>\n              <img\n                onClick={() => this.props.history.push(\"/\")}\n                src={World}\n                alt=\"World\"\n                style={{\n                  marginLeft: 15,\n                  height: 50,\n                  width: 50,\n                  cursor: \"pointer\"\n                }}\n              />\n            </div>\n            <div style={{ minHeight: \"90vh\" }}>\n              <div className=\"row\" style={{ padding: \"30px 0px\" }}>\n                <div className=\"col-sm-3\" style={{ padding: 15 }}>\n                  <div\n                    style={{\n                      padding: 20,\n                      fontWeight: \"bold\",\n                      minHeight: 156,\n                      background: \"linear-gradient(to right, #ee9ca7, #ffdde1)\",\n                      color: \"#530803\",\n                      borderRadius: 10\n                    }}\n                  >\n                    <div style={{ fontSize: 35 }}>\n                      {this.state.globalData.length !== 0\n                        ? this.state.globalData.total_cases\n                        : 0}\n                    </div>\n                    <div style={{ fontSize: 18, marginBottom: 10 }}>\n                      <span style={{ fontSize: 20, fontWeight: \"bold\" }}>\n                        &#9650;\n                      </span>{\" \"}\n                      {this.state.globalData.length !== 0\n                        ? this.state.globalData.total_new_cases_today\n                        : 0}\n                    </div>\n                    <div style={{ fontSize: 18 }}>Confirmed</div>\n                  </div>\n                </div>\n                <div className=\"col-sm-3\" style={{ padding: 15 }}>\n                  <div\n                    style={{\n                      padding: 20,\n                      minHeight: 156,\n                      fontWeight: \"bold\",\n                      background: \"linear-gradient(to right, #ee9ca7, #ffdde1)\",\n                      color: \"#192a56\",\n                      borderRadius: 10\n                    }}\n                  >\n                    <div style={{ fontSize: 35, marginBottom: 37 }}>\n                      {this.state.globalData.length !== 0\n                        ? this.state.globalData.total_active_cases\n                        : 0}\n                    </div>\n                    <div style={{ fontSize: 18 }}>Active</div>\n                  </div>\n                </div>\n                <div className=\"col-sm-3\" style={{ padding: 15 }}>\n                  <div\n                    style={{\n                      padding: 20,\n                      minHeight: 156,\n                      fontWeight: \"bold\",\n                      background: \"linear-gradient(to right, #ee9ca7, #ffdde1)\",\n                      color: \"#006266\",\n                      borderRadius: 10\n                    }}\n                  >\n                    <div style={{ fontSize: 35, marginBottom: 37 }}>\n                      {this.state.globalData.length !== 0\n                        ? this.state.globalData.total_recovered\n                        : 0}\n                    </div>\n                    <div style={{ fontSize: 18 }}>Recovered</div>\n                  </div>\n                </div>\n                <div className=\"col-sm-3\" style={{ padding: 15 }}>\n                  <div\n                    style={{\n                      padding: 20,\n                      fontWeight: \"bold\",\n                      minHeight: 156,\n                      background: \"linear-gradient(to right, #ee9ca7, #ffdde1)\",\n                      color: \"#535c68\",\n                      borderRadius: 10\n                    }}\n                  >\n                    <div style={{ fontSize: 35 }}>\n                      {this.state.globalData.length !== 0\n                        ? this.state.globalData.total_deaths\n                        : 0}\n                    </div>\n                    <div style={{ fontSize: 18, marginBottom: 10 }}>\n                      <span style={{ fontSize: 20, fontWeight: \"bold\" }}>\n                        &#9650;\n                      </span>{\" \"}\n                      {this.state.globalData.length !== 0\n                        ? this.state.globalData.total_new_deaths_today\n                        : 0}\n                    </div>\n                    <div style={{ fontSize: 18 }}>Deaths</div>\n                  </div>\n                </div>\n              </div>\n              <div\n                style={{\n                  background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\n                  paddingBottom: 15,\n                  paddingLeft: 15,\n                  borderRadius: 15,\n                  marginBottom: 15,\n                  paddingTop: 30\n                }}\n              >\n                <SimpleLineChart\n                  customTooltip={true}\n                  grid={false}\n                  data={totalData}\n                  labels={[\"Confirmed\", \"Active\", \"Deaths\"]}\n                  colors={[\"#e43339\", \"#192a56\", \"#535c68\"]}\n                />\n              </div>\n              {this.state.isChart === 1 ? (\n                <div>\n                  <Select\n                    isClearable={true}\n                    onChange={selectedOption => {\n                      this.setState({\n                        timelines: [],\n                        selectedCountry: true\n                      });\n                      this.state.isChart === 0\n                        ? this.renderCards(\n                            selectedOption === null\n                              ? _.chunk(Object.keys(Countrys), 9)[0]\n                              : [selectedOption.value.toUpperCase()]\n                          )\n                        : this.renderCharts(\n                            selectedOption === null\n                              ? _.chunk(Object.keys(Countrys), 9)[0]\n                              : [selectedOption.value.toUpperCase()]\n                          );\n                    }}\n                    styles={colourStyles}\n                    options={options}\n                  />\n                </div>\n              ) : null}\n              {this.state.isChart === 0 ? (\n                <div style={{ marginTop: 20 }}>\n                  <input\n                    defaultValue={this.state.searchString}\n                    type=\"text\"\n                    placeholder=\"Search\"\n                    onChange={e =>\n                      this.setState({\n                        searchString: e.target.value.toLowerCase(),\n                        selectedCountry: false\n                      })\n                    }\n                  />\n                </div>\n              ) : null}\n              <div\n                style={{\n                  textAlign: \"right\",\n                  padding: \"15px 0px\",\n                  marginTop: 15\n                }}\n              >\n                <span\n                  onClick={() =>\n                    this.setState({\n                      isChart: 1,\n                      selectedCountry: false,\n                      locationLoader: true\n                    })\n                  }\n                  style={\n                    this.state.isChart === 1\n                      ? {\n                          background: \"#f6565b\",\n                          fontWeight: \"bold\",\n                          cursor: \"pointer\",\n                          color: \"white\",\n                          padding: \"10px 30px\",\n                          borderRadius: \"20px 0px 0px 20px\"\n                        }\n                      : {\n                          background: \"white\",\n                          fontWeight: \"bold\",\n                          cursor: \"pointer\",\n                          color: \"black\",\n                          padding: \"10px 30px\",\n                          borderRadius: \"20px 0px 0px 20px\"\n                        }\n                  }\n                >\n                  Chart\n                </span>\n                <span\n                  onClick={() =>\n                    this.setState({\n                      isChart: 2,\n                      selectedCountry: false\n                    })\n                  }\n                  style={\n                    this.state.isChart === 2\n                      ? {\n                          background: \"#f6565b\",\n                          fontWeight: \"bold\",\n                          cursor: \"pointer\",\n                          color: \"white\",\n                          padding: \"10px 30px\"\n                        }\n                      : {\n                          background: \"white\",\n                          fontWeight: \"bold\",\n                          cursor: \"pointer\",\n                          color: \"black\",\n                          padding: \"10px 30px\"\n                        }\n                  }\n                >\n                  Table\n                </span>\n                <span\n                  onClick={() =>\n                    this.setState({\n                      isChart: 0,\n                      selectedCountry: false\n                    })\n                  }\n                  style={\n                    this.state.isChart === 0\n                      ? {\n                          background: \"#f6565b\",\n                          fontWeight: \"bold\",\n                          cursor: \"pointer\",\n                          color: \"white\",\n                          padding: \"10px 30px\",\n                          borderRadius: \"0px 20px 20px 0px\"\n                        }\n                      : {\n                          background: \"white\",\n                          fontWeight: \"bold\",\n                          cursor: \"pointer\",\n                          color: \"black\",\n                          padding: \"10px 30px\",\n                          borderRadius: \"0px 20px 20px 0px\"\n                        }\n                  }\n                >\n                  Card\n                </span>\n              </div>\n              {this.state.isChart === 2 ? (\n                <div\n                  className=\"row\"\n                  style={{ marginTop: 20, marginBottom: 15 }}\n                >\n                  <div className=\"col-sm-12\">\n                    <div\n                      style={{\n                        background: \"white\",\n                        color: \"black\",\n                        borderRadius: 10\n                      }}\n                    >\n                      <ReactTable\n                        style={{ minHeight: 500 }}\n                        data={data}\n                        columns={columns}\n                        defaultPageSize={10}\n                        className=\"-striped -highlight\"\n                        noDataText={<b>No data found</b>}\n                        getTheadProps={(state, rowInfo, column) => {\n                          return {\n                            style: {\n                              fontWeight: \"bold\"\n                            }\n                          };\n                        }}\n                        filterable\n                      />\n                    </div>\n                  </div>\n                </div>\n              ) : null}\n              {this.state.isChart === 0 ? (\n                this.state.locationLoader === true ? (\n                  <div>\n                    <img src={Virus} alt=\"Loader\" />\n                  </div>\n                ) : (\n                  <div className=\"row\">\n                    {this.state.cards.length !== 0\n                      ? Object.values(this.state.cards[0].countryitems[0])\n                          .filter(\n                            location =>\n                              typeof location.title !== \"undefined\" &&\n                              location.title\n                                .toLowerCase()\n                                .includes(this.state.searchString)\n                          )\n                          .map((location, index) => {\n                            return (\n                              <div\n                                key={index}\n                                className=\"col-sm-4\"\n                                style={{ padding: 15 }}\n                              >\n                                <div\n                                  style={{\n                                    textAlign: \"center\",\n                                    borderRadius: 10,\n                                    background: \"white\",\n                                    color: \"black\"\n                                  }}\n                                >\n                                  <label\n                                    style={{\n                                      borderTopLeftRadius: 10,\n                                      borderTopRightRadius: 10,\n                                      color: \"white\",\n                                      width: \"100%\",\n                                      fontSize: 18,\n                                      fontWeight: \"bold\",\n                                      padding: 10,\n                                      background: \"#f6565b\"\n                                    }}\n                                  >\n                                    {location.title}\n                                  </label>\n                                  <br />\n                                  <div className=\"row justify-content-center\">\n                                    <div\n                                      style={{\n                                        padding: 20,\n                                        fontWeight: \"bold\"\n                                      }}\n                                    >\n                                      <div>\n                                        {location.total_cases}\n                                        {location.total_new_cases_today ===\n                                        0 ? null : (\n                                          <span\n                                            style={{\n                                              fontSize: 12,\n                                              color: \"#e43339\"\n                                            }}\n                                          >\n                                            {\"  \"}\n                                            <span\n                                              style={{\n                                                fontSize: 17,\n                                                fontWeight: \"bold\"\n                                              }}\n                                            >\n                                              &#9650;\n                                            </span>\n                                            {location.total_new_cases_today}\n                                          </span>\n                                        )}\n                                      </div>\n                                      <div>Confirmed</div>\n                                    </div>\n                                    <div\n                                      style={{\n                                        padding: 20,\n                                        fontWeight: \"bold\"\n                                      }}\n                                    >\n                                      <div>{location.total_active_cases}</div>\n                                      <div>Active</div>\n                                    </div>\n                                    <div\n                                      style={{\n                                        padding: 20,\n                                        fontWeight: \"bold\"\n                                      }}\n                                    >\n                                      <div>\n                                        {location.total_deaths}\n                                        {location.total_new_deaths_today ===\n                                        0 ? null : (\n                                          <span\n                                            style={{\n                                              fontSize: 12,\n                                              color: \"#535c68\"\n                                            }}\n                                          >\n                                            {\"  \"}\n                                            <span\n                                              style={{\n                                                fontSize: 17,\n                                                fontWeight: \"bold\"\n                                              }}\n                                            >\n                                              &#9650;\n                                            </span>\n                                            {location.total_new_deaths_today}\n                                          </span>\n                                        )}\n                                      </div>\n                                      <div>Deaths</div>\n                                    </div>\n                                    <div\n                                      style={{\n                                        padding: 20,\n                                        fontWeight: \"bold\"\n                                      }}\n                                    >\n                                      <div>{location.total_recovered}</div>\n                                      <div>Recovered</div>\n                                    </div>\n                                    <div\n                                      style={{\n                                        padding: 20,\n                                        fontWeight: \"bold\"\n                                      }}\n                                    >\n                                      <div>{location.total_serious_cases}</div>\n                                      <div>Serious</div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            );\n                          })\n                      : null}\n                  </div>\n                )\n              ) : null}{\" \"}\n              {this.state.isChart === 1 ? (\n                <div className=\"row\">\n                  {this.state.locationLoader === true ? (\n                    <div style={{ width: \"100%\" }}>\n                      <img src={Virus} alt=\"Loader\" />\n                    </div>\n                  ) : this.state.timelines.length !== 0 ? (\n                    this.state.timelines.map((timeline, index1) => {\n                      let data = Object.keys(timeline.timelineitems[0])\n                        .filter(data => data !== \"stat\" && data !== todayDate)\n                        .map((dataKey, index) => {\n                          return {\n                            name: dataKey,\n                            Confirmed:\n                              timeline.timelineitems[0][dataKey].total_cases,\n                            Deaths:\n                              timeline.timelineitems[0][dataKey].total_deaths,\n                            Recovered:\n                              timeline.timelineitems[0][dataKey]\n                                .total_recoveries,\n                            [\"New Conf.\"]:\n                              timeline.timelineitems[0][dataKey]\n                                .new_daily_cases,\n                            [\"New Deaths\"]:\n                              timeline.timelineitems[0][dataKey]\n                                .new_daily_deaths\n                          };\n                        });\n                      let confirmed =\n                        this.state.cards.length !== 0 &&\n                        typeof Object.values(\n                          this.state.cards[0].countryitems[0]\n                        ).filter(\n                          country =>\n                            country !== \"ok\" &&\n                            country.title ===\n                              timeline.countrytimelinedata[0].info.title\n                        )[0] !== \"undefined\"\n                          ? Object.values(\n                              this.state.cards[0].countryitems[0]\n                            ).filter(\n                              country =>\n                                country !== \"ok\" &&\n                                country.title ===\n                                  timeline.countrytimelinedata[0].info.title\n                            )[0].total_cases\n                          : Object.values(timeline.timelineitems[0])[\n                              Object.values(timeline.timelineitems[0]).length -\n                                2\n                            ].total_cases;\n                      let deaths =\n                        this.state.cards.length !== 0 &&\n                        typeof Object.values(\n                          this.state.cards[0].countryitems[0]\n                        ).filter(\n                          country =>\n                            country !== \"ok\" &&\n                            country.title ===\n                              timeline.countrytimelinedata[0].info.title\n                        )[0] !== \"undefined\"\n                          ? Object.values(\n                              this.state.cards[0].countryitems[0]\n                            ).filter(\n                              country =>\n                                country !== \"ok\" &&\n                                country.title ===\n                                  timeline.countrytimelinedata[0].info.title\n                            )[0].total_deaths\n                          : Object.values(timeline.timelineitems[0])[\n                              Object.values(timeline.timelineitems[0]).length -\n                                2\n                            ].total_deaths;\n                      let recovered =\n                        this.state.cards.length !== 0 &&\n                        typeof Object.values(\n                          this.state.cards[0].countryitems[0]\n                        ).filter(\n                          country =>\n                            country !== \"ok\" &&\n                            country.title ===\n                              timeline.countrytimelinedata[0].info.title\n                        )[0] !== \"undefined\"\n                          ? Object.values(\n                              this.state.cards[0].countryitems[0]\n                            ).filter(\n                              country =>\n                                country !== \"ok\" &&\n                                country.title ===\n                                  timeline.countrytimelinedata[0].info.title\n                            )[0].total_recovered\n                          : Object.values(timeline.timelineitems[0])[\n                              Object.values(timeline.timelineitems[0]).length -\n                                2\n                            ].total_recoveries;\n                      let NewConfirmed =\n                        this.state.cards.length !== 0 &&\n                        typeof Object.values(\n                          this.state.cards[0].countryitems[0]\n                        ).filter(\n                          country =>\n                            country !== \"ok\" &&\n                            country.title ===\n                              timeline.countrytimelinedata[0].info.title\n                        )[0] !== \"undefined\"\n                          ? Object.values(\n                              this.state.cards[0].countryitems[0]\n                            ).filter(\n                              country =>\n                                country !== \"ok\" &&\n                                country.title ===\n                                  timeline.countrytimelinedata[0].info.title\n                            )[0].total_new_cases_today\n                          : Object.values(timeline.timelineitems[0])[\n                              Object.values(timeline.timelineitems[0]).length -\n                                2\n                            ].new_daily_cases;\n                      let NewDeaths =\n                        this.state.cards.length !== 0 &&\n                        typeof Object.values(\n                          this.state.cards[0].countryitems[0]\n                        ).filter(\n                          country =>\n                            country !== \"ok\" &&\n                            country.title ===\n                              timeline.countrytimelinedata[0].info.title\n                        )[0] !== \"undefined\"\n                          ? Object.values(\n                              this.state.cards[0].countryitems[0]\n                            ).filter(\n                              country =>\n                                country !== \"ok\" &&\n                                country.title ===\n                                  timeline.countrytimelinedata[0].info.title\n                            )[0].total_new_deaths_today\n                          : Object.values(timeline.timelineitems[0])[\n                              Object.values(timeline.timelineitems[0]).length -\n                                2\n                            ].new_daily_deaths;\n                      if (\n                        this.state.cards.length !== 0 &&\n                        typeof Object.values(\n                          this.state.cards[0].countryitems[0]\n                        ).filter(\n                          country =>\n                            country !== \"ok\" &&\n                            country.title ===\n                              timeline.countrytimelinedata[0].info.title\n                        )[0] !== \"undefined\"\n                      ) {\n                        data.push({\n                          name: todayDate,\n                          Confirmed: Object.values(\n                            this.state.cards[0].countryitems[0]\n                          ).filter(\n                            country =>\n                              country.title ===\n                              timeline.countrytimelinedata[0].info.title\n                          )[0].total_cases,\n                          Deaths: Object.values(\n                            this.state.cards[0].countryitems[0]\n                          ).filter(\n                            country =>\n                              country.title ===\n                              timeline.countrytimelinedata[0].info.title\n                          )[0].total_deaths,\n                          Recovered: Object.values(\n                            this.state.cards[0].countryitems[0]\n                          ).filter(\n                            country =>\n                              country.title ===\n                              timeline.countrytimelinedata[0].info.title\n                          )[0].total_recovered,\n                          [\"New Conf.\"]: Object.values(\n                            this.state.cards[0].countryitems[0]\n                          ).filter(\n                            country =>\n                              country.title ===\n                              timeline.countrytimelinedata[0].info.title\n                          )[0].total_new_cases_today,\n                          [\"New Deaths\"]: Object.values(\n                            this.state.cards[0].countryitems[0]\n                          ).filter(\n                            country =>\n                              country.title ===\n                              timeline.countrytimelinedata[0].info.title\n                          )[0].total_new_deaths_today\n                        });\n                      }\n                      return (\n                        <div\n                          key={index1}\n                          className=\"col-sm-4\"\n                          style={{ padding: 15 }}\n                        >\n                          <div\n                            style={{\n                              background: \"white\",\n                              borderRadius: 10\n                            }}\n                          >\n                            <label\n                              style={{\n                                borderTopLeftRadius: 10,\n                                borderTopRightRadius: 10,\n                                color: \"white\",\n                                width: \"100%\",\n                                fontSize: 18,\n                                fontWeight: \"bold\",\n                                padding: 10,\n                                background: \"#f6565b\"\n                              }}\n                            >\n                              {timeline.countrytimelinedata[0].info.title}\n                            </label>\n                            <br />\n                            <div className=\"row justify-content-center\">\n                              <div\n                                style={{\n                                  padding: 20,\n                                  fontWeight: \"bold\",\n                                  color: \"#92063e\"\n                                }}\n                              >\n                                <div>\n                                  {confirmed}\n                                  {NewConfirmed === 0 ? null : (\n                                    <span style={{ fontSize: 13 }}>\n                                      {\"  \"}\n                                      <span\n                                        style={{\n                                          fontSize: 17,\n                                          fontWeight: \"bold\"\n                                        }}\n                                      >\n                                        &#9650;\n                                      </span>\n                                      {NewConfirmed}\n                                    </span>\n                                  )}\n                                </div>\n                                <div>Confirmed</div>\n                              </div>\n                              <div\n                                style={{\n                                  padding: 20,\n                                  fontWeight: \"bold\",\n                                  color: \"black\"\n                                }}\n                              >\n                                <div>\n                                  {deaths}\n                                  {NewDeaths === 0 ? null : (\n                                    <span style={{ fontSize: 13 }}>\n                                      {\"  \"}\n                                      <span\n                                        style={{\n                                          fontSize: 17,\n                                          fontWeight: \"bold\"\n                                        }}\n                                      >\n                                        &#9650;\n                                      </span>\n                                      {NewDeaths}\n                                    </span>\n                                  )}\n                                </div>\n                                <div>Deaths</div>\n                              </div>\n                              <div\n                                style={{\n                                  padding: 20,\n                                  fontWeight: \"bold\",\n                                  color: \"#2F847C\"\n                                }}\n                              >\n                                <div>{recovered}</div>\n                                <div>Recovered</div>\n                              </div>\n                            </div>\n                            <SimpleLineChart\n                              labels={[\n                                \"Confirmed\",\n                                \"Recovered\",\n                                \"Deaths\",\n                                \"New Conf.\",\n                                \"New Deaths\"\n                              ]}\n                              colors={[\n                                \"#e43339\",\n                                \"#006266\",\n                                \"#535c68\",\n                                \"#192a56\",\n                                \"#192a56\"\n                              ]}\n                              data={data}\n                            />\n                          </div>\n                        </div>\n                      );\n                    })\n                  ) : null}\n                  <br />\n                  {!this.state.selectedCountry ? (\n                    <div className=\"row\" style={{ width: \"100%\", padding: 30 }}>\n                      <Pagination\n                        totalRecords={Object.keys(Countrys).length}\n                        pageLimit={9}\n                        pageNeighbours={1}\n                        onPageChanged={this.onPageChanged}\n                      />\n                    </div>\n                  ) : null}\n                </div>\n              ) : null}\n            </div>\n            <div style={{ padding: 15 }}>\n              Designed and Developed by{\"  \"}\n              <a\n                style={{\n                  color: \"#f6565b\",\n                  fontWeight: \"bold\",\n                  textDecoration: \"none\"\n                }}\n                href=\"https://miteshtagadiya.js.org\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                Mitesh Tagadiya\n              </a>\n            </div>\n          </div>\n        </div>\n      </ErrorBoundary>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport India from \"./India\";\nimport App from \"./App\";\n\nexport class Index extends Component {\n  render() {\n    return (\n      <div>\n        <React.Fragment>\n          <Switch>\n            <Route path=\"/india\" component={India} />\n            <Route path=\"/\" component={App} />\n          </Switch>\n        </React.Fragment>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Index);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ErrorBoundary from \"./ErrorBoundry\";\nimport { Index } from \"./Routes\";\n\nconst routing = (\n  <HashRouter>\n    <ErrorBoundary>\n      <Index />\n    </ErrorBoundary>\n  </HashRouter>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/virus.2d7d3b99.gif\";","module.exports = __webpack_public_path__ + \"static/media/github1.0ba2aa20.png\";","module.exports = __webpack_public_path__ + \"static/media/india.b9bb7cd7.png\";","module.exports = __webpack_public_path__ + \"static/media/world.5a35664b.png\";"],"sourceRoot":""}